<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Charts.v15.2.Core.15.2.4.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager">
            <summary>DevExpress.Charts.ChartData.InteractionManager 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.#ctor(DevExpress.Charts.ChartData.InteractionManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AddSeriesRefinedSeries">
            <summary>设置 InteractionManager.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.AddSeriesRefinedSeries">
            <summary>设置 InteractionManager.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.Clear">
            <summary>设置 InteractionManager.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.DevExpressChartsChartDataIMinMaxValuesCalculatorGetMinAbsValueICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.DevExpress.Charts.ChartData.IMinMaxValuesCalculator.GetMinAbsValue(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.DevExpressChartsChartDataIMinMaxValuesCalculatorGetMinMaxValuesICollectionOfRefinedSeriesIMinMaxValuesListOfIAffectsAxisRange">
            <summary>设置 InteractionManager.DevExpress.Charts.ChartData.IMinMaxValuesCalculator.GetMinMaxValues(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering, List`1&lt;IAffectsAxisRange&gt; indicators) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.FindIndexIListOfRefinedPointIMinMaxValuesInt32OutInt32Out">
            <summary>设置 InteractionManager.FindIndex(IList`1&lt;RefinedPoint&gt; points, IMinMaxValues range, Int32&amp; minIndex, Int32&amp; maxIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.FindInteractionKeysICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.FindInteractionKeys(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetContainerRefinedSeriesBoolean">
            <summary>设置 InteractionManager.GetContainer(RefinedSeries refinedSeries, Boolean onlyExisting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetIndexByArgumentIListOfRefinedPointDoubleBooleanOut">
            <summary>设置 InteractionManager.GetIndexByArgument(IList`1&lt;RefinedPoint&gt; points, Double argument, Boolean&amp; pointIsFound) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetKeyRefinedSeries">
            <summary>设置 InteractionManager.GetKey(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetMinMaxFromSeriesMinMaxValuesRefinedSeriesInt32Int32">
            <summary>设置 InteractionManager.GetMinMaxFromSeries(MinMaxValues totalRange, RefinedSeries refinedSeries, Int32 minIndexX, Int32 maxIndexX) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetMinMaxValuesForWholePointsICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.GetMinMaxValuesForWholePoints(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetMinMaxValuesWithFilteringICollectionOfRefinedSeriesIMinMaxValues">
            <summary>设置 InteractionManager.GetMinMaxValuesWithFiltering(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetSeriesGroupsContainerRefinedSeriesBoolean">
            <summary>设置 InteractionManager.GetSeriesGroupsContainer(RefinedSeries refinedSeries, Boolean onlyExisting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.GetSeriesGroupsKeyRefinedSeries">
            <summary>设置 InteractionManager.GetSeriesGroupsKey(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.HasSameContainersIRefinedSeriesIRefinedSeries">
            <summary>设置 InteractionManager.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.InteractionContainersGet">
            <summary>设置 InteractionManager.get_InteractionContainers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.InteractionContainersKeysGet">
            <summary>设置 InteractionManager.get_InteractionContainersKeys() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.IsEmptyGet">
            <summary>设置 InteractionManager.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.IsFirstInContainerRefinedSeries">
            <summary>设置 InteractionManager.IsFirstInContainer(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.IsFullStackedSeriesISeriesView">
            <summary>设置 InteractionManager.IsFullStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.IsStackedSeriesISeriesView">
            <summary>设置 InteractionManager.IsStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.RecalculateForICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.RecalculateFor(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 InteractionManager.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.SeriesGroupsInteractionContainersGet">
            <summary>设置 InteractionManager.get_SeriesGroupsInteractionContainers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.SeriesGroupsInteractionContainersKeysGet">
            <summary>设置 InteractionManager.get_SeriesGroupsInteractionContainersKeys() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.AllInstances.SwapRefinedSeriesRefinedSeriesRefinedSeries">
            <summary>设置 InteractionManager.SwapRefinedSeries(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.Bind(DevExpress.Charts.ChartData.IMinMaxValuesCalculator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.Clear">
            <summary>设置 InteractionManager.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.Constructor">
            <summary>设置 InteractionManager.InteractionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.DevExpressChartsChartDataIMinMaxValuesCalculatorGetMinAbsValueICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.DevExpress.Charts.ChartData.IMinMaxValuesCalculator.GetMinAbsValue(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.DevExpressChartsChartDataIMinMaxValuesCalculatorGetMinMaxValuesICollectionOfRefinedSeriesIMinMaxValuesListOfIAffectsAxisRange">
            <summary>设置 InteractionManager.DevExpress.Charts.ChartData.IMinMaxValuesCalculator.GetMinMaxValues(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering, List`1&lt;IAffectsAxisRange&gt; indicators) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.FindIndexIListOfRefinedPointIMinMaxValuesInt32OutInt32Out">
            <summary>设置 InteractionManager.FindIndex(IList`1&lt;RefinedPoint&gt; points, IMinMaxValues range, Int32&amp; minIndex, Int32&amp; maxIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.FindInteractionKeysICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.FindInteractionKeys(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetContainerRefinedSeriesBoolean">
            <summary>设置 InteractionManager.GetContainer(RefinedSeries refinedSeries, Boolean onlyExisting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetIndexByArgumentIListOfRefinedPointDoubleBooleanOut">
            <summary>设置 InteractionManager.GetIndexByArgument(IList`1&lt;RefinedPoint&gt; points, Double argument, Boolean&amp; pointIsFound) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetKeyRefinedSeries">
            <summary>设置 InteractionManager.GetKey(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetMinMaxFromSeriesMinMaxValuesRefinedSeriesInt32Int32">
            <summary>设置 InteractionManager.GetMinMaxFromSeries(MinMaxValues totalRange, RefinedSeries refinedSeries, Int32 minIndexX, Int32 maxIndexX) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetMinMaxValuesForWholePointsICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.GetMinMaxValuesForWholePoints(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetMinMaxValuesWithFilteringICollectionOfRefinedSeriesIMinMaxValues">
            <summary>设置 InteractionManager.GetMinMaxValuesWithFiltering(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetSeriesGroupsContainerRefinedSeriesBoolean">
            <summary>设置 InteractionManager.GetSeriesGroupsContainer(RefinedSeries refinedSeries, Boolean onlyExisting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.GetSeriesGroupsKeyRefinedSeries">
            <summary>设置 InteractionManager.GetSeriesGroupsKey(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.HasSameContainersIRefinedSeriesIRefinedSeries">
            <summary>设置 InteractionManager.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.InteractionContainersGet">
            <summary>设置 InteractionManager.get_InteractionContainers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.InteractionContainersKeysGet">
            <summary>设置 InteractionManager.get_InteractionContainersKeys() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.IsEmptyGet">
            <summary>设置 InteractionManager.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.IsFirstInContainerRefinedSeries">
            <summary>设置 InteractionManager.IsFirstInContainer(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.IsFullStackedSeriesISeriesView">
            <summary>设置 InteractionManager.IsFullStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.IsStackedSeriesISeriesView">
            <summary>设置 InteractionManager.IsStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.RecalculateForICollectionOfRefinedSeries">
            <summary>设置 InteractionManager.RecalculateFor(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.RemoveSeriesRefinedSeries">
            <summary>设置 InteractionManager.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.SeriesGroupsInteractionContainersGet">
            <summary>设置 InteractionManager.get_SeriesGroupsInteractionContainers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.SeriesGroupsInteractionContainersKeysGet">
            <summary>设置 InteractionManager.get_SeriesGroupsInteractionContainersKeys() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.ShimInteractionManager.SwapRefinedSeriesRefinedSeriesRefinedSeries">
            <summary>设置 InteractionManager.SwapRefinedSeries(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator">
            <summary>DevExpress.Charts.ChartData.IMinMaxValuesCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator.#ctor">
            <summary>初始化 type StubIMinMaxValuesCalculator 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator.DevExpress#Charts#ChartData#IMinMaxValuesCalculator#GetMinAbsValue(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IMinMaxValuesCalculator.GetMinAbsValue(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator.DevExpress#Charts#ChartData#IMinMaxValuesCalculator#GetMinMaxValues(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries},DevExpress.Charts.Native.IMinMaxValues,System.Collections.Generic.List{DevExpress.Charts.Native.IAffectsAxisRange})">
            <summary>设置 IMinMaxValuesCalculator.GetMinMaxValues(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering, List`1&lt;IAffectsAxisRange&gt; indicators) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator.GetMinAbsValueICollectionOfRefinedSeries">
            <summary>设置 IMinMaxValuesCalculator.GetMinAbsValue(ICollection`1&lt;RefinedSeries&gt; seriesCollection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.ChartData.Fakes.StubIMinMaxValuesCalculator.GetMinMaxValuesICollectionOfRefinedSeriesIMinMaxValuesListOfIAffectsAxisRange">
            <summary>设置 IMinMaxValuesCalculator.GetMinMaxValues(ICollection`1&lt;RefinedSeries&gt; seriesCollection, IMinMaxValues rangeForFiltering, List`1&lt;IAffectsAxisRange&gt; indicators) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.ChartData.Fakes.StubInteractionManager">
            <summary>DevExpress.Charts.ChartData.InteractionManager 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.StubInteractionManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.StubInteractionManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.ChartData.Fakes.StubInteractionManager.InitializeStub">
            <summary>初始化 type StubInteractionManager 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.StubInteractionManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.ChartData.Fakes.StubInteractionManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAreaSeries">
            <summary>DevExpress.Charts.Model.AreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.#ctor(DevExpress.Charts.Model.AreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.AllInstances.ColorEachGet">
            <summary>设置 AreaSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.AllInstances.ColorEachSetBoolean">
            <summary>设置 AreaSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.ColorEachGet">
            <summary>设置 AreaSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.ColorEachSetBoolean">
            <summary>设置 AreaSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeries.Constructor">
            <summary>设置 AreaSeries.AreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase">
            <summary>DevExpress.Charts.Model.AreaSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.#ctor(DevExpress.Charts.Model.AreaSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.AllInstances.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.AllInstances.TransparencyGet">
            <summary>设置 AreaSeriesBase.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.AllInstances.TransparencySetByte">
            <summary>设置 AreaSeriesBase.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.Constructor">
            <summary>设置 AreaSeriesBase.AreaSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.TransparencyGet">
            <summary>设置 AreaSeriesBase.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAreaSeriesBase.TransparencySetByte">
            <summary>设置 AreaSeriesBase.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxis">
            <summary>DevExpress.Charts.Model.Axis 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxis.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxis.#ctor(DevExpress.Charts.Model.Axis)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.PositionGet">
            <summary>设置 Axis.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.PositionSetAxisPosition">
            <summary>设置 Axis.set_Position(AxisPosition value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.ReverseGet">
            <summary>设置 Axis.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.ReverseSetBoolean">
            <summary>设置 Axis.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksCrossAxisGet">
            <summary>设置 Axis.get_TickmarksCrossAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksCrossAxisSetBoolean">
            <summary>设置 Axis.set_TickmarksCrossAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksMinorVisibleGet">
            <summary>设置 Axis.get_TickmarksMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksMinorVisibleSetBoolean">
            <summary>设置 Axis.set_TickmarksMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksVisibleGet">
            <summary>设置 Axis.get_TickmarksVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TickmarksVisibleSetBoolean">
            <summary>设置 Axis.set_TickmarksVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TitleGet">
            <summary>设置 Axis.get_Title() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.AllInstances.TitleSetAxisTitle">
            <summary>设置 Axis.set_Title(AxisTitle value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxis.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxis.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.Constructor">
            <summary>设置 Axis.Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.ConstructorCartesianChart">
            <summary>设置 Axis.Axis(CartesianChart parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.PositionGet">
            <summary>设置 Axis.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.PositionSetAxisPosition">
            <summary>设置 Axis.set_Position(AxisPosition value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.ReverseGet">
            <summary>设置 Axis.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.ReverseSetBoolean">
            <summary>设置 Axis.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksCrossAxisGet">
            <summary>设置 Axis.get_TickmarksCrossAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksCrossAxisSetBoolean">
            <summary>设置 Axis.set_TickmarksCrossAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksMinorVisibleGet">
            <summary>设置 Axis.get_TickmarksMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksMinorVisibleSetBoolean">
            <summary>设置 Axis.set_TickmarksMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksVisibleGet">
            <summary>设置 Axis.get_TickmarksVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TickmarksVisibleSetBoolean">
            <summary>设置 Axis.set_TickmarksVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TitleGet">
            <summary>设置 Axis.get_Title() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxis.TitleSetAxisTitle">
            <summary>设置 Axis.set_Title(AxisTitle value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisAppearance">
            <summary>DevExpress.Charts.Model.AxisAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.#ctor(DevExpress.Charts.Model.AxisAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.ColorGet">
            <summary>设置 AxisAppearance.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.ColorSetColorARGB">
            <summary>设置 AxisAppearance.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesColorGet">
            <summary>设置 AxisAppearance.get_GridLinesColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesColorSetColorARGB">
            <summary>设置 AxisAppearance.set_GridLinesColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesLineStyleGet">
            <summary>设置 AxisAppearance.get_GridLinesLineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesLineStyleSetLineStyle">
            <summary>设置 AxisAppearance.set_GridLinesLineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesMinorColorGet">
            <summary>设置 AxisAppearance.get_GridLinesMinorColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesMinorColorSetColorARGB">
            <summary>设置 AxisAppearance.set_GridLinesMinorColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesMinorLineStyleGet">
            <summary>设置 AxisAppearance.get_GridLinesMinorLineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.GridLinesMinorLineStyleSetLineStyle">
            <summary>设置 AxisAppearance.set_GridLinesMinorLineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedColorGet">
            <summary>设置 AxisAppearance.get_InterlacedColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedColorSetColorARGB">
            <summary>设置 AxisAppearance.set_InterlacedColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedFillStyleGet">
            <summary>设置 AxisAppearance.get_InterlacedFillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedFillStyleSetFillStyle">
            <summary>设置 AxisAppearance.set_InterlacedFillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedGet">
            <summary>设置 AxisAppearance.get_Interlaced() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.InterlacedSetBoolean">
            <summary>设置 AxisAppearance.set_Interlaced(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.LabelTextColorGet">
            <summary>设置 AxisAppearance.get_LabelTextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.LabelTextColorSetColorARGB">
            <summary>设置 AxisAppearance.set_LabelTextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.ThicknessGet">
            <summary>设置 AxisAppearance.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.ThicknessSetInt32">
            <summary>设置 AxisAppearance.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.TitleAppearanceGet">
            <summary>设置 AxisAppearance.get_TitleAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.AllInstances.TitleAppearanceSetAxisTitleAppearance">
            <summary>设置 AxisAppearance.set_TitleAppearance(AxisTitleAppearance value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.ColorGet">
            <summary>设置 AxisAppearance.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.ColorSetColorARGB">
            <summary>设置 AxisAppearance.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.Constructor">
            <summary>设置 AxisAppearance.AxisAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesColorGet">
            <summary>设置 AxisAppearance.get_GridLinesColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesColorSetColorARGB">
            <summary>设置 AxisAppearance.set_GridLinesColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesLineStyleGet">
            <summary>设置 AxisAppearance.get_GridLinesLineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesLineStyleSetLineStyle">
            <summary>设置 AxisAppearance.set_GridLinesLineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesMinorColorGet">
            <summary>设置 AxisAppearance.get_GridLinesMinorColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesMinorColorSetColorARGB">
            <summary>设置 AxisAppearance.set_GridLinesMinorColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesMinorLineStyleGet">
            <summary>设置 AxisAppearance.get_GridLinesMinorLineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.GridLinesMinorLineStyleSetLineStyle">
            <summary>设置 AxisAppearance.set_GridLinesMinorLineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedColorGet">
            <summary>设置 AxisAppearance.get_InterlacedColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedColorSetColorARGB">
            <summary>设置 AxisAppearance.set_InterlacedColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedFillStyleGet">
            <summary>设置 AxisAppearance.get_InterlacedFillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedFillStyleSetFillStyle">
            <summary>设置 AxisAppearance.set_InterlacedFillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedGet">
            <summary>设置 AxisAppearance.get_Interlaced() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.InterlacedSetBoolean">
            <summary>设置 AxisAppearance.set_Interlaced(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.LabelTextColorGet">
            <summary>设置 AxisAppearance.get_LabelTextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.LabelTextColorSetColorARGB">
            <summary>设置 AxisAppearance.set_LabelTextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.ThicknessGet">
            <summary>设置 AxisAppearance.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.ThicknessSetInt32">
            <summary>设置 AxisAppearance.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.TitleAppearanceGet">
            <summary>设置 AxisAppearance.get_TitleAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisAppearance.TitleAppearanceSetAxisTitleAppearance">
            <summary>设置 AxisAppearance.set_TitleAppearance(AxisTitleAppearance value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisBase">
            <summary>DevExpress.Charts.Model.AxisBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisBase.#ctor(DevExpress.Charts.Model.AxisBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.AppearanceGet">
            <summary>设置 AxisBase.get_Appearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.AppearanceSetAxisAppearance">
            <summary>设置 AxisBase.set_Appearance(AxisAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.GridLinesMinorVisibleGet">
            <summary>设置 AxisBase.get_GridLinesMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.GridLinesMinorVisibleSetBoolean">
            <summary>设置 AxisBase.set_GridLinesMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.GridLinesVisibleGet">
            <summary>设置 AxisBase.get_GridLinesVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.GridLinesVisibleSetBoolean">
            <summary>设置 AxisBase.set_GridLinesVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.LabelGet">
            <summary>设置 AxisBase.get_Label() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.LabelSetAxisLabel">
            <summary>设置 AxisBase.set_Label(AxisLabel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.RangeGet">
            <summary>设置 AxisBase.get_Range() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.RangeSetAxisRange">
            <summary>设置 AxisBase.set_Range(AxisRange value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.VisibleGet">
            <summary>设置 AxisBase.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AllInstances.VisibleSetBoolean">
            <summary>设置 AxisBase.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AppearanceGet">
            <summary>设置 AxisBase.get_Appearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.AppearanceSetAxisAppearance">
            <summary>设置 AxisBase.set_Appearance(AxisAppearance value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.Constructor">
            <summary>设置 AxisBase.AxisBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.ConstructorChart">
            <summary>设置 AxisBase.AxisBase(Chart parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.GridLinesMinorVisibleGet">
            <summary>设置 AxisBase.get_GridLinesMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.GridLinesMinorVisibleSetBoolean">
            <summary>设置 AxisBase.set_GridLinesMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.GridLinesVisibleGet">
            <summary>设置 AxisBase.get_GridLinesVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.GridLinesVisibleSetBoolean">
            <summary>设置 AxisBase.set_GridLinesVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.LabelGet">
            <summary>设置 AxisBase.get_Label() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.LabelSetAxisLabel">
            <summary>设置 AxisBase.set_Label(AxisLabel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.RangeGet">
            <summary>设置 AxisBase.get_Range() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.RangeSetAxisRange">
            <summary>设置 AxisBase.set_Range(AxisRange value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.VisibleGet">
            <summary>设置 AxisBase.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisBase.VisibleSetBoolean">
            <summary>设置 AxisBase.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisCollection">
            <summary>DevExpress.Charts.Model.AxisCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.#ctor(DevExpress.Charts.Model.AxisCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Model.Axis})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Model.Axis})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Model.Axis})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisCollection.ConstructorCartesianChart">
            <summary>设置 AxisCollection.AxisCollection(CartesianChart parent) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisLabel">
            <summary>DevExpress.Charts.Model.AxisLabel 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisLabel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisLabel.#ctor(DevExpress.Charts.Model.AxisLabel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.EnableAntialiasingGet">
            <summary>设置 AxisLabel.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 AxisLabel.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.FormatterGet">
            <summary>设置 AxisLabel.get_Formatter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.FormatterSetIAxisLabelFormatter">
            <summary>设置 AxisLabel.set_Formatter(IAxisLabelFormatter value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.VisibleGet">
            <summary>设置 AxisLabel.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.AllInstances.VisibleSetBoolean">
            <summary>设置 AxisLabel.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisLabel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisLabel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.ConstructorAxisBase">
            <summary>设置 AxisLabel.AxisLabel(AxisBase parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.EnableAntialiasingGet">
            <summary>设置 AxisLabel.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 AxisLabel.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.FormatterGet">
            <summary>设置 AxisLabel.get_Formatter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.FormatterSetIAxisLabelFormatter">
            <summary>设置 AxisLabel.set_Formatter(IAxisLabelFormatter value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.VisibleGet">
            <summary>设置 AxisLabel.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisLabel.VisibleSetBoolean">
            <summary>设置 AxisLabel.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisRange">
            <summary>DevExpress.Charts.Model.AxisRange 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisRange.#ctor(DevExpress.Charts.Model.AxisRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.AllInstances.MaxValueGet">
            <summary>设置 AxisRange.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.AllInstances.MaxValueSetObject">
            <summary>设置 AxisRange.set_MaxValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.AllInstances.MinValueGet">
            <summary>设置 AxisRange.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.AllInstances.MinValueSetObject">
            <summary>设置 AxisRange.set_MinValue(Object value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.ConstructorAxisBase">
            <summary>设置 AxisRange.AxisRange(AxisBase parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.MaxValueGet">
            <summary>设置 AxisRange.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.MaxValueSetObject">
            <summary>设置 AxisRange.set_MaxValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.MinValueGet">
            <summary>设置 AxisRange.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisRange.MinValueSetObject">
            <summary>设置 AxisRange.set_MinValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisTitle">
            <summary>DevExpress.Charts.Model.AxisTitle 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitle.#ctor(DevExpress.Charts.Model.AxisTitle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisTitle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.AllInstances.TextGet">
            <summary>设置 AxisTitle.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.AllInstances.TextSetString">
            <summary>设置 AxisTitle.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.AllInstances.VisibleGet">
            <summary>设置 AxisTitle.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.AllInstances.VisibleSetBoolean">
            <summary>设置 AxisTitle.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.ConstructorAxis">
            <summary>设置 AxisTitle.AxisTitle(Axis parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.TextGet">
            <summary>设置 AxisTitle.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.TextSetString">
            <summary>设置 AxisTitle.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.VisibleGet">
            <summary>设置 AxisTitle.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitle.VisibleSetBoolean">
            <summary>设置 AxisTitle.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance">
            <summary>DevExpress.Charts.Model.AxisTitleAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.#ctor(DevExpress.Charts.Model.AxisTitleAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimAxisTitleAppearance.Constructor">
            <summary>设置 AxisTitleAppearance.AxisTitleAppearance() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBarSeries">
            <summary>DevExpress.Charts.Model.BarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.#ctor(DevExpress.Charts.Model.BarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.BarWidthGet">
            <summary>设置 BarSeries.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.BarWidthSetDouble">
            <summary>设置 BarSeries.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.ModelGet">
            <summary>设置 BarSeries.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.ModelSetBar3DModel">
            <summary>设置 BarSeries.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.TransparencyGet">
            <summary>设置 BarSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.AllInstances.TransparencySetByte">
            <summary>设置 BarSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.BarWidthGet">
            <summary>设置 BarSeries.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.BarWidthSetDouble">
            <summary>设置 BarSeries.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.Constructor">
            <summary>设置 BarSeries.BarSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.ModelGet">
            <summary>设置 BarSeries.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.ModelSetBar3DModel">
            <summary>设置 BarSeries.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.TransparencyGet">
            <summary>设置 BarSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBarSeries.TransparencySetByte">
            <summary>设置 BarSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBorder">
            <summary>DevExpress.Charts.Model.Border 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBorder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBorder.#ctor(DevExpress.Charts.Model.Border)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBorder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.AllInstances.ColorGet">
            <summary>设置 Border.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.AllInstances.ColorSetColorARGB">
            <summary>设置 Border.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.AllInstances.ThicknessGet">
            <summary>设置 Border.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.AllInstances.ThicknessSetInt32">
            <summary>设置 Border.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBorder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBorder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.ColorGet">
            <summary>设置 Border.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.ColorSetColorARGB">
            <summary>设置 Border.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.Constructor">
            <summary>设置 Border.Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.ConstructorModelElement">
            <summary>设置 Border.Border(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.ThicknessGet">
            <summary>设置 Border.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBorder.ThicknessSetInt32">
            <summary>设置 Border.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBubbleSeries">
            <summary>DevExpress.Charts.Model.BubbleSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.#ctor(DevExpress.Charts.Model.BubbleSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.CreatePropertyBag">
            <summary>设置 BubbleSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.MaxSizeGet">
            <summary>设置 BubbleSeries.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.MaxSizeSetDouble">
            <summary>设置 BubbleSeries.set_MaxSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.MinSizeGet">
            <summary>设置 BubbleSeries.get_MinSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.MinSizeSetDouble">
            <summary>设置 BubbleSeries.set_MinSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.TransparencyGet">
            <summary>设置 BubbleSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.AllInstances.TransparencySetByte">
            <summary>设置 BubbleSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.Constructor">
            <summary>设置 BubbleSeries.BubbleSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.CreatePropertyBag">
            <summary>设置 BubbleSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.MaxSizeGet">
            <summary>设置 BubbleSeries.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.MaxSizeSetDouble">
            <summary>设置 BubbleSeries.set_MaxSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.MinSizeGet">
            <summary>设置 BubbleSeries.get_MinSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.MinSizeSetDouble">
            <summary>设置 BubbleSeries.set_MinSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.TransparencyGet">
            <summary>设置 BubbleSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimBubbleSeries.TransparencySetByte">
            <summary>设置 BubbleSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries">
            <summary>DevExpress.Charts.Model.CandleStickSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.#ctor(DevExpress.Charts.Model.CandleStickSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCandleStickSeries.Constructor">
            <summary>设置 CandleStickSeries.CandleStickSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart">
            <summary>DevExpress.Charts.Model.Cartesian3DChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.#ctor(DevExpress.Charts.Model.Cartesian3DChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.AllInstances.IsSeriesValidSeriesModel">
            <summary>设置 Cartesian3DChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.AllInstances.Options3DGet">
            <summary>设置 Cartesian3DChart.get_Options3D() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.Bind(DevExpress.Charts.Model.IChart3D)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.Constructor">
            <summary>设置 Cartesian3DChart.Cartesian3DChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.IsSeriesValidSeriesModel">
            <summary>设置 Cartesian3DChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesian3DChart.Options3DGet">
            <summary>设置 Cartesian3DChart.get_Options3D() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesianChart">
            <summary>DevExpress.Charts.Model.CartesianChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianChart.#ctor(DevExpress.Charts.Model.CartesianChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.ArgumentAxisGet">
            <summary>设置 CartesianChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.ArgumentAxisSetAxis">
            <summary>设置 CartesianChart.set_ArgumentAxis(Axis value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.BarDistanceFixedGet">
            <summary>设置 CartesianChart.get_BarDistanceFixed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.BarDistanceFixedSetInt32">
            <summary>设置 CartesianChart.set_BarDistanceFixed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.BarDistanceGet">
            <summary>设置 CartesianChart.get_BarDistance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.BarDistanceSetDouble">
            <summary>设置 CartesianChart.set_BarDistance(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.IsSeriesValidSeriesModel">
            <summary>设置 CartesianChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.RotatedGet">
            <summary>设置 CartesianChart.get_Rotated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.RotatedSetBoolean">
            <summary>设置 CartesianChart.set_Rotated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.SecondaryArgumentAxesGet">
            <summary>设置 CartesianChart.get_SecondaryArgumentAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.SecondaryValueAxesGet">
            <summary>设置 CartesianChart.get_SecondaryValueAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.ValueAxisGet">
            <summary>设置 CartesianChart.get_ValueAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.AllInstances.ValueAxisSetAxis">
            <summary>设置 CartesianChart.set_ValueAxis(Axis value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.ArgumentAxisGet">
            <summary>设置 CartesianChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.ArgumentAxisSetAxis">
            <summary>设置 CartesianChart.set_ArgumentAxis(Axis value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BarDistanceFixedGet">
            <summary>设置 CartesianChart.get_BarDistanceFixed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BarDistanceFixedSetInt32">
            <summary>设置 CartesianChart.set_BarDistanceFixed(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BarDistanceGet">
            <summary>设置 CartesianChart.get_BarDistance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BarDistanceSetDouble">
            <summary>设置 CartesianChart.set_BarDistance(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.Constructor">
            <summary>设置 CartesianChart.CartesianChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.IsSeriesValidSeriesModel">
            <summary>设置 CartesianChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.RotatedGet">
            <summary>设置 CartesianChart.get_Rotated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.RotatedSetBoolean">
            <summary>设置 CartesianChart.set_Rotated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.SecondaryArgumentAxesGet">
            <summary>设置 CartesianChart.get_SecondaryArgumentAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.SecondaryValueAxesGet">
            <summary>设置 CartesianChart.get_SecondaryValueAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.ValueAxisGet">
            <summary>设置 CartesianChart.get_ValueAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianChart.ValueAxisSetAxis">
            <summary>设置 CartesianChart.set_ValueAxis(Axis value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.CartesianSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.#ctor(DevExpress.Charts.Model.CartesianSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.AllInstances.SecondaryArgumentAxisIndexGet">
            <summary>设置 CartesianSeriesBase.get_SecondaryArgumentAxisIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.AllInstances.SecondaryArgumentAxisIndexSetInt32">
            <summary>设置 CartesianSeriesBase.set_SecondaryArgumentAxisIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.AllInstances.SecondaryValueAxisIndexGet">
            <summary>设置 CartesianSeriesBase.get_SecondaryValueAxisIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.AllInstances.SecondaryValueAxisIndexSetInt32">
            <summary>设置 CartesianSeriesBase.set_SecondaryValueAxisIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.Constructor">
            <summary>设置 CartesianSeriesBase.CartesianSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.SecondaryArgumentAxisIndexGet">
            <summary>设置 CartesianSeriesBase.get_SecondaryArgumentAxisIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.SecondaryArgumentAxisIndexSetInt32">
            <summary>设置 CartesianSeriesBase.set_SecondaryArgumentAxisIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.SecondaryValueAxisIndexGet">
            <summary>设置 CartesianSeriesBase.get_SecondaryValueAxisIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCartesianSeriesBase.SecondaryValueAxisIndexSetInt32">
            <summary>设置 CartesianSeriesBase.set_SecondaryValueAxisIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChart">
            <summary>DevExpress.Charts.Model.Chart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChart.#ctor(DevExpress.Charts.Model.Chart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.AppearanceGet">
            <summary>设置 Chart.get_Appearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.AppearanceSetChartAppearanceOptions">
            <summary>设置 Chart.set_Appearance(ChartAppearanceOptions value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.DataSourceGet">
            <summary>设置 Chart.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.DataSourceSetObject">
            <summary>设置 Chart.set_DataSource(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.LegendGet">
            <summary>设置 Chart.get_Legend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.LegendSetLegend">
            <summary>设置 Chart.set_Legend(Legend value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.PaletteGet">
            <summary>设置 Chart.get_Palette() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.PaletteSetPalette">
            <summary>设置 Chart.set_Palette(Palette value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.SeriesGet">
            <summary>设置 Chart.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AllInstances.TitlesGet">
            <summary>设置 Chart.get_Titles() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AppearanceGet">
            <summary>设置 Chart.get_Appearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.AppearanceSetChartAppearanceOptions">
            <summary>设置 Chart.set_Appearance(ChartAppearanceOptions value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.Constructor">
            <summary>设置 Chart.Chart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.DataSourceGet">
            <summary>设置 Chart.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.DataSourceSetObject">
            <summary>设置 Chart.set_DataSource(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.LegendGet">
            <summary>设置 Chart.get_Legend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.LegendSetLegend">
            <summary>设置 Chart.set_Legend(Legend value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.PaletteGet">
            <summary>设置 Chart.get_Palette() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.PaletteSetPalette">
            <summary>设置 Chart.set_Palette(Palette value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.SeriesGet">
            <summary>设置 Chart.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChart.TitlesGet">
            <summary>设置 Chart.get_Titles() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartAppearance">
            <summary>DevExpress.Charts.Model.ChartAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearance.#ctor(DevExpress.Charts.Model.ChartAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.BackColorGet">
            <summary>设置 ChartAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.BackColorSetColorARGB">
            <summary>设置 ChartAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.BorderGet">
            <summary>设置 ChartAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.BorderSetBorder">
            <summary>设置 ChartAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.FillStyleGet">
            <summary>设置 ChartAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 ChartAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.PaddingGet">
            <summary>设置 ChartAppearance.get_Padding() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.PaddingSetRectangleIndents">
            <summary>设置 ChartAppearance.set_Padding(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.TitleAppearanceGet">
            <summary>设置 ChartAppearance.get_TitleAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.AllInstances.TitleAppearanceSetChartTitleAppearance">
            <summary>设置 ChartAppearance.set_TitleAppearance(ChartTitleAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BackColorGet">
            <summary>设置 ChartAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BackColorSetColorARGB">
            <summary>设置 ChartAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BorderGet">
            <summary>设置 ChartAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.BorderSetBorder">
            <summary>设置 ChartAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.Constructor">
            <summary>设置 ChartAppearance.ChartAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.FillStyleGet">
            <summary>设置 ChartAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.FillStyleSetFillStyle">
            <summary>设置 ChartAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.PaddingGet">
            <summary>设置 ChartAppearance.get_Padding() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.PaddingSetRectangleIndents">
            <summary>设置 ChartAppearance.set_Padding(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.TitleAppearanceGet">
            <summary>设置 ChartAppearance.get_TitleAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearance.TitleAppearanceSetChartTitleAppearance">
            <summary>设置 ChartAppearance.set_TitleAppearance(ChartTitleAppearance value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions">
            <summary>DevExpress.Charts.Model.ChartAppearanceOptions 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.#ctor(DevExpress.Charts.Model.ChartAppearanceOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.ChartAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_ChartAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.ChartAppearanceSetChartAppearance">
            <summary>设置 ChartAppearanceOptions.set_ChartAppearance(ChartAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.DiagrammAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_DiagrammAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.DiagrammAppearanceSetDiagrammAppearance">
            <summary>设置 ChartAppearanceOptions.set_DiagrammAppearance(DiagrammAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.LegendAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_LegendAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.LegendAppearanceSetLegendAppearance">
            <summary>设置 ChartAppearanceOptions.set_LegendAppearance(LegendAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.SeriesAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_SeriesAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.AllInstances.SeriesAppearanceSetSeriesAppearance">
            <summary>设置 ChartAppearanceOptions.set_SeriesAppearance(SeriesAppearance value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.ChartAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_ChartAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.ChartAppearanceSetChartAppearance">
            <summary>设置 ChartAppearanceOptions.set_ChartAppearance(ChartAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.Constructor">
            <summary>设置 ChartAppearanceOptions.ChartAppearanceOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.DiagrammAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_DiagrammAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.DiagrammAppearanceSetDiagrammAppearance">
            <summary>设置 ChartAppearanceOptions.set_DiagrammAppearance(DiagrammAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.LegendAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_LegendAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.LegendAppearanceSetLegendAppearance">
            <summary>设置 ChartAppearanceOptions.set_LegendAppearance(LegendAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.SeriesAppearanceGet">
            <summary>设置 ChartAppearanceOptions.get_SeriesAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartAppearanceOptions.SeriesAppearanceSetSeriesAppearance">
            <summary>设置 ChartAppearanceOptions.set_SeriesAppearance(SeriesAppearance value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartModelException">
            <summary>DevExpress.Charts.Model.ChartModelException 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartModelException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartModelException.#ctor(DevExpress.Charts.Model.ChartModelException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartModelException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartModelException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartModelException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartModelException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartModelException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartModelException.ConstructorString">
            <summary>设置 ChartModelException.ChartModelException(String message) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartModelException.ThrowNullReferenceExceptionString">
            <summary>设置 ChartModelException.ThrowNullReferenceException(String objectName) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitle">
            <summary>DevExpress.Charts.Model.ChartTitle 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitle.#ctor(DevExpress.Charts.Model.ChartTitle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.AllInstances.LinesGet">
            <summary>设置 ChartTitle.get_Lines() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.AllInstances.LinesSetStringArray">
            <summary>设置 ChartTitle.set_Lines(String[] value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.Constructor">
            <summary>设置 ChartTitle.ChartTitle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.LinesGet">
            <summary>设置 ChartTitle.get_Lines() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitle.LinesSetStringArray">
            <summary>设置 ChartTitle.set_Lines(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance">
            <summary>DevExpress.Charts.Model.ChartTitleAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.#ctor(DevExpress.Charts.Model.ChartTitleAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.AllInstances.IndentGet">
            <summary>设置 ChartTitleAppearance.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.AllInstances.IndentSetInt32">
            <summary>设置 ChartTitleAppearance.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.Constructor">
            <summary>设置 ChartTitleAppearance.ChartTitleAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.IndentGet">
            <summary>设置 ChartTitleAppearance.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleAppearance.IndentSetInt32">
            <summary>设置 ChartTitleAppearance.set_Indent(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection">
            <summary>DevExpress.Charts.Model.ChartTitleCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.#ctor(DevExpress.Charts.Model.ChartTitleCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Model.ChartTitle})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Model.ChartTitle})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Model.ChartTitle})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimChartTitleCollection.ConstructorChart">
            <summary>设置 ChartTitleCollection.ChartTitleCollection(Chart parent) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCircularAxisY">
            <summary>DevExpress.Charts.Model.CircularAxisY 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.#ctor(DevExpress.Charts.Model.CircularAxisY)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksCrossAxisGet">
            <summary>设置 CircularAxisY.get_TickmarksCrossAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksCrossAxisSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksCrossAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksMinorVisibleGet">
            <summary>设置 CircularAxisY.get_TickmarksMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksMinorVisibleSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksVisibleGet">
            <summary>设置 CircularAxisY.get_TickmarksVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.AllInstances.TickmarksVisibleSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.Constructor">
            <summary>设置 CircularAxisY.CircularAxisY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksCrossAxisGet">
            <summary>设置 CircularAxisY.get_TickmarksCrossAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksCrossAxisSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksCrossAxis(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksMinorVisibleGet">
            <summary>设置 CircularAxisY.get_TickmarksMinorVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksMinorVisibleSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksMinorVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksVisibleGet">
            <summary>设置 CircularAxisY.get_TickmarksVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularAxisY.TickmarksVisibleSetBoolean">
            <summary>设置 CircularAxisY.set_TickmarksVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCircularChart">
            <summary>DevExpress.Charts.Model.CircularChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularChart.#ctor(DevExpress.Charts.Model.CircularChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.DirectionGet">
            <summary>设置 CircularChart.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.DirectionSetDirectionMode">
            <summary>设置 CircularChart.set_Direction(DirectionMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.StyleGet">
            <summary>设置 CircularChart.get_Style() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.StyleSetCircularDiagramStyle">
            <summary>设置 CircularChart.set_Style(CircularDiagramStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.ValueAxisGet">
            <summary>设置 CircularChart.get_ValueAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.AllInstances.ValueAxisSetCircularAxisY">
            <summary>设置 CircularChart.set_ValueAxis(CircularAxisY value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimCircularChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.Constructor">
            <summary>设置 CircularChart.CircularChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.DirectionGet">
            <summary>设置 CircularChart.get_Direction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.DirectionSetDirectionMode">
            <summary>设置 CircularChart.set_Direction(DirectionMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.StyleGet">
            <summary>设置 CircularChart.get_Style() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.StyleSetCircularDiagramStyle">
            <summary>设置 CircularChart.set_Style(CircularDiagramStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.ValueAxisGet">
            <summary>设置 CircularChart.get_ValueAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimCircularChart.ValueAxisSetCircularAxisY">
            <summary>设置 CircularChart.set_ValueAxis(CircularAxisY value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorARGB">
            <summary>DevExpress.Charts.Model.ColorARGB 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorARGB.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorARGB.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorARGB.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorARGB.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.EqualityOpColorARGBColorARGB">
            <summary>设置 ColorARGB.op_Equality(ColorARGB color1, ColorARGB color2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.EqualsColorARGBColorARGB">
            <summary>设置 ColorARGB.Equals(ColorARGB color1, ColorARGB color2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.InequalityOpColorARGBColorARGB">
            <summary>设置 ColorARGB.op_Inequality(ColorARGB color1, ColorARGB color2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.ParseString">
            <summary>设置 ColorARGB.Parse(String argbColor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorARGB.StaticConstructor">
            <summary>设置 ColorARGB.ColorARGB() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachCartesianSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.#ctor(DevExpress.Charts.Model.ColorEachCartesianSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.AllInstances.ColorEachGet">
            <summary>设置 ColorEachCartesianSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.AllInstances.ColorEachSetBoolean">
            <summary>设置 ColorEachCartesianSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.AllInstances.CreatePropertyBag">
            <summary>设置 ColorEachCartesianSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.ColorEachGet">
            <summary>设置 ColorEachCartesianSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.ColorEachSetBoolean">
            <summary>设置 ColorEachCartesianSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.Constructor">
            <summary>设置 ColorEachCartesianSeriesBase.ColorEachCartesianSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachCartesianSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachCartesianSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachMarkerCartesianSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.#ctor(DevExpress.Charts.Model.ColorEachMarkerCartesianSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.AllInstances.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.AllInstances.MarkerGet">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.AllInstances.MarkerSetMarker">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.Constructor">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.ColorEachMarkerCartesianSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.MarkerGet">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerCartesianSeriesBase.MarkerSetMarker">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachMarkerSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.#ctor(DevExpress.Charts.Model.ColorEachMarkerSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances.ColorEachGet">
            <summary>设置 ColorEachMarkerSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances.ColorEachSetBoolean">
            <summary>设置 ColorEachMarkerSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances.MarkerGet">
            <summary>设置 ColorEachMarkerSeriesBase.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.AllInstances.MarkerSetMarker">
            <summary>设置 ColorEachMarkerSeriesBase.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.ColorEachGet">
            <summary>设置 ColorEachMarkerSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.ColorEachSetBoolean">
            <summary>设置 ColorEachMarkerSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.Constructor">
            <summary>设置 ColorEachMarkerSeriesBase.ColorEachMarkerSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.MarkerGet">
            <summary>设置 ColorEachMarkerSeriesBase.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimColorEachMarkerSeriesBase.MarkerSetMarker">
            <summary>设置 ColorEachMarkerSeriesBase.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimController">
            <summary>DevExpress.Charts.Model.Controller 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimController.#ctor(DevExpress.Charts.Model.Controller)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ChartModelGet">
            <summary>设置 Controller.get_ChartModel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ChartModelSetChart">
            <summary>设置 Controller.set_ChartModel(Chart value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ClearElementContainer">
            <summary>设置 Controller.ClearElementContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.CreateHitInfoObject">
            <summary>设置 Controller.CreateHitInfo(Object hitObject) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.DevExpressChartsModelIModelListenerOnModelUpdatedUpdateInfo">
            <summary>设置 Controller.DevExpress.Charts.Model.IModelListener.OnModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ElementContainerGet">
            <summary>设置 Controller.get_ElementContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ModelUpdatedAddModelUpdatedEventHandler">
            <summary>设置 Controller.add_ModelUpdated(ModelUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.ModelUpdatedRemoveModelUpdatedEventHandler">
            <summary>设置 Controller.remove_ModelUpdated(ModelUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.OnModelUpdatedUpdateInfo">
            <summary>设置 Controller.OnModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.RaiseModelUpdatedUpdateInfo">
            <summary>设置 Controller.RaiseModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.AllInstances.UpdateModelListenerChartIModelListener">
            <summary>设置 Controller.UpdateModelListener(Chart model, IModelListener listener) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimController.Bind(DevExpress.Charts.Model.IModelListener)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ChartModelGet">
            <summary>设置 Controller.get_ChartModel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ChartModelSetChart">
            <summary>设置 Controller.set_ChartModel(Chart value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ClearElementContainer">
            <summary>设置 Controller.ClearElementContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.Constructor">
            <summary>设置 Controller.Controller() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.CreateHitInfoObject">
            <summary>设置 Controller.CreateHitInfo(Object hitObject) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.DevExpressChartsModelIModelListenerOnModelUpdatedUpdateInfo">
            <summary>设置 Controller.DevExpress.Charts.Model.IModelListener.OnModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ElementContainerGet">
            <summary>设置 Controller.get_ElementContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ModelUpdatedAddModelUpdatedEventHandler">
            <summary>设置 Controller.add_ModelUpdated(ModelUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.ModelUpdatedRemoveModelUpdatedEventHandler">
            <summary>设置 Controller.remove_ModelUpdated(ModelUpdatedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.OnModelUpdatedUpdateInfo">
            <summary>设置 Controller.OnModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.RaiseModelUpdatedUpdateInfo">
            <summary>设置 Controller.RaiseModelUpdated(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimController.UpdateModelListenerChartIModelListener">
            <summary>设置 Controller.UpdateModelListener(Chart model, IModelListener listener) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance">
            <summary>DevExpress.Charts.Model.DiagrammAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.#ctor(DevExpress.Charts.Model.DiagrammAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.AxesAppearanceGet">
            <summary>设置 DiagrammAppearance.get_AxesAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.AxesAppearanceSetAxisAppearance">
            <summary>设置 DiagrammAppearance.set_AxesAppearance(AxisAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BackColorGet">
            <summary>设置 DiagrammAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BackColorSetColorARGB">
            <summary>设置 DiagrammAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BorderColorGet">
            <summary>设置 DiagrammAppearance.get_BorderColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BorderColorSetColorARGB">
            <summary>设置 DiagrammAppearance.set_BorderColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BorderVisibleGet">
            <summary>设置 DiagrammAppearance.get_BorderVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.BorderVisibleSetBoolean">
            <summary>设置 DiagrammAppearance.set_BorderVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.FillStyleGet">
            <summary>设置 DiagrammAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 DiagrammAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.MarginsGet">
            <summary>设置 DiagrammAppearance.get_Margins() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.MarginsSetRectangleIndents">
            <summary>设置 DiagrammAppearance.set_Margins(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.ShadowGet">
            <summary>设置 DiagrammAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AllInstances.ShadowSetShadow">
            <summary>设置 DiagrammAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AxesAppearanceGet">
            <summary>设置 DiagrammAppearance.get_AxesAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.AxesAppearanceSetAxisAppearance">
            <summary>设置 DiagrammAppearance.set_AxesAppearance(AxisAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BackColorGet">
            <summary>设置 DiagrammAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BackColorSetColorARGB">
            <summary>设置 DiagrammAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BorderColorGet">
            <summary>设置 DiagrammAppearance.get_BorderColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BorderColorSetColorARGB">
            <summary>设置 DiagrammAppearance.set_BorderColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BorderVisibleGet">
            <summary>设置 DiagrammAppearance.get_BorderVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.BorderVisibleSetBoolean">
            <summary>设置 DiagrammAppearance.set_BorderVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.Constructor">
            <summary>设置 DiagrammAppearance.DiagrammAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.FillStyleGet">
            <summary>设置 DiagrammAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.FillStyleSetFillStyle">
            <summary>设置 DiagrammAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.MarginsGet">
            <summary>设置 DiagrammAppearance.get_Margins() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.MarginsSetRectangleIndents">
            <summary>设置 DiagrammAppearance.set_Margins(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.ShadowGet">
            <summary>设置 DiagrammAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDiagrammAppearance.ShadowSetShadow">
            <summary>设置 DiagrammAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimDonutSeries">
            <summary>DevExpress.Charts.Model.DonutSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDonutSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDonutSeries.#ctor(DevExpress.Charts.Model.DonutSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimDonutSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.AllInstances.HoleRadiusPercentGet">
            <summary>设置 DonutSeries.get_HoleRadiusPercent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.AllInstances.HoleRadiusPercentSetInt32">
            <summary>设置 DonutSeries.set_HoleRadiusPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDonutSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimDonutSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.Constructor">
            <summary>设置 DonutSeries.DonutSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.HoleRadiusPercentGet">
            <summary>设置 DonutSeries.get_HoleRadiusPercent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimDonutSeries.HoleRadiusPercentSetInt32">
            <summary>设置 DonutSeries.set_HoleRadiusPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFillOptions">
            <summary>DevExpress.Charts.Model.FillOptions 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillOptions.#ctor(DevExpress.Charts.Model.FillOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFillOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.AllInstances.Color2Get">
            <summary>设置 FillOptions.get_Color2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.AllInstances.Color2SetColorARGB">
            <summary>设置 FillOptions.set_Color2(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.AllInstances.GradientModeGet">
            <summary>设置 FillOptions.get_GradientMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.AllInstances.GradientModeSetGradientMode">
            <summary>设置 FillOptions.set_GradientMode(GradientMode value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.Color2Get">
            <summary>设置 FillOptions.get_Color2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.Color2SetColorARGB">
            <summary>设置 FillOptions.set_Color2(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.Constructor">
            <summary>设置 FillOptions.FillOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.GradientModeGet">
            <summary>设置 FillOptions.get_GradientMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillOptions.GradientModeSetGradientMode">
            <summary>设置 FillOptions.set_GradientMode(GradientMode value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFillStyle">
            <summary>DevExpress.Charts.Model.FillStyle 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillStyle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillStyle.#ctor(DevExpress.Charts.Model.FillStyle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFillStyle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.AllInstances.FillModeGet">
            <summary>设置 FillStyle.get_FillMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.AllInstances.FillModeSetFillMode">
            <summary>设置 FillStyle.set_FillMode(FillMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.AllInstances.OptionsGet">
            <summary>设置 FillStyle.get_Options() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.AllInstances.OptionsSetFillOptions">
            <summary>设置 FillStyle.set_Options(FillOptions value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillStyle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFillStyle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.Constructor">
            <summary>设置 FillStyle.FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.FillModeGet">
            <summary>设置 FillStyle.get_FillMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.FillModeSetFillMode">
            <summary>设置 FillStyle.set_FillMode(FillMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.OptionsGet">
            <summary>设置 FillStyle.get_Options() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFillStyle.OptionsSetFillOptions">
            <summary>设置 FillStyle.set_Options(FillOptions value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries">
            <summary>DevExpress.Charts.Model.FullStackedAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.#ctor(DevExpress.Charts.Model.FullStackedAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedAreaSeries.Constructor">
            <summary>设置 FullStackedAreaSeries.FullStackedAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries">
            <summary>DevExpress.Charts.Model.FullStackedBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.#ctor(DevExpress.Charts.Model.FullStackedBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedBarSeries.Constructor">
            <summary>设置 FullStackedBarSeries.FullStackedBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries">
            <summary>DevExpress.Charts.Model.FullStackedLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.#ctor(DevExpress.Charts.Model.FullStackedLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedLineSeries.Constructor">
            <summary>设置 FullStackedLineSeries.FullStackedLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries">
            <summary>DevExpress.Charts.Model.FullStackedSplineAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.#ctor(DevExpress.Charts.Model.FullStackedSplineAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimFullStackedSplineAreaSeries.Constructor">
            <summary>设置 FullStackedSplineAreaSeries.FullStackedSplineAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimHitInfo">
            <summary>DevExpress.Charts.Model.HitInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimHitInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimHitInfo.#ctor(DevExpress.Charts.Model.HitInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimHitInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.AllInstances.ElementGet">
            <summary>设置 HitInfo.get_Element() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.AllInstances.EqualsObject">
            <summary>设置 HitInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.AllInstances.GetHashCode01">
            <summary>设置 HitInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimHitInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimHitInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.ConstructorModelElement">
            <summary>设置 HitInfo.HitInfo(ModelElement element) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.ElementGet">
            <summary>设置 HitInfo.get_Element() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.EqualsObject">
            <summary>设置 HitInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.GetHashCode">
            <summary>设置 HitInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimHitInfo.StaticConstructor">
            <summary>设置 HitInfo.HitInfo() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLabelPointData">
            <summary>DevExpress.Charts.Model.LabelPointData 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLabelPointData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLabelPointData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLabelPointData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLabelPointData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLabelPointData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegend">
            <summary>DevExpress.Charts.Model.Legend 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegend.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegend.#ctor(DevExpress.Charts.Model.Legend)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.BorderGet">
            <summary>设置 Legend.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.BorderSetBorder">
            <summary>设置 Legend.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.EnableAntialiasingGet">
            <summary>设置 Legend.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 Legend.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.ItemsGet">
            <summary>设置 Legend.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.LegendPositionGet">
            <summary>设置 Legend.get_LegendPosition() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.LegendPositionSetLegendPosition">
            <summary>设置 Legend.set_LegendPosition(LegendPosition value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.OrientationGet">
            <summary>设置 Legend.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.OrientationSetLegendOrientation">
            <summary>设置 Legend.set_Orientation(LegendOrientation value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.OverlayGet">
            <summary>设置 Legend.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.AllInstances.OverlaySetBoolean">
            <summary>设置 Legend.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegend.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegend.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.BorderGet">
            <summary>设置 Legend.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.BorderSetBorder">
            <summary>设置 Legend.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.Constructor">
            <summary>设置 Legend.Legend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.EnableAntialiasingGet">
            <summary>设置 Legend.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 Legend.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.ItemsGet">
            <summary>设置 Legend.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.LegendPositionGet">
            <summary>设置 Legend.get_LegendPosition() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.LegendPositionSetLegendPosition">
            <summary>设置 Legend.set_LegendPosition(LegendPosition value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.OrientationGet">
            <summary>设置 Legend.get_Orientation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.OrientationSetLegendOrientation">
            <summary>设置 Legend.set_Orientation(LegendOrientation value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.OverlayGet">
            <summary>设置 Legend.get_Overlay() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegend.OverlaySetBoolean">
            <summary>设置 Legend.set_Overlay(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendAppearance">
            <summary>DevExpress.Charts.Model.LegendAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.#ctor(DevExpress.Charts.Model.LegendAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.BackColorGet">
            <summary>设置 LegendAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.BackColorSetColorARGB">
            <summary>设置 LegendAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.BorderGet">
            <summary>设置 LegendAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.BorderSetBorder">
            <summary>设置 LegendAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.FillStyleGet">
            <summary>设置 LegendAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 LegendAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.MarginsGet">
            <summary>设置 LegendAppearance.get_Margins() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.MarginsSetRectangleIndents">
            <summary>设置 LegendAppearance.set_Margins(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.PaddingGet">
            <summary>设置 LegendAppearance.get_Padding() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.PaddingSetRectangleIndents">
            <summary>设置 LegendAppearance.set_Padding(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.ShadowGet">
            <summary>设置 LegendAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.ShadowSetShadow">
            <summary>设置 LegendAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.TextColorGet">
            <summary>设置 LegendAppearance.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.AllInstances.TextColorSetColorARGB">
            <summary>设置 LegendAppearance.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BackColorGet">
            <summary>设置 LegendAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BackColorSetColorARGB">
            <summary>设置 LegendAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BorderGet">
            <summary>设置 LegendAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.BorderSetBorder">
            <summary>设置 LegendAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.Constructor">
            <summary>设置 LegendAppearance.LegendAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.FillStyleGet">
            <summary>设置 LegendAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.FillStyleSetFillStyle">
            <summary>设置 LegendAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.MarginsGet">
            <summary>设置 LegendAppearance.get_Margins() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.MarginsSetRectangleIndents">
            <summary>设置 LegendAppearance.set_Margins(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.PaddingGet">
            <summary>设置 LegendAppearance.get_Padding() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.PaddingSetRectangleIndents">
            <summary>设置 LegendAppearance.set_Padding(RectangleIndents value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.ShadowGet">
            <summary>设置 LegendAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.ShadowSetShadow">
            <summary>设置 LegendAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.TextColorGet">
            <summary>设置 LegendAppearance.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendAppearance.TextColorSetColorARGB">
            <summary>设置 LegendAppearance.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendItem">
            <summary>DevExpress.Charts.Model.LegendItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItem.#ctor(DevExpress.Charts.Model.LegendItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.AllInstances.TextGet">
            <summary>设置 LegendItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.AllInstances.TextSetString">
            <summary>设置 LegendItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.Constructor">
            <summary>设置 LegendItem.LegendItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.TextGet">
            <summary>设置 LegendItem.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItem.TextSetString">
            <summary>设置 LegendItem.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection">
            <summary>DevExpress.Charts.Model.LegendItemCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.#ctor(DevExpress.Charts.Model.LegendItemCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Model.LegendItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Model.LegendItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Model.LegendItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLegendItemCollection.ConstructorLegend">
            <summary>设置 LegendItemCollection.LegendItemCollection(Legend parent) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLineSeries">
            <summary>DevExpress.Charts.Model.LineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.#ctor(DevExpress.Charts.Model.LineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineSeries.Constructor">
            <summary>设置 LineSeries.LineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLineStyle">
            <summary>DevExpress.Charts.Model.LineStyle 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineStyle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineStyle.#ctor(DevExpress.Charts.Model.LineStyle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimLineStyle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.AllInstances.DashStyleGet">
            <summary>设置 LineStyle.get_DashStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.AllInstances.DashStyleSetDashStyle">
            <summary>设置 LineStyle.set_DashStyle(DashStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.AllInstances.ThicknessGet">
            <summary>设置 LineStyle.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.AllInstances.ThicknessSetInt32">
            <summary>设置 LineStyle.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineStyle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimLineStyle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.Constructor">
            <summary>设置 LineStyle.LineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.DashStyleGet">
            <summary>设置 LineStyle.get_DashStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.DashStyleSetDashStyle">
            <summary>设置 LineStyle.set_DashStyle(DashStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.ThicknessGet">
            <summary>设置 LineStyle.get_Thickness() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimLineStyle.ThicknessSetInt32">
            <summary>设置 LineStyle.set_Thickness(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries">
            <summary>DevExpress.Charts.Model.ManhattanBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.#ctor(DevExpress.Charts.Model.ManhattanBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.BarWidthGet">
            <summary>设置 ManhattanBarSeries.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.BarWidthSetDouble">
            <summary>设置 ManhattanBarSeries.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.ColorEachGet">
            <summary>设置 ManhattanBarSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.ColorEachSetBoolean">
            <summary>设置 ManhattanBarSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.CreatePropertyBag">
            <summary>设置 ManhattanBarSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.ModelGet">
            <summary>设置 ManhattanBarSeries.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.AllInstances.ModelSetBar3DModel">
            <summary>设置 ManhattanBarSeries.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.BarWidthGet">
            <summary>设置 ManhattanBarSeries.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.BarWidthSetDouble">
            <summary>设置 ManhattanBarSeries.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.ColorEachGet">
            <summary>设置 ManhattanBarSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.ColorEachSetBoolean">
            <summary>设置 ManhattanBarSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.Constructor">
            <summary>设置 ManhattanBarSeries.ManhattanBarSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.CreatePropertyBag">
            <summary>设置 ManhattanBarSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.ModelGet">
            <summary>设置 ManhattanBarSeries.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimManhattanBarSeries.ModelSetBar3DModel">
            <summary>设置 ManhattanBarSeries.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimMarker">
            <summary>DevExpress.Charts.Model.Marker 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarker.#ctor(DevExpress.Charts.Model.Marker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.ColorGet">
            <summary>设置 Marker.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.ColorSetColorARGB">
            <summary>设置 Marker.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.MarkerTypeGet">
            <summary>设置 Marker.get_MarkerType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.MarkerTypeSetMarkerType">
            <summary>设置 Marker.set_MarkerType(MarkerType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.SizeGet">
            <summary>设置 Marker.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.SizeSetInt32">
            <summary>设置 Marker.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.VisibleGet">
            <summary>设置 Marker.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.AllInstances.VisibleSetBoolean">
            <summary>设置 Marker.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.ColorGet">
            <summary>设置 Marker.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.ColorSetColorARGB">
            <summary>设置 Marker.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.ConstructorModelElement">
            <summary>设置 Marker.Marker(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.MarkerTypeGet">
            <summary>设置 Marker.get_MarkerType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.MarkerTypeSetMarkerType">
            <summary>设置 Marker.set_MarkerType(MarkerType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.SizeGet">
            <summary>设置 Marker.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.SizeSetInt32">
            <summary>设置 Marker.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.VisibleGet">
            <summary>设置 Marker.get_Visible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarker.VisibleSetBoolean">
            <summary>设置 Marker.set_Visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance">
            <summary>DevExpress.Charts.Model.MarkerAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.#ctor(DevExpress.Charts.Model.MarkerAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.BorderColorGet">
            <summary>设置 MarkerAppearance.get_BorderColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.BorderColorSetColorARGB">
            <summary>设置 MarkerAppearance.set_BorderColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.BorderVisibleGet">
            <summary>设置 MarkerAppearance.get_BorderVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.BorderVisibleSetBoolean">
            <summary>设置 MarkerAppearance.set_BorderVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.FillStyleGet">
            <summary>设置 MarkerAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 MarkerAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BorderColorGet">
            <summary>设置 MarkerAppearance.get_BorderColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BorderColorSetColorARGB">
            <summary>设置 MarkerAppearance.set_BorderColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BorderVisibleGet">
            <summary>设置 MarkerAppearance.get_BorderVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.BorderVisibleSetBoolean">
            <summary>设置 MarkerAppearance.set_BorderVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.Constructor">
            <summary>设置 MarkerAppearance.MarkerAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.FillStyleGet">
            <summary>设置 MarkerAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimMarkerAppearance.FillStyleSetFillStyle">
            <summary>设置 MarkerAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase">
            <summary>DevExpress.Charts.Model.ModelControllerFactoryBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.#ctor(DevExpress.Charts.Model.ModelControllerFactoryBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelControllerFactoryBase.Constructor">
            <summary>设置 ModelControllerFactoryBase.ModelControllerFactoryBase() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElement">
            <summary>DevExpress.Charts.Model.ModelElement 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElement.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.AllInstances.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.AllInstances.ParentGet">
            <summary>设置 ModelElement.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.AllInstances.ParentSetModelElement">
            <summary>设置 ModelElement.set_Parent(ModelElement value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.AllInstances.UpdateElementParentModelElementModelElement">
            <summary>设置 ModelElement.UpdateElementParent(ModelElement element, ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.Constructor">
            <summary>设置 ModelElement.ModelElement() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.ConstructorModelElement">
            <summary>设置 ModelElement.ModelElement(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.ParentGet">
            <summary>设置 ModelElement.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.ParentSetModelElement">
            <summary>设置 ModelElement.set_Parent(ModelElement value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElement.UpdateElementParentModelElementModelElement">
            <summary>设置 ModelElement.UpdateElementParent(ModelElement element, ModelElement parent) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1">
            <summary>DevExpress.Charts.Model.ModelElementCollection`1 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.#ctor(DevExpress.Charts.Model.ModelElementCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances.OnInsertCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances.OnRemoveCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances.OnSetCompleteInt32T0T0">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.AllInstances.ParentGet">
            <summary>设置 ModelElementCollection`1.get_Parent() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.ConstructorModelElement">
            <summary>设置 ModelElementCollection`1.ModelElementCollection`1(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.OnInsertCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.OnRemoveCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.OnSetCompleteInt32T0T0">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementCollection`1.ParentGet">
            <summary>设置 ModelElementCollection`1.get_Parent() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElementContainer">
            <summary>DevExpress.Charts.Model.ModelElementContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.#ctor(DevExpress.Charts.Model.ModelElementContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.AllInstances.Clear">
            <summary>设置 ModelElementContainer.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.AllInstances.FindModelElementObject">
            <summary>设置 ModelElementContainer.FindModelElement(Object viewObject) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.AllInstances.FindViewObjectModelElement">
            <summary>设置 ModelElementContainer.FindViewObject(ModelElement element) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.AllInstances.RegisterObjectModelElement">
            <summary>设置 ModelElementContainer.Register(Object viewObject, ModelElement element) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.Bind(DevExpress.Charts.Model.IModelElementContainer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.Clear">
            <summary>设置 ModelElementContainer.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.Constructor">
            <summary>设置 ModelElementContainer.ModelElementContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.FindModelElementObject">
            <summary>设置 ModelElementContainer.FindModelElement(Object viewObject) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.FindViewObjectModelElement">
            <summary>设置 ModelElementContainer.FindViewObject(ModelElement element) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelElementContainer.RegisterObjectModelElement">
            <summary>设置 ModelElementContainer.Register(Object viewObject, ModelElement element) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelRect">
            <summary>DevExpress.Charts.Model.ModelRect 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelRect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelRect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelRect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelRect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelRect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelRect.EqualityOpModelRectModelRect">
            <summary>设置 ModelRect.op_Equality(ModelRect rect1, ModelRect rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelRect.EqualsModelRectModelRect">
            <summary>设置 ModelRect.Equals(ModelRect rect1, ModelRect rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelRect.InequalityOpModelRectModelRect">
            <summary>设置 ModelRect.op_Inequality(ModelRect rect1, ModelRect rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelRect.StaticConstructor">
            <summary>设置 ModelRect.ModelRect() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs">
            <summary>DevExpress.Charts.Model.ModelUpdatedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.#ctor(DevExpress.Charts.Model.ModelUpdatedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.AllInstances.UpdateGet">
            <summary>设置 ModelUpdatedEventArgs.get_Update() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.ConstructorUpdateInfo">
            <summary>设置 ModelUpdatedEventArgs.ModelUpdatedEventArgs(UpdateInfo update) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimModelUpdatedEventArgs.UpdateGet">
            <summary>设置 ModelUpdatedEventArgs.get_Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries">
            <summary>DevExpress.Charts.Model.NestedDonutSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.#ctor(DevExpress.Charts.Model.NestedDonutSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.AllInstances.InnerIndentGet">
            <summary>设置 NestedDonutSeries.get_InnerIndent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.AllInstances.InnerIndentSetDouble">
            <summary>设置 NestedDonutSeries.set_InnerIndent(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.Constructor">
            <summary>设置 NestedDonutSeries.NestedDonutSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.InnerIndentGet">
            <summary>设置 NestedDonutSeries.get_InnerIndent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNestedDonutSeries.InnerIndentSetDouble">
            <summary>设置 NestedDonutSeries.set_InnerIndent(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis">
            <summary>DevExpress.Charts.Model.NonPolarAxis 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.#ctor(DevExpress.Charts.Model.NonPolarAxis)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.AutoGridGet">
            <summary>设置 NonPolarAxis.get_AutoGrid() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.AutoGridSetBoolean">
            <summary>设置 NonPolarAxis.set_AutoGrid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.GridAlignmentGet">
            <summary>设置 NonPolarAxis.get_GridAlignment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.GridAlignmentSetDateTimeGridAlignment">
            <summary>设置 NonPolarAxis.set_GridAlignment(DateTimeGridAlignment value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.GridSpacingGet">
            <summary>设置 NonPolarAxis.get_GridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.GridSpacingSetDouble">
            <summary>设置 NonPolarAxis.set_GridSpacing(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.LogarithmicBaseGet">
            <summary>设置 NonPolarAxis.get_LogarithmicBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.LogarithmicBaseSetDouble">
            <summary>设置 NonPolarAxis.set_LogarithmicBase(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.LogarithmicGet">
            <summary>设置 NonPolarAxis.get_Logarithmic() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AllInstances.LogarithmicSetBoolean">
            <summary>设置 NonPolarAxis.set_Logarithmic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AutoGridGet">
            <summary>设置 NonPolarAxis.get_AutoGrid() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.AutoGridSetBoolean">
            <summary>设置 NonPolarAxis.set_AutoGrid(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.Constructor">
            <summary>设置 NonPolarAxis.NonPolarAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.ConstructorChart">
            <summary>设置 NonPolarAxis.NonPolarAxis(Chart parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.GridAlignmentGet">
            <summary>设置 NonPolarAxis.get_GridAlignment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.GridAlignmentSetDateTimeGridAlignment">
            <summary>设置 NonPolarAxis.set_GridAlignment(DateTimeGridAlignment value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.GridSpacingGet">
            <summary>设置 NonPolarAxis.get_GridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.GridSpacingSetDouble">
            <summary>设置 NonPolarAxis.set_GridSpacing(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.LogarithmicBaseGet">
            <summary>设置 NonPolarAxis.get_LogarithmicBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.LogarithmicBaseSetDouble">
            <summary>设置 NonPolarAxis.set_LogarithmicBase(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.LogarithmicGet">
            <summary>设置 NonPolarAxis.get_Logarithmic() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimNonPolarAxis.LogarithmicSetBoolean">
            <summary>设置 NonPolarAxis.set_Logarithmic(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimOptions3D">
            <summary>DevExpress.Charts.Model.Options3D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimOptions3D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimOptions3D.#ctor(DevExpress.Charts.Model.Options3D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.EnableAntialiasingGet">
            <summary>设置 Options3D.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.EnableAntialiasingSetBoolean">
            <summary>设置 Options3D.set_EnableAntialiasing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.PerspectiveAngleGet">
            <summary>设置 Options3D.get_PerspectiveAngle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.PerspectiveAngleSetInt32">
            <summary>设置 Options3D.set_PerspectiveAngle(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleXGet">
            <summary>设置 Options3D.get_RotationAngleX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleXSetInt32">
            <summary>设置 Options3D.set_RotationAngleX(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleYGet">
            <summary>设置 Options3D.get_RotationAngleY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleYSetInt32">
            <summary>设置 Options3D.set_RotationAngleY(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleZGet">
            <summary>设置 Options3D.get_RotationAngleZ() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.AllInstances.RotationAngleZSetInt32">
            <summary>设置 Options3D.set_RotationAngleZ(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimOptions3D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimOptions3D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimOptions3D.Bind(DevExpress.Charts.Model.IOptions3D)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.ConstructorModelElement">
            <summary>设置 Options3D.Options3D(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.EnableAntialiasingGet">
            <summary>设置 Options3D.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.EnableAntialiasingSetBoolean">
            <summary>设置 Options3D.set_EnableAntialiasing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.PerspectiveAngleGet">
            <summary>设置 Options3D.get_PerspectiveAngle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.PerspectiveAngleSetInt32">
            <summary>设置 Options3D.set_PerspectiveAngle(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleXGet">
            <summary>设置 Options3D.get_RotationAngleX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleXSetInt32">
            <summary>设置 Options3D.set_RotationAngleX(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleYGet">
            <summary>设置 Options3D.get_RotationAngleY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleYSetInt32">
            <summary>设置 Options3D.set_RotationAngleY(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleZGet">
            <summary>设置 Options3D.get_RotationAngleZ() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimOptions3D.RotationAngleZSetInt32">
            <summary>设置 Options3D.set_RotationAngleZ(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPalette">
            <summary>DevExpress.Charts.Model.Palette 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPalette.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPalette.#ctor(DevExpress.Charts.Model.Palette)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPalette.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.AllInstances.EntriesGet">
            <summary>设置 Palette.get_Entries() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPalette.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPalette.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.Constructor">
            <summary>设置 Palette.Palette() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.ConstructorListOfPaletteEntry">
            <summary>设置 Palette.Palette(List`1&lt;PaletteEntry&gt; entries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.ConstructorModelElement">
            <summary>设置 Palette.Palette(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPalette.EntriesGet">
            <summary>设置 Palette.get_Entries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPaletteEntry">
            <summary>DevExpress.Charts.Model.PaletteEntry 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPaletteEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPaletteEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPaletteEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPaletteEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPaletteEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPie3DChart">
            <summary>DevExpress.Charts.Model.Pie3DChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPie3DChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPie3DChart.#ctor(DevExpress.Charts.Model.Pie3DChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPie3DChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPie3DChart.AllInstances.Options3DGet">
            <summary>设置 Pie3DChart.get_Options3D() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPie3DChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPie3DChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPie3DChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPie3DChart.Bind(DevExpress.Charts.Model.IChart3D)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPie3DChart.Constructor">
            <summary>设置 Pie3DChart.Pie3DChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPie3DChart.Options3DGet">
            <summary>设置 Pie3DChart.get_Options3D() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieChart">
            <summary>DevExpress.Charts.Model.PieChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieChart.#ctor(DevExpress.Charts.Model.PieChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieChart.AllInstances.IsSeriesValidSeriesModel">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieChart.Constructor">
            <summary>设置 PieChart.PieChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieChart.IsSeriesValidSeriesModel">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieSeries">
            <summary>DevExpress.Charts.Model.PieSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeries.#ctor(DevExpress.Charts.Model.PieSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeries.Constructor">
            <summary>设置 PieSeries.PieSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase">
            <summary>DevExpress.Charts.Model.PieSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.#ctor(DevExpress.Charts.Model.PieSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.DepthPercentGet">
            <summary>设置 PieSeriesBase.get_DepthPercent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.DepthPercentSetInt32">
            <summary>设置 PieSeriesBase.set_DepthPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.ExplodeModeGet">
            <summary>设置 PieSeriesBase.get_ExplodeMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.ExplodeModeSetPieExplodeMode">
            <summary>设置 PieSeriesBase.set_ExplodeMode(PieExplodeMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.ExplodedDistancePercentageGet">
            <summary>设置 PieSeriesBase.get_ExplodedDistancePercentage() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.ExplodedDistancePercentageSetDouble">
            <summary>设置 PieSeriesBase.set_ExplodedDistancePercentage(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.ExplodedPointsIndexesGet">
            <summary>设置 PieSeriesBase.get_ExplodedPointsIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.RotationAngleGet">
            <summary>设置 PieSeriesBase.get_RotationAngle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.RotationAngleSetInt32">
            <summary>设置 PieSeriesBase.set_RotationAngle(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.SweepDirectionGet">
            <summary>设置 PieSeriesBase.get_SweepDirection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.AllInstances.SweepDirectionSetPieSweepDirection">
            <summary>设置 PieSeriesBase.set_SweepDirection(PieSweepDirection value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.Constructor">
            <summary>设置 PieSeriesBase.PieSeriesBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.DepthPercentGet">
            <summary>设置 PieSeriesBase.get_DepthPercent() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.DepthPercentSetInt32">
            <summary>设置 PieSeriesBase.set_DepthPercent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.ExplodeModeGet">
            <summary>设置 PieSeriesBase.get_ExplodeMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.ExplodeModeSetPieExplodeMode">
            <summary>设置 PieSeriesBase.set_ExplodeMode(PieExplodeMode value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.ExplodedDistancePercentageGet">
            <summary>设置 PieSeriesBase.get_ExplodedDistancePercentage() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.ExplodedDistancePercentageSetDouble">
            <summary>设置 PieSeriesBase.set_ExplodedDistancePercentage(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.ExplodedPointsIndexesGet">
            <summary>设置 PieSeriesBase.get_ExplodedPointsIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.RotationAngleGet">
            <summary>设置 PieSeriesBase.get_RotationAngle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.RotationAngleSetInt32">
            <summary>设置 PieSeriesBase.set_RotationAngle(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.SweepDirectionGet">
            <summary>设置 PieSeriesBase.get_SweepDirection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPieSeriesBase.SweepDirectionSetPieSweepDirection">
            <summary>设置 PieSeriesBase.set_SweepDirection(PieSweepDirection value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPointSeries">
            <summary>DevExpress.Charts.Model.PointSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.#ctor(DevExpress.Charts.Model.PointSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPointSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeries.Constructor">
            <summary>设置 PointSeries.PointSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase">
            <summary>DevExpress.Charts.Model.PointSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.#ctor(DevExpress.Charts.Model.PointSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.AllInstances.ColorEachGet">
            <summary>设置 PointSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.AllInstances.ColorEachSetBoolean">
            <summary>设置 PointSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.ColorEachGet">
            <summary>设置 PointSeriesBase.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.ColorEachSetBoolean">
            <summary>设置 PointSeriesBase.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPointSeriesBase.Constructor">
            <summary>设置 PointSeriesBase.PointSeriesBase() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries">
            <summary>DevExpress.Charts.Model.PolarAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.#ctor(DevExpress.Charts.Model.PolarAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.AllInstances.CreatePropertyBag">
            <summary>设置 PolarAreaSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.AllInstances.TransparencyGet">
            <summary>设置 PolarAreaSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.AllInstances.TransparencySetByte">
            <summary>设置 PolarAreaSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.Constructor">
            <summary>设置 PolarAreaSeries.PolarAreaSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.CreatePropertyBag">
            <summary>设置 PolarAreaSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.TransparencyGet">
            <summary>设置 PolarAreaSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAreaSeries.TransparencySetByte">
            <summary>设置 PolarAreaSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarAxisX">
            <summary>DevExpress.Charts.Model.PolarAxisX 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.#ctor(DevExpress.Charts.Model.PolarAxisX)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarAxisX.Constructor">
            <summary>设置 PolarAxisX.PolarAxisX() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarChart">
            <summary>DevExpress.Charts.Model.PolarChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarChart.#ctor(DevExpress.Charts.Model.PolarChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.AllInstances.ArgumentAxisGet">
            <summary>设置 PolarChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.AllInstances.ArgumentAxisSetPolarAxisX">
            <summary>设置 PolarChart.set_ArgumentAxis(PolarAxisX value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.AllInstances.IsSeriesValidSeriesModel">
            <summary>设置 PolarChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.ArgumentAxisGet">
            <summary>设置 PolarChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.ArgumentAxisSetPolarAxisX">
            <summary>设置 PolarChart.set_ArgumentAxis(PolarAxisX value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.Constructor">
            <summary>设置 PolarChart.PolarChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarChart.IsSeriesValidSeriesModel">
            <summary>设置 PolarChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries">
            <summary>DevExpress.Charts.Model.PolarLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.#ctor(DevExpress.Charts.Model.PolarLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarLineSeries.Constructor">
            <summary>设置 PolarLineSeries.PolarLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries">
            <summary>DevExpress.Charts.Model.PolarPointSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.#ctor(DevExpress.Charts.Model.PolarPointSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarPointSeries.Constructor">
            <summary>设置 PolarPointSeries.PolarPointSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase">
            <summary>DevExpress.Charts.Model.PolarSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.#ctor(DevExpress.Charts.Model.PolarSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.AllInstances.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.AllInstances.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimPolarSeriesBase.Constructor">
            <summary>设置 PolarSeriesBase.PolarSeriesBase() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries">
            <summary>DevExpress.Charts.Model.RadarAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.#ctor(DevExpress.Charts.Model.RadarAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.AllInstances.CreatePropertyBag">
            <summary>设置 RadarAreaSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.AllInstances.TransparencyGet">
            <summary>设置 RadarAreaSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.AllInstances.TransparencySetByte">
            <summary>设置 RadarAreaSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.Constructor">
            <summary>设置 RadarAreaSeries.RadarAreaSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.CreatePropertyBag">
            <summary>设置 RadarAreaSeries.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.TransparencyGet">
            <summary>设置 RadarAreaSeries.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAreaSeries.TransparencySetByte">
            <summary>设置 RadarAreaSeries.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarAxisX">
            <summary>DevExpress.Charts.Model.RadarAxisX 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.#ctor(DevExpress.Charts.Model.RadarAxisX)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarAxisX.Constructor">
            <summary>设置 RadarAxisX.RadarAxisX() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarChart">
            <summary>DevExpress.Charts.Model.RadarChart 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarChart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarChart.#ctor(DevExpress.Charts.Model.RadarChart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarChart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.AllInstances.ArgumentAxisGet">
            <summary>设置 RadarChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.AllInstances.ArgumentAxisSetRadarAxisX">
            <summary>设置 RadarChart.set_ArgumentAxis(RadarAxisX value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.AllInstances.IsSeriesValidSeriesModel">
            <summary>设置 RadarChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.ArgumentAxisGet">
            <summary>设置 RadarChart.get_ArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.ArgumentAxisSetRadarAxisX">
            <summary>设置 RadarChart.set_ArgumentAxis(RadarAxisX value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarChart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarChart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.Constructor">
            <summary>设置 RadarChart.RadarChart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarChart.IsSeriesValidSeriesModel">
            <summary>设置 RadarChart.IsSeriesValid(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries">
            <summary>DevExpress.Charts.Model.RadarLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.#ctor(DevExpress.Charts.Model.RadarLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarLineSeries.Constructor">
            <summary>设置 RadarLineSeries.RadarLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries">
            <summary>DevExpress.Charts.Model.RadarPointSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.#ctor(DevExpress.Charts.Model.RadarPointSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarPointSeries.Constructor">
            <summary>设置 RadarPointSeries.RadarPointSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase">
            <summary>DevExpress.Charts.Model.RadarSeriesBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.#ctor(DevExpress.Charts.Model.RadarSeriesBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRadarSeriesBase.Constructor">
            <summary>设置 RadarSeriesBase.RadarSeriesBase() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries">
            <summary>DevExpress.Charts.Model.RangeAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.#ctor(DevExpress.Charts.Model.RangeAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRangeAreaSeries.Constructor">
            <summary>设置 RangeAreaSeries.RangeAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries">
            <summary>DevExpress.Charts.Model.RangeBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.#ctor(DevExpress.Charts.Model.RangeBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRangeBarSeries.Constructor">
            <summary>设置 RangeBarSeries.RangeBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRectangleIndents">
            <summary>DevExpress.Charts.Model.RectangleIndents 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.#ctor(DevExpress.Charts.Model.RectangleIndents)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllGet">
            <summary>设置 RectangleIndents.get_All() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.AllGet">
            <summary>设置 RectangleIndents.get_All() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.AllSetInt32">
            <summary>设置 RectangleIndents.set_All(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.BottomGet">
            <summary>设置 RectangleIndents.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.BottomSetInt32">
            <summary>设置 RectangleIndents.set_Bottom(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.LeftGet">
            <summary>设置 RectangleIndents.get_Left() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.LeftSetInt32">
            <summary>设置 RectangleIndents.set_Left(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.RightGet">
            <summary>设置 RectangleIndents.get_Right() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.RightSetInt32">
            <summary>设置 RectangleIndents.set_Right(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.TopGet">
            <summary>设置 RectangleIndents.get_Top() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllInstances.TopSetInt32">
            <summary>设置 RectangleIndents.set_Top(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.AllSetInt32">
            <summary>设置 RectangleIndents.set_All(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.BottomGet">
            <summary>设置 RectangleIndents.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.BottomSetInt32">
            <summary>设置 RectangleIndents.set_Bottom(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.Constructor">
            <summary>设置 RectangleIndents.RectangleIndents() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.ConstructorInt32">
            <summary>设置 RectangleIndents.RectangleIndents(Int32 all) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.ConstructorInt32Int32Int32Int32">
            <summary>设置 RectangleIndents.RectangleIndents(Int32 left, Int32 top, Int32 right, Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.LeftGet">
            <summary>设置 RectangleIndents.get_Left() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.LeftSetInt32">
            <summary>设置 RectangleIndents.set_Left(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.RightGet">
            <summary>设置 RectangleIndents.get_Right() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.RightSetInt32">
            <summary>设置 RectangleIndents.set_Right(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.TopGet">
            <summary>设置 RectangleIndents.get_Top() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimRectangleIndents.TopSetInt32">
            <summary>设置 RectangleIndents.set_Top(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries">
            <summary>DevExpress.Charts.Model.ScatterLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.#ctor(DevExpress.Charts.Model.ScatterLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.AllInstances.ColorEachGet">
            <summary>设置 ScatterLineSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.AllInstances.ColorEachSetBoolean">
            <summary>设置 ScatterLineSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.ColorEachGet">
            <summary>设置 ScatterLineSeries.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.ColorEachSetBoolean">
            <summary>设置 ScatterLineSeries.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimScatterLineSeries.Constructor">
            <summary>设置 ScatterLineSeries.ScatterLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance">
            <summary>DevExpress.Charts.Model.SeriesAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.#ctor(DevExpress.Charts.Model.SeriesAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.BorderGet">
            <summary>设置 SeriesAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.BorderSetBorder">
            <summary>设置 SeriesAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.ColorGet">
            <summary>设置 SeriesAppearance.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.ColorSetColorARGB">
            <summary>设置 SeriesAppearance.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.FillStyleGet">
            <summary>设置 SeriesAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 SeriesAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.LabelAppearanceGet">
            <summary>设置 SeriesAppearance.get_LabelAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.LabelAppearanceSetSeriesLabelAppearance">
            <summary>设置 SeriesAppearance.set_LabelAppearance(SeriesLabelAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.LineStyleGet">
            <summary>设置 SeriesAppearance.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.LineStyleSetLineStyle">
            <summary>设置 SeriesAppearance.set_LineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.MarkerAppearanceGet">
            <summary>设置 SeriesAppearance.get_MarkerAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.MarkerAppearanceSetMarkerAppearance">
            <summary>设置 SeriesAppearance.set_MarkerAppearance(MarkerAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.ShadowGet">
            <summary>设置 SeriesAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.AllInstances.ShadowSetShadow">
            <summary>设置 SeriesAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.BorderGet">
            <summary>设置 SeriesAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.BorderSetBorder">
            <summary>设置 SeriesAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.ColorGet">
            <summary>设置 SeriesAppearance.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.ColorSetColorARGB">
            <summary>设置 SeriesAppearance.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.Constructor">
            <summary>设置 SeriesAppearance.SeriesAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.FillStyleGet">
            <summary>设置 SeriesAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.FillStyleSetFillStyle">
            <summary>设置 SeriesAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.LabelAppearanceGet">
            <summary>设置 SeriesAppearance.get_LabelAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.LabelAppearanceSetSeriesLabelAppearance">
            <summary>设置 SeriesAppearance.set_LabelAppearance(SeriesLabelAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.LineStyleGet">
            <summary>设置 SeriesAppearance.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.LineStyleSetLineStyle">
            <summary>设置 SeriesAppearance.set_LineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.MarkerAppearanceGet">
            <summary>设置 SeriesAppearance.get_MarkerAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.MarkerAppearanceSetMarkerAppearance">
            <summary>设置 SeriesAppearance.set_MarkerAppearance(MarkerAppearance value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.ShadowGet">
            <summary>设置 SeriesAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesAppearance.ShadowSetShadow">
            <summary>设置 SeriesAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesCollection">
            <summary>DevExpress.Charts.Model.SeriesCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.#ctor(DevExpress.Charts.Model.SeriesCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.AllInstances.OnValidateSeriesModel">
            <summary>设置 SeriesCollection.OnValidate(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Model.SeriesModel})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Model.SeriesModel})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Model.SeriesModel})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.ConstructorChart">
            <summary>设置 SeriesCollection.SeriesCollection(Chart parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesCollection.OnValidateSeriesModel">
            <summary>设置 SeriesCollection.OnValidate(SeriesModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesLabel">
            <summary>DevExpress.Charts.Model.SeriesLabel 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.#ctor(DevExpress.Charts.Model.SeriesLabel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.EnableAntialiasingGet">
            <summary>设置 SeriesLabel.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 SeriesLabel.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.FormatterGet">
            <summary>设置 SeriesLabel.get_Formatter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.FormatterSetIDataLabelFormatter">
            <summary>设置 SeriesLabel.set_Formatter(IDataLabelFormatter value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.PositionGet">
            <summary>设置 SeriesLabel.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.AllInstances.PositionSetSeriesLabelPosition">
            <summary>设置 SeriesLabel.set_Position(SeriesLabelPosition value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.ConstructorModelElement">
            <summary>设置 SeriesLabel.SeriesLabel(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.EnableAntialiasingGet">
            <summary>设置 SeriesLabel.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 SeriesLabel.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.FormatterGet">
            <summary>设置 SeriesLabel.get_Formatter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.FormatterSetIDataLabelFormatter">
            <summary>设置 SeriesLabel.set_Formatter(IDataLabelFormatter value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.PositionGet">
            <summary>设置 SeriesLabel.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabel.PositionSetSeriesLabelPosition">
            <summary>设置 SeriesLabel.set_Position(SeriesLabelPosition value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance">
            <summary>DevExpress.Charts.Model.SeriesLabelAppearance 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.#ctor(DevExpress.Charts.Model.SeriesLabelAppearance)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.BackColorGet">
            <summary>设置 SeriesLabelAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.BackColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.BorderGet">
            <summary>设置 SeriesLabelAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.BorderSetBorder">
            <summary>设置 SeriesLabelAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.FillStyleGet">
            <summary>设置 SeriesLabelAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.FillStyleSetFillStyle">
            <summary>设置 SeriesLabelAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineColorGet">
            <summary>设置 SeriesLabelAppearance.get_LineColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_LineColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineLengthGet">
            <summary>设置 SeriesLabelAppearance.get_LineLength() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineLengthSetInt32">
            <summary>设置 SeriesLabelAppearance.set_LineLength(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineStyleGet">
            <summary>设置 SeriesLabelAppearance.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineStyleSetLineStyle">
            <summary>设置 SeriesLabelAppearance.set_LineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineVisibleGet">
            <summary>设置 SeriesLabelAppearance.get_LineVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.LineVisibleSetBoolean">
            <summary>设置 SeriesLabelAppearance.set_LineVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.ShadowGet">
            <summary>设置 SeriesLabelAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.ShadowSetShadow">
            <summary>设置 SeriesLabelAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.TextColorGet">
            <summary>设置 SeriesLabelAppearance.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.AllInstances.TextColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BackColorGet">
            <summary>设置 SeriesLabelAppearance.get_BackColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BackColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_BackColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BorderGet">
            <summary>设置 SeriesLabelAppearance.get_Border() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.BorderSetBorder">
            <summary>设置 SeriesLabelAppearance.set_Border(Border value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.Constructor">
            <summary>设置 SeriesLabelAppearance.SeriesLabelAppearance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.FillStyleGet">
            <summary>设置 SeriesLabelAppearance.get_FillStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.FillStyleSetFillStyle">
            <summary>设置 SeriesLabelAppearance.set_FillStyle(FillStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineColorGet">
            <summary>设置 SeriesLabelAppearance.get_LineColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_LineColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineLengthGet">
            <summary>设置 SeriesLabelAppearance.get_LineLength() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineLengthSetInt32">
            <summary>设置 SeriesLabelAppearance.set_LineLength(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineStyleGet">
            <summary>设置 SeriesLabelAppearance.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineStyleSetLineStyle">
            <summary>设置 SeriesLabelAppearance.set_LineStyle(LineStyle value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineVisibleGet">
            <summary>设置 SeriesLabelAppearance.get_LineVisible() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.LineVisibleSetBoolean">
            <summary>设置 SeriesLabelAppearance.set_LineVisible(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.ShadowGet">
            <summary>设置 SeriesLabelAppearance.get_Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.ShadowSetShadow">
            <summary>设置 SeriesLabelAppearance.set_Shadow(Shadow value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.TextColorGet">
            <summary>设置 SeriesLabelAppearance.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesLabelAppearance.TextColorSetColorARGB">
            <summary>设置 SeriesLabelAppearance.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesModel">
            <summary>DevExpress.Charts.Model.SeriesModel 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesModel.#ctor(DevExpress.Charts.Model.SeriesModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.DataMembersGet">
            <summary>设置 SeriesModel.get_DataMembers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.DataSourceGet">
            <summary>设置 SeriesModel.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.DataSourceSetObject">
            <summary>设置 SeriesModel.set_DataSource(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.DisplayNameGet">
            <summary>设置 SeriesModel.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.DisplayNameSetString">
            <summary>设置 SeriesModel.set_DisplayName(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LabelGet">
            <summary>设置 SeriesModel.get_Label() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LabelSetSeriesLabel">
            <summary>设置 SeriesModel.set_Label(SeriesLabel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LabelsVisibilityGet">
            <summary>设置 SeriesModel.get_LabelsVisibility() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LabelsVisibilitySetBoolean">
            <summary>设置 SeriesModel.set_LabelsVisibility(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LegendPointPatternGet">
            <summary>设置 SeriesModel.get_LegendPointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.LegendPointPatternSetString">
            <summary>设置 SeriesModel.set_LegendPointPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.PropertiesGet">
            <summary>设置 SeriesModel.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ShowInLegendGet">
            <summary>设置 SeriesModel.get_ShowInLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ShowInLegendSetBoolean">
            <summary>设置 SeriesModel.set_ShowInLegend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ValueScaleTypeGet">
            <summary>设置 SeriesModel.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.AllInstances.ValueScaleTypeSetValueScaleType">
            <summary>设置 SeriesModel.set_ValueScaleType(ValueScaleType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSeriesModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.Constructor">
            <summary>设置 SeriesModel.SeriesModel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.DataMembersGet">
            <summary>设置 SeriesModel.get_DataMembers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.DataSourceGet">
            <summary>设置 SeriesModel.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.DataSourceSetObject">
            <summary>设置 SeriesModel.set_DataSource(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.DisplayNameGet">
            <summary>设置 SeriesModel.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.DisplayNameSetString">
            <summary>设置 SeriesModel.set_DisplayName(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LabelGet">
            <summary>设置 SeriesModel.get_Label() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LabelSetSeriesLabel">
            <summary>设置 SeriesModel.set_Label(SeriesLabel value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LabelsVisibilityGet">
            <summary>设置 SeriesModel.get_LabelsVisibility() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LabelsVisibilitySetBoolean">
            <summary>设置 SeriesModel.set_LabelsVisibility(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LegendPointPatternGet">
            <summary>设置 SeriesModel.get_LegendPointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.LegendPointPatternSetString">
            <summary>设置 SeriesModel.set_LegendPointPattern(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.PropertiesGet">
            <summary>设置 SeriesModel.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ShowInLegendGet">
            <summary>设置 SeriesModel.get_ShowInLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ShowInLegendSetBoolean">
            <summary>设置 SeriesModel.set_ShowInLegend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ValueScaleTypeGet">
            <summary>设置 SeriesModel.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSeriesModel.ValueScaleTypeSetValueScaleType">
            <summary>设置 SeriesModel.set_ValueScaleType(ValueScaleType value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimShadow">
            <summary>DevExpress.Charts.Model.Shadow 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimShadow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimShadow.#ctor(DevExpress.Charts.Model.Shadow)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimShadow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.AllInstances.ColorGet">
            <summary>设置 Shadow.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.AllInstances.ColorSetColorARGB">
            <summary>设置 Shadow.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.AllInstances.SizeGet">
            <summary>设置 Shadow.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.AllInstances.SizeSetInt32">
            <summary>设置 Shadow.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimShadow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimShadow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.ColorGet">
            <summary>设置 Shadow.get_Color() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.ColorSetColorARGB">
            <summary>设置 Shadow.set_Color(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.Constructor">
            <summary>设置 Shadow.Shadow() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.SizeGet">
            <summary>设置 Shadow.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimShadow.SizeSetInt32">
            <summary>设置 Shadow.set_Size(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.#ctor(DevExpress.Charts.Model.SideBySideBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideBarSeries.Constructor">
            <summary>设置 SideBySideBarSeries.SideBySideBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideFullStackedBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.#ctor(DevExpress.Charts.Model.SideBySideFullStackedBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideFullStackedBarSeries.Constructor">
            <summary>设置 SideBySideFullStackedBarSeries.SideBySideFullStackedBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideRangeBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.#ctor(DevExpress.Charts.Model.SideBySideRangeBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideRangeBarSeries.Constructor">
            <summary>设置 SideBySideRangeBarSeries.SideBySideRangeBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideStackedBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.#ctor(DevExpress.Charts.Model.SideBySideStackedBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSideBySideStackedBarSeries.Constructor">
            <summary>设置 SideBySideStackedBarSeries.SideBySideStackedBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries">
            <summary>DevExpress.Charts.Model.SplineAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.#ctor(DevExpress.Charts.Model.SplineAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSplineAreaSeries.Constructor">
            <summary>设置 SplineAreaSeries.SplineAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSplineSeries">
            <summary>DevExpress.Charts.Model.SplineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.#ctor(DevExpress.Charts.Model.SplineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimSplineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSplineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimSplineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimSplineSeries.Constructor">
            <summary>设置 SplineSeries.SplineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries">
            <summary>DevExpress.Charts.Model.StackedAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.#ctor(DevExpress.Charts.Model.StackedAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedAreaSeries.Constructor">
            <summary>设置 StackedAreaSeries.StackedAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries">
            <summary>DevExpress.Charts.Model.StackedBarSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.#ctor(DevExpress.Charts.Model.StackedBarSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedBarSeries.Constructor">
            <summary>设置 StackedBarSeries.StackedBarSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries">
            <summary>DevExpress.Charts.Model.StackedLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.#ctor(DevExpress.Charts.Model.StackedLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedLineSeries.Constructor">
            <summary>设置 StackedLineSeries.StackedLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries">
            <summary>DevExpress.Charts.Model.StackedSplineAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.#ctor(DevExpress.Charts.Model.StackedSplineAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStackedSplineAreaSeries.Constructor">
            <summary>设置 StackedSplineAreaSeries.StackedSplineAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries">
            <summary>DevExpress.Charts.Model.StepAreaSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.#ctor(DevExpress.Charts.Model.StepAreaSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStepAreaSeries.Constructor">
            <summary>设置 StepAreaSeries.StepAreaSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStepLineSeries">
            <summary>DevExpress.Charts.Model.StepLineSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.#ctor(DevExpress.Charts.Model.StepLineSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStepLineSeries.Constructor">
            <summary>设置 StepLineSeries.StepLineSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStockSeries">
            <summary>DevExpress.Charts.Model.StockSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStockSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStockSeries.#ctor(DevExpress.Charts.Model.StockSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimStockSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStockSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimStockSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStockSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimStockSeries.Constructor">
            <summary>设置 StockSeries.StockSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase">
            <summary>DevExpress.Charts.Model.TitleAppearanceBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.#ctor(DevExpress.Charts.Model.TitleAppearanceBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.AllInstances.TextColorGet">
            <summary>设置 TitleAppearanceBase.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.AllInstances.TextColorSetColorARGB">
            <summary>设置 TitleAppearanceBase.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.Constructor">
            <summary>设置 TitleAppearanceBase.TitleAppearanceBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.TextColorGet">
            <summary>设置 TitleAppearanceBase.get_TextColor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleAppearanceBase.TextColorSetColorARGB">
            <summary>设置 TitleAppearanceBase.set_TextColor(ColorARGB value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimTitleBase">
            <summary>DevExpress.Charts.Model.TitleBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleBase.#ctor(DevExpress.Charts.Model.TitleBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimTitleBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.AllInstances.EnableAntialiasingGet">
            <summary>设置 TitleBase.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.AllInstances.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 TitleBase.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimTitleBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.ConstructorModelElement">
            <summary>设置 TitleBase.TitleBase(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.EnableAntialiasingGet">
            <summary>设置 TitleBase.get_EnableAntialiasing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimTitleBase.EnableAntialiasingSetDefaultBoolean">
            <summary>设置 TitleBase.set_EnableAntialiasing(DefaultBoolean value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimUpdateInfo">
            <summary>DevExpress.Charts.Model.UpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.#ctor(DevExpress.Charts.Model.UpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.ElementGet">
            <summary>设置 UpdateInfo.get_Element() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.ElementSetModelElement">
            <summary>设置 UpdateInfo.set_Element(ModelElement value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.HandledGet">
            <summary>设置 UpdateInfo.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.HandledSetBoolean">
            <summary>设置 UpdateInfo.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.PropertyNameGet">
            <summary>设置 UpdateInfo.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.PropertyNameSetString">
            <summary>设置 UpdateInfo.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.ToString01">
            <summary>设置 UpdateInfo.ToString() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.ValueGet">
            <summary>设置 UpdateInfo.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.AllInstances.ValueSetObject">
            <summary>设置 UpdateInfo.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.Constructor">
            <summary>设置 UpdateInfo.UpdateInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ConstructorModelElementStringObject">
            <summary>设置 UpdateInfo.UpdateInfo(ModelElement element, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ElementGet">
            <summary>设置 UpdateInfo.get_Element() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ElementSetModelElement">
            <summary>设置 UpdateInfo.set_Element(ModelElement value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.HandledGet">
            <summary>设置 UpdateInfo.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.HandledSetBoolean">
            <summary>设置 UpdateInfo.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.PropertyNameGet">
            <summary>设置 UpdateInfo.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.PropertyNameSetString">
            <summary>设置 UpdateInfo.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.StaticConstructor">
            <summary>设置 UpdateInfo.UpdateInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ToString">
            <summary>设置 UpdateInfo.ToString() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ValueGet">
            <summary>设置 UpdateInfo.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.ShimUpdateInfo.ValueSetObject">
            <summary>设置 UpdateInfo.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAreaSeries">
            <summary>DevExpress.Charts.Model.AreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeries.InitializeStub">
            <summary>初始化 type StubAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase">
            <summary>DevExpress.Charts.Model.AreaSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubAreaSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.InitializeStub">
            <summary>初始化 type StubAreaSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAreaSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxis">
            <summary>DevExpress.Charts.Model.Axis 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxis.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxis.#ctor(DevExpress.Charts.Model.CartesianChart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxis.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxis.InitializeStub">
            <summary>初始化 type StubAxis 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxis.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxis.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxis.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxis.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisAppearance">
            <summary>DevExpress.Charts.Model.AxisAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisAppearance.InitializeStub">
            <summary>初始化 type StubAxisAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisBase">
            <summary>DevExpress.Charts.Model.AxisBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisBase.#ctor(DevExpress.Charts.Model.Chart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisBase.InitializeStub">
            <summary>初始化 type StubAxisBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisCollection">
            <summary>DevExpress.Charts.Model.AxisCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.#ctor(DevExpress.Charts.Model.CartesianChart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.Add(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddAxis">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddCore(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddCoreAxis">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddIfNotAlreadyAdded(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddIfNotAlreadyAddedAxis">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddRangeCore(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddRangeCoreICollection">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.AddRangeICollection">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.Contains(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.ContainsAxis">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.FindAllCore(DevExpress.Utils.DXCollectionBase{DevExpress.Charts.Model.Axis},System.Predicate{DevExpress.Charts.Model.Axis})">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.FindAllCoreDXCollectionBaseOfAxisPredicateOfAxis">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.GetItem(System.Int32)">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.GetItemInt32">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.InitializeStub">
            <summary>初始化 type StubAxisCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.InnerList">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.InnerListGet">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.InsertCore(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.InsertCoreInt32Axis">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.InsertIfNotAlreadyInserted(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.InsertIfNotAlreadyInsertedInt32Axis">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.IsReadOnly">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.IsReadOnlyGet">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisCollection.Item(System.Int32)">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.ItemGetInt32">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnClear01">
            <summary>设置 ModelElementCollection`1.OnClear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnClearComplete">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnClearComplete01">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnInsert(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnInsertComplete(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnInsertCompleteInt32Axis">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnInsertInt32Axis">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnRemove(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnRemoveComplete(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnRemoveCompleteInt32Axis">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnRemoveInt32Axis">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnSet(System.Int32,DevExpress.Charts.Model.Axis,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnSetComplete(System.Int32,DevExpress.Charts.Model.Axis,DevExpress.Charts.Model.Axis)">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnSetCompleteInt32AxisAxis">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnSetInt32AxisAxis">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnValidate(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.OnValidateAxis">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.Remove(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveAtCore(System.Int32)">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveAtCoreInt32">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveAxis">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveCore(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveCoreAxis">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveIfAlreadyAdded(DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.RemoveIfAlreadyAddedAxis">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.SetItem(System.Int32,DevExpress.Charts.Model.Axis)">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.SetItemInt32Axis">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.Sort(System.Collections.Generic.IComparer{DevExpress.Charts.Model.Axis})">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.SortIComparerOfAxis">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisCollection.ToArray">
            <summary>设置 DXCollectionBase`1.ToArray() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisCollection.ToArray01">
            <summary>设置 DXCollectionBase`1.ToArray() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisLabel">
            <summary>DevExpress.Charts.Model.AxisLabel 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisLabel.#ctor(DevExpress.Charts.Model.AxisBase)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisLabel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisLabel.InitializeStub">
            <summary>初始化 type StubAxisLabel 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisLabel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisLabel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisLabel.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisLabel.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisRange">
            <summary>DevExpress.Charts.Model.AxisRange 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisRange.#ctor(DevExpress.Charts.Model.AxisBase)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisRange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisRange.InitializeStub">
            <summary>初始化 type StubAxisRange 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisRange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisRange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisRange.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisRange.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisTitle">
            <summary>DevExpress.Charts.Model.AxisTitle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitle.#ctor(DevExpress.Charts.Model.Axis)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitle.InitializeStub">
            <summary>初始化 type StubAxisTitle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitle.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisTitle.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance">
            <summary>DevExpress.Charts.Model.AxisTitleAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.InitializeStub">
            <summary>初始化 type StubAxisTitleAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubAxisTitleAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubBarSeries">
            <summary>DevExpress.Charts.Model.BarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBarSeries.InitializeStub">
            <summary>初始化 type StubBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubBorder">
            <summary>DevExpress.Charts.Model.Border 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBorder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBorder.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBorder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBorder.InitializeStub">
            <summary>初始化 type StubBorder 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBorder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBorder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBorder.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBorder.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubBubbleSeries">
            <summary>DevExpress.Charts.Model.BubbleSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBubbleSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBubbleSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBubbleSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBubbleSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBubbleSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubBubbleSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBubbleSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBubbleSeries.CreatePropertyBag">
            <summary>设置 BubbleSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBubbleSeries.CreatePropertyBag01">
            <summary>设置 BubbleSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBubbleSeries.InitializeStub">
            <summary>初始化 type StubBubbleSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBubbleSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubBubbleSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubBubbleSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubBubbleSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCandleStickSeries">
            <summary>DevExpress.Charts.Model.CandleStickSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubCandleStickSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.InitializeStub">
            <summary>初始化 type StubCandleStickSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCandleStickSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCartesian3DChart">
            <summary>DevExpress.Charts.Model.Cartesian3DChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.InitializeStub">
            <summary>初始化 type StubCartesian3DChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 Cartesian3DChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.IsSeriesValidSeriesModel">
            <summary>设置 Cartesian3DChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesian3DChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCartesianChart">
            <summary>DevExpress.Charts.Model.CartesianChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianChart.InitializeStub">
            <summary>初始化 type StubCartesianChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 CartesianChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianChart.IsSeriesValidSeriesModel">
            <summary>设置 CartesianChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.CartesianSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubCartesianSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.InitializeStub">
            <summary>初始化 type StubCartesianSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCartesianSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChart">
            <summary>DevExpress.Charts.Model.Chart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChart.InitializeStub">
            <summary>初始化 type StubChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 Chart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChart.IsSeriesValidSeriesModel">
            <summary>设置 Chart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartAppearance">
            <summary>DevExpress.Charts.Model.ChartAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearance.InitializeStub">
            <summary>初始化 type StubChartAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions">
            <summary>DevExpress.Charts.Model.ChartAppearanceOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.InitializeStub">
            <summary>初始化 type StubChartAppearanceOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartAppearanceOptions.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartModelException">
            <summary>DevExpress.Charts.Model.ChartModelException 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubChartModelException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubChartModelException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.InitializeStub">
            <summary>初始化 type StubChartModelException 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartModelException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartModelException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartModelException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartTitle">
            <summary>DevExpress.Charts.Model.ChartTitle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitle.InitializeStub">
            <summary>初始化 type StubChartTitle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitle.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitle.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance">
            <summary>DevExpress.Charts.Model.ChartTitleAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.InitializeStub">
            <summary>初始化 type StubChartTitleAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubChartTitleCollection">
            <summary>DevExpress.Charts.Model.ChartTitleCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.#ctor(DevExpress.Charts.Model.Chart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.Add(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddChartTitle">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddCore(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddCoreChartTitle">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddIfNotAlreadyAdded(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddIfNotAlreadyAddedChartTitle">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddRangeCore(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddRangeCoreICollection">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.AddRangeICollection">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.Contains(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.ContainsChartTitle">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.FindAllCore(DevExpress.Utils.DXCollectionBase{DevExpress.Charts.Model.ChartTitle},System.Predicate{DevExpress.Charts.Model.ChartTitle})">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.FindAllCoreDXCollectionBaseOfChartTitlePredicateOfChartTitle">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.GetItem(System.Int32)">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.GetItemInt32">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InitializeStub">
            <summary>初始化 type StubChartTitleCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InnerList">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InnerListGet">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InsertCore(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InsertCoreInt32ChartTitle">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InsertIfNotAlreadyInserted(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InsertIfNotAlreadyInsertedInt32ChartTitle">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.IsReadOnly">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.IsReadOnlyGet">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.Item(System.Int32)">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.ItemGetInt32">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnClear01">
            <summary>设置 ModelElementCollection`1.OnClear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnClearComplete">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnClearComplete01">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnInsert(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnInsertComplete(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnInsertCompleteInt32ChartTitle">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnInsertInt32ChartTitle">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnRemove(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnRemoveComplete(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnRemoveCompleteInt32ChartTitle">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnRemoveInt32ChartTitle">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnSet(System.Int32,DevExpress.Charts.Model.ChartTitle,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnSetComplete(System.Int32,DevExpress.Charts.Model.ChartTitle,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnSetCompleteInt32ChartTitleChartTitle">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnSetInt32ChartTitleChartTitle">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnValidate(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.OnValidateChartTitle">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.Remove(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveAtCore(System.Int32)">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveAtCoreInt32">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveChartTitle">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveCore(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveCoreChartTitle">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveIfAlreadyAdded(DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.RemoveIfAlreadyAddedChartTitle">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.SetItem(System.Int32,DevExpress.Charts.Model.ChartTitle)">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.SetItemInt32ChartTitle">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.Sort(System.Collections.Generic.IComparer{DevExpress.Charts.Model.ChartTitle})">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.SortIComparerOfChartTitle">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.ToArray">
            <summary>设置 DXCollectionBase`1.ToArray() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubChartTitleCollection.ToArray01">
            <summary>设置 DXCollectionBase`1.ToArray() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCircularAxisY">
            <summary>DevExpress.Charts.Model.CircularAxisY 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularAxisY.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularAxisY.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularAxisY.InitializeStub">
            <summary>初始化 type StubCircularAxisY 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularAxisY.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularAxisY.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularAxisY.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCircularAxisY.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubCircularChart">
            <summary>DevExpress.Charts.Model.CircularChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularChart.InitializeStub">
            <summary>初始化 type StubCircularChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubCircularChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 Chart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCircularChart.IsSeriesValidSeriesModel">
            <summary>设置 Chart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCircularChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubCircularChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubCircularChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachCartesianSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubColorEachCartesianSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.InitializeStub">
            <summary>初始化 type StubColorEachCartesianSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachCartesianSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachMarkerCartesianSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubColorEachMarkerCartesianSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.InitializeStub">
            <summary>初始化 type StubColorEachMarkerCartesianSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerCartesianSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase">
            <summary>DevExpress.Charts.Model.ColorEachMarkerSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubColorEachMarkerSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.InitializeStub">
            <summary>初始化 type StubColorEachMarkerSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubColorEachMarkerSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubController">
            <summary>DevExpress.Charts.Model.Controller 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.CalcHitInfo(System.Double,System.Double)">
            <summary>设置 Controller.CalcHitInfo(Double x, Double y) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.CalcHitInfoDoubleDouble">
            <summary>设置 Controller.CalcHitInfo(Double x, Double y) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubController.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.ClearSelection">
            <summary>设置 Controller.ClearSelection() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.ClearSelection01">
            <summary>设置 Controller.ClearSelection() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.InitializeStub">
            <summary>初始化 type StubController 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubController.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubController.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.OnModelChanged">
            <summary>设置 Controller.OnModelChanged() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.OnModelChanged01">
            <summary>设置 Controller.OnModelChanged() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.OnModelUpdated(DevExpress.Charts.Model.UpdateInfo)">
            <summary>设置 Controller.OnModelUpdated(UpdateInfo update) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.OnModelUpdatedUpdateInfo">
            <summary>设置 Controller.OnModelUpdated(UpdateInfo update) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.RenderChart(DevExpress.Charts.Model.IChartRenderContext)">
            <summary>设置 Controller.RenderChart(IChartRenderContext renderContext) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.RenderChartIChartRenderContext">
            <summary>设置 Controller.RenderChart(IChartRenderContext renderContext) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.Select(DevExpress.Charts.Model.ModelElement)">
            <summary>设置 Controller.Select(ModelElement element) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.SelectModelElement">
            <summary>设置 Controller.Select(ModelElement element) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubController.Unselect(DevExpress.Charts.Model.ModelElement)">
            <summary>设置 Controller.Unselect(ModelElement element) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubController.UnselectModelElement">
            <summary>设置 Controller.Unselect(ModelElement element) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance">
            <summary>DevExpress.Charts.Model.DiagrammAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.InitializeStub">
            <summary>初始化 type StubDiagrammAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubDiagrammAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubDonutSeries">
            <summary>DevExpress.Charts.Model.DonutSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDonutSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDonutSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubDonutSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubDonutSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDonutSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubDonutSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDonutSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDonutSeries.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubDonutSeries.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDonutSeries.InitializeStub">
            <summary>初始化 type StubDonutSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDonutSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubDonutSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubDonutSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubDonutSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFillOptions">
            <summary>DevExpress.Charts.Model.FillOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillOptions.InitializeStub">
            <summary>初始化 type StubFillOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillOptions.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFillOptions.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFillStyle">
            <summary>DevExpress.Charts.Model.FillStyle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillStyle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillStyle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillStyle.InitializeStub">
            <summary>初始化 type StubFillStyle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillStyle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFillStyle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFillStyle.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFillStyle.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries">
            <summary>DevExpress.Charts.Model.FullStackedAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubFullStackedAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.InitializeStub">
            <summary>初始化 type StubFullStackedAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries">
            <summary>DevExpress.Charts.Model.FullStackedBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubFullStackedBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.InitializeStub">
            <summary>初始化 type StubFullStackedBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries">
            <summary>DevExpress.Charts.Model.FullStackedLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubFullStackedLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.InitializeStub">
            <summary>初始化 type StubFullStackedLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries">
            <summary>DevExpress.Charts.Model.FullStackedSplineAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubFullStackedSplineAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.InitializeStub">
            <summary>初始化 type StubFullStackedSplineAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubFullStackedSplineAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubHitInfo">
            <summary>DevExpress.Charts.Model.HitInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubHitInfo.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubHitInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubHitInfo.Equals(System.Object)">
            <summary>设置 HitInfo.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubHitInfo.EqualsObject">
            <summary>设置 HitInfo.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubHitInfo.GetHashCode">
            <summary>设置 HitInfo.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubHitInfo.GetHashCode01">
            <summary>设置 HitInfo.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubHitInfo.InitializeStub">
            <summary>初始化 type StubHitInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubHitInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubHitInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIAxisLabelFormatter">
            <summary>DevExpress.Charts.Model.IAxisLabelFormatter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIAxisLabelFormatter.#ctor">
            <summary>初始化 type StubIAxisLabelFormatter 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIAxisLabelFormatter.DevExpress#Charts#Native#IAxisLabelFormatterCore#GetAxisLabelText(System.Object)">
            <summary>设置 IAxisLabelFormatterCore.GetAxisLabelText(Object axisValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIAxisLabelFormatter.GetAxisLabelTextObject">
            <summary>设置 IAxisLabelFormatterCore.GetAxisLabelText(Object axisValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIChart3D">
            <summary>DevExpress.Charts.Model.IChart3D 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIChart3D.#ctor">
            <summary>初始化 type StubIChart3D 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIChart3D.DevExpress#Charts#Model#IChart3D#Options3D">
            <summary>设置 IChart3D.get_Options3D() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIChart3D.Options3DGet">
            <summary>设置 IChart3D.get_Options3D() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIChartRenderContext">
            <summary>DevExpress.Charts.Model.IChartRenderContext 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIChartRenderContext.#ctor">
            <summary>初始化 type StubIChartRenderContext 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIChartRenderContext.DevExpress#Charts#Model#IChartRenderContext#Bounds">
            <summary>设置 IChartRenderContext.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIChartRenderContext.BoundsGet">
            <summary>设置 IChartRenderContext.get_Bounds() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIDataLabelFormatter">
            <summary>DevExpress.Charts.Model.IDataLabelFormatter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIDataLabelFormatter.#ctor">
            <summary>初始化 type StubIDataLabelFormatter 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIDataLabelFormatter.DevExpress#Charts#Model#IDataLabelFormatter#GetDataLabelText(DevExpress.Charts.Model.LabelPointData)">
            <summary>设置 IDataLabelFormatter.GetDataLabelText(LabelPointData pointData) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIDataLabelFormatter.GetDataLabelTextLabelPointData">
            <summary>设置 IDataLabelFormatter.GetDataLabelText(LabelPointData pointData) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIModelElementContainer">
            <summary>DevExpress.Charts.Model.IModelElementContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.#ctor">
            <summary>初始化 type StubIModelElementContainer 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.Clear">
            <summary>设置 IModelElementContainer.Clear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.DevExpress#Charts#Model#IModelElementContainer#Clear">
            <summary>设置 IModelElementContainer.Clear() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.DevExpress#Charts#Model#IModelElementContainer#FindModelElement(System.Object)">
            <summary>设置 IModelElementContainer.FindModelElement(Object viewObject) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.DevExpress#Charts#Model#IModelElementContainer#FindViewObject(DevExpress.Charts.Model.ModelElement)">
            <summary>设置 IModelElementContainer.FindViewObject(ModelElement element) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.DevExpress#Charts#Model#IModelElementContainer#Register(System.Object,DevExpress.Charts.Model.ModelElement)">
            <summary>设置 IModelElementContainer.Register(Object viewObject, ModelElement element) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.FindModelElementObject">
            <summary>设置 IModelElementContainer.FindModelElement(Object viewObject) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.FindViewObjectModelElement">
            <summary>设置 IModelElementContainer.FindViewObject(ModelElement element) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIModelElementContainer.RegisterObjectModelElement">
            <summary>设置 IModelElementContainer.Register(Object viewObject, ModelElement element) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIModelListener">
            <summary>DevExpress.Charts.Model.IModelListener 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelListener.#ctor">
            <summary>初始化 type StubIModelListener 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIModelListener.DevExpress#Charts#Model#IModelListener#OnModelUpdated(DevExpress.Charts.Model.UpdateInfo)">
            <summary>设置 IModelListener.OnModelUpdated(UpdateInfo update) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIModelListener.OnModelUpdatedUpdateInfo">
            <summary>设置 IModelListener.OnModelUpdated(UpdateInfo update) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubIOptions3D">
            <summary>DevExpress.Charts.Model.IOptions3D 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.#ctor">
            <summary>初始化 type StubIOptions3D 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.AttachBackingFieldToEnableAntialiasing">
            <summary>附加委托以将 StubIOptions3D.EnableAntialiasing 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.AttachBackingFieldToPerspectiveAngle">
            <summary>附加委托以将 StubIOptions3D.PerspectiveAngle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.AttachBackingFieldToRotationAngleX">
            <summary>附加委托以将 StubIOptions3D.RotationAngleX 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.AttachBackingFieldToRotationAngleY">
            <summary>附加委托以将 StubIOptions3D.RotationAngleY 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubIOptions3D.AttachBackingFieldToRotationAngleZ">
            <summary>附加委托以将 StubIOptions3D.RotationAngleZ 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIOptions3D.DevExpress#Charts#Model#IOptions3D#EnableAntialiasing">
            <summary>设置 IOptions3D.get_EnableAntialiasing() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.EnableAntialiasingGet">
            <summary>设置 IOptions3D.get_EnableAntialiasing() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.EnableAntialiasingSetBoolean">
            <summary>设置 IOptions3D.set_EnableAntialiasing(Boolean value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIOptions3D.DevExpress#Charts#Model#IOptions3D#PerspectiveAngle">
            <summary>设置 IOptions3D.get_PerspectiveAngle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.PerspectiveAngleGet">
            <summary>设置 IOptions3D.get_PerspectiveAngle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.PerspectiveAngleSetInt32">
            <summary>设置 IOptions3D.set_PerspectiveAngle(Int32 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIOptions3D.DevExpress#Charts#Model#IOptions3D#RotationAngleX">
            <summary>设置 IOptions3D.get_RotationAngleX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleXGet">
            <summary>设置 IOptions3D.get_RotationAngleX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleXSetInt32">
            <summary>设置 IOptions3D.set_RotationAngleX(Int32 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIOptions3D.DevExpress#Charts#Model#IOptions3D#RotationAngleY">
            <summary>设置 IOptions3D.get_RotationAngleY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleYGet">
            <summary>设置 IOptions3D.get_RotationAngleY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleYSetInt32">
            <summary>设置 IOptions3D.set_RotationAngleY(Int32 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubIOptions3D.DevExpress#Charts#Model#IOptions3D#RotationAngleZ">
            <summary>设置 IOptions3D.get_RotationAngleZ() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleZGet">
            <summary>设置 IOptions3D.get_RotationAngleZ() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubIOptions3D.RotationAngleZSetInt32">
            <summary>设置 IOptions3D.set_RotationAngleZ(Int32 value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries">
            <summary>DevExpress.Charts.Model.ISupportBar3DModelSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries.#ctor">
            <summary>初始化 type StubISupportBar3DModelSeries 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries.AttachBackingFieldToModel">
            <summary>附加委托以将 StubISupportBar3DModelSeries.Model 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries.DevExpress#Charts#Model#ISupportBar3DModelSeries#Model">
            <summary>设置 ISupportBar3DModelSeries.get_Model() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries.ModelGet">
            <summary>设置 ISupportBar3DModelSeries.get_Model() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportBar3DModelSeries.ModelSetBar3DModel">
            <summary>设置 ISupportBar3DModelSeries.set_Model(Bar3DModel value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries">
            <summary>DevExpress.Charts.Model.ISupportBarWidthSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries.#ctor">
            <summary>初始化 type StubISupportBarWidthSeries 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries.AttachBackingFieldToBarWidth">
            <summary>附加委托以将 StubISupportBarWidthSeries.BarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries.DevExpress#Charts#Model#ISupportBarWidthSeries#BarWidth">
            <summary>设置 ISupportBarWidthSeries.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries.BarWidthGet">
            <summary>设置 ISupportBarWidthSeries.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportBarWidthSeries.BarWidthSetDouble">
            <summary>设置 ISupportBarWidthSeries.set_BarWidth(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries">
            <summary>DevExpress.Charts.Model.ISupportColorEachSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries.#ctor">
            <summary>初始化 type StubISupportColorEachSeries 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries.AttachBackingFieldToColorEach">
            <summary>附加委托以将 StubISupportColorEachSeries.ColorEach 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries.DevExpress#Charts#Model#ISupportColorEachSeries#ColorEach">
            <summary>设置 ISupportColorEachSeries.get_ColorEach() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries.ColorEachGet">
            <summary>设置 ISupportColorEachSeries.get_ColorEach() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportColorEachSeries.ColorEachSetBoolean">
            <summary>设置 ISupportColorEachSeries.set_ColorEach(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries">
            <summary>DevExpress.Charts.Model.ISupportMarkerSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries.#ctor">
            <summary>初始化 type StubISupportMarkerSeries 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries.AttachBackingFieldToMarker">
            <summary>附加委托以将 StubISupportMarkerSeries.Marker 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries.DevExpress#Charts#Model#ISupportMarkerSeries#Marker">
            <summary>设置 ISupportMarkerSeries.get_Marker() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries.MarkerGet">
            <summary>设置 ISupportMarkerSeries.get_Marker() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportMarkerSeries.MarkerSetMarker">
            <summary>设置 ISupportMarkerSeries.set_Marker(Marker value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries">
            <summary>DevExpress.Charts.Model.ISupportTransparencySeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries.#ctor">
            <summary>初始化 type StubISupportTransparencySeries 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries.AttachBackingFieldToTransparency">
            <summary>附加委托以将 StubISupportTransparencySeries.Transparency 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries.DevExpress#Charts#Model#ISupportTransparencySeries#Transparency">
            <summary>设置 ISupportTransparencySeries.get_Transparency() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries.TransparencyGet">
            <summary>设置 ISupportTransparencySeries.get_Transparency() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubISupportTransparencySeries.TransparencySetByte">
            <summary>设置 ISupportTransparencySeries.set_Transparency(Byte value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLegend">
            <summary>DevExpress.Charts.Model.Legend 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegend.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegend.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegend.InitializeStub">
            <summary>初始化 type StubLegend 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegend.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegend.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegend.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegend.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLegendAppearance">
            <summary>DevExpress.Charts.Model.LegendAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendAppearance.InitializeStub">
            <summary>初始化 type StubLegendAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLegendItem">
            <summary>DevExpress.Charts.Model.LegendItem 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItem.InitializeStub">
            <summary>初始化 type StubLegendItem 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItem.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItem.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLegendItemCollection">
            <summary>DevExpress.Charts.Model.LegendItemCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.#ctor(DevExpress.Charts.Model.Legend)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.Add(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddCore(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddCoreLegendItem">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddIfNotAlreadyAdded(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddIfNotAlreadyAddedLegendItem">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddLegendItem">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddRangeCore(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddRangeCoreICollection">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.AddRangeICollection">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.Contains(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.ContainsLegendItem">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.FindAllCore(DevExpress.Utils.DXCollectionBase{DevExpress.Charts.Model.LegendItem},System.Predicate{DevExpress.Charts.Model.LegendItem})">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.FindAllCoreDXCollectionBaseOfLegendItemPredicateOfLegendItem">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.GetItem(System.Int32)">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.GetItemInt32">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InitializeStub">
            <summary>初始化 type StubLegendItemCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InnerList">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InnerListGet">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InsertCore(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InsertCoreInt32LegendItem">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InsertIfNotAlreadyInserted(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InsertIfNotAlreadyInsertedInt32LegendItem">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.IsReadOnly">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.IsReadOnlyGet">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.Item(System.Int32)">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.ItemGetInt32">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnClear01">
            <summary>设置 ModelElementCollection`1.OnClear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnClearComplete">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnClearComplete01">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnInsert(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnInsertComplete(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnInsertCompleteInt32LegendItem">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnInsertInt32LegendItem">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnRemove(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnRemoveComplete(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnRemoveCompleteInt32LegendItem">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnRemoveInt32LegendItem">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnSet(System.Int32,DevExpress.Charts.Model.LegendItem,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnSetComplete(System.Int32,DevExpress.Charts.Model.LegendItem,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnSetCompleteInt32LegendItemLegendItem">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnSetInt32LegendItemLegendItem">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnValidate(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.OnValidateLegendItem">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.Remove(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveAtCore(System.Int32)">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveAtCoreInt32">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveCore(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveCoreLegendItem">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveIfAlreadyAdded(DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveIfAlreadyAddedLegendItem">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.RemoveLegendItem">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.SetItem(System.Int32,DevExpress.Charts.Model.LegendItem)">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.SetItemInt32LegendItem">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.Sort(System.Collections.Generic.IComparer{DevExpress.Charts.Model.LegendItem})">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.SortIComparerOfLegendItem">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.ToArray">
            <summary>设置 DXCollectionBase`1.ToArray() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLegendItemCollection.ToArray01">
            <summary>设置 DXCollectionBase`1.ToArray() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLineSeries">
            <summary>DevExpress.Charts.Model.LineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineSeries.InitializeStub">
            <summary>初始化 type StubLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubLineStyle">
            <summary>DevExpress.Charts.Model.LineStyle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineStyle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineStyle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineStyle.InitializeStub">
            <summary>初始化 type StubLineStyle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineStyle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubLineStyle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubLineStyle.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubLineStyle.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries">
            <summary>DevExpress.Charts.Model.ManhattanBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubManhattanBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.CreatePropertyBag">
            <summary>设置 ManhattanBarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.CreatePropertyBag01">
            <summary>设置 ManhattanBarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.InitializeStub">
            <summary>初始化 type StubManhattanBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubManhattanBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubMarker">
            <summary>DevExpress.Charts.Model.Marker 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarker.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarker.InitializeStub">
            <summary>初始化 type StubMarker 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarker.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubMarker.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubMarkerAppearance">
            <summary>DevExpress.Charts.Model.MarkerAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.InitializeStub">
            <summary>初始化 type StubMarkerAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubMarkerAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase">
            <summary>DevExpress.Charts.Model.ModelControllerFactoryBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.CreateController">
            <summary>设置 ModelControllerFactoryBase.CreateController() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.CreateController01">
            <summary>设置 ModelControllerFactoryBase.CreateController() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.CreateRenderContext(DevExpress.Charts.Model.ModelRect,System.Object[])">
            <summary>设置 ModelControllerFactoryBase.CreateRenderContext(ModelRect bounds, Object[] renderParams) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.CreateRenderContextModelRectObjectArray">
            <summary>设置 ModelControllerFactoryBase.CreateRenderContext(ModelRect bounds, Object[] renderParams) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.InitializeStub">
            <summary>初始化 type StubModelControllerFactoryBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelControllerFactoryBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubModelElement">
            <summary>DevExpress.Charts.Model.ModelElement 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElement.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElement.InitializeStub">
            <summary>初始化 type StubModelElement 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElement.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElement.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1">
            <summary>DevExpress.Charts.Model.ModelElementCollection`1 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.Add(`0)">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddCore(`0)">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddCoreT0">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddIfNotAlreadyAdded(`0)">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddIfNotAlreadyAddedT0">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddRange(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddRangeCore(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddRangeCoreICollection">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddRangeICollection">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.AddT0">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.Contains(`0)">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.ContainsT0">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.FindAllCore(DevExpress.Utils.DXCollectionBase{`0},System.Predicate{`0})">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.FindAllCoreDXCollectionBaseOfT0PredicateOfT0">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.GetItem(System.Int32)">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.GetItemInt32">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InitializeStub">
            <summary>初始化 type StubModelElementCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InnerList">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InnerListGet">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InsertCore(System.Int32,`0)">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InsertCoreInt32T0">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InsertIfNotAlreadyInserted(System.Int32,`0)">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InsertIfNotAlreadyInsertedInt32T0">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.IsReadOnly">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.IsReadOnlyGet">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.Item(System.Int32)">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.ItemGetInt32">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnClear01">
            <summary>设置 ModelElementCollection`1.OnClear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnClearComplete">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnClearComplete01">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnInsert(System.Int32,`0)">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnInsertComplete(System.Int32,`0)">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnInsertCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnInsertInt32T0">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnRemove(System.Int32,`0)">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnRemoveComplete(System.Int32,`0)">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnRemoveCompleteInt32T0">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnRemoveInt32T0">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnSet(System.Int32,`0,`0)">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnSetComplete(System.Int32,`0,`0)">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnSetCompleteInt32T0T0">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnSetInt32T0T0">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnValidate(`0)">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.OnValidateT0">
            <summary>设置 DXCollectionBase`1.OnValidate(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.Remove(`0)">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveAtCore(System.Int32)">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveAtCoreInt32">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveCore(`0)">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveCoreT0">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveIfAlreadyAdded(`0)">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveIfAlreadyAddedT0">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.RemoveT0">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.SetItem(System.Int32,`0)">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.SetItemInt32T0">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.SortIComparerOfT0">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.ToArray">
            <summary>设置 DXCollectionBase`1.ToArray() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubModelElementCollection`1.ToArray01">
            <summary>设置 DXCollectionBase`1.ToArray() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubModelElementContainer">
            <summary>DevExpress.Charts.Model.ModelElementContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementContainer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelElementContainer.InitializeStub">
            <summary>初始化 type StubModelElementContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelElementContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs">
            <summary>DevExpress.Charts.Model.ModelUpdatedEventArgs 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs.#ctor(DevExpress.Charts.Model.UpdateInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs.InitializeStub">
            <summary>初始化 type StubModelUpdatedEventArgs 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubModelUpdatedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries">
            <summary>DevExpress.Charts.Model.NestedDonutSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubNestedDonutSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.InitializeStub">
            <summary>初始化 type StubNestedDonutSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubNestedDonutSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubNonPolarAxis">
            <summary>DevExpress.Charts.Model.NonPolarAxis 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.#ctor(DevExpress.Charts.Model.Chart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.InitializeStub">
            <summary>初始化 type StubNonPolarAxis 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubNonPolarAxis.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubOptions3D">
            <summary>DevExpress.Charts.Model.Options3D 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubOptions3D.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubOptions3D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubOptions3D.InitializeStub">
            <summary>初始化 type StubOptions3D 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubOptions3D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubOptions3D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubOptions3D.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubOptions3D.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPalette">
            <summary>DevExpress.Charts.Model.Palette 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPalette.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPalette.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPalette.#ctor(System.Collections.Generic.List{DevExpress.Charts.Model.PaletteEntry})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPalette.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPalette.InitializeStub">
            <summary>初始化 type StubPalette 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPalette.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPalette.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPalette.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPalette.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPie3DChart">
            <summary>DevExpress.Charts.Model.Pie3DChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPie3DChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPie3DChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPie3DChart.InitializeStub">
            <summary>初始化 type StubPie3DChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPie3DChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPie3DChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPie3DChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPie3DChart.IsSeriesValidSeriesModel">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPie3DChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPie3DChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPie3DChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPie3DChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPieChart">
            <summary>DevExpress.Charts.Model.PieChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieChart.InitializeStub">
            <summary>初始化 type StubPieChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieChart.IsSeriesValidSeriesModel">
            <summary>设置 PieChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPieSeries">
            <summary>DevExpress.Charts.Model.PieSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPieSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeries.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeries.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeries.InitializeStub">
            <summary>初始化 type StubPieSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPieSeriesBase">
            <summary>DevExpress.Charts.Model.PieSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPieSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.InitializeStub">
            <summary>初始化 type StubPieSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPieSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPointSeries">
            <summary>DevExpress.Charts.Model.PointSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPointSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeries.InitializeStub">
            <summary>初始化 type StubPointSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPointSeriesBase">
            <summary>DevExpress.Charts.Model.PointSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPointSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.InitializeStub">
            <summary>初始化 type StubPointSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPointSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries">
            <summary>DevExpress.Charts.Model.PolarAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.ArgumentScaleType">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPolarAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.CreatePropertyBag">
            <summary>设置 PolarAreaSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.CreatePropertyBag01">
            <summary>设置 PolarAreaSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.InitializeStub">
            <summary>初始化 type StubPolarAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarAxisX">
            <summary>DevExpress.Charts.Model.PolarAxisX 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAxisX.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAxisX.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAxisX.InitializeStub">
            <summary>初始化 type StubPolarAxisX 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAxisX.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarAxisX.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarAxisX.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarAxisX.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarChart">
            <summary>DevExpress.Charts.Model.PolarChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarChart.InitializeStub">
            <summary>初始化 type StubPolarChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 PolarChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarChart.IsSeriesValidSeriesModel">
            <summary>设置 PolarChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarLineSeries">
            <summary>DevExpress.Charts.Model.PolarLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.ArgumentScaleType">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPolarLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.InitializeStub">
            <summary>初始化 type StubPolarLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarPointSeries">
            <summary>DevExpress.Charts.Model.PolarPointSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.ArgumentScaleType">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPolarPointSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.InitializeStub">
            <summary>初始化 type StubPolarPointSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarPointSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase">
            <summary>DevExpress.Charts.Model.PolarSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.ArgumentScaleType">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 PolarSeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 PolarSeriesBase.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubPolarSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.InitializeStub">
            <summary>初始化 type StubPolarSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubPolarSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries">
            <summary>DevExpress.Charts.Model.RadarAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRadarAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.CreatePropertyBag">
            <summary>设置 RadarAreaSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.CreatePropertyBag01">
            <summary>设置 RadarAreaSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.InitializeStub">
            <summary>初始化 type StubRadarAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarAxisX">
            <summary>DevExpress.Charts.Model.RadarAxisX 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAxisX.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAxisX.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAxisX.InitializeStub">
            <summary>初始化 type StubRadarAxisX 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAxisX.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarAxisX.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarAxisX.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarAxisX.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarChart">
            <summary>DevExpress.Charts.Model.RadarChart 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarChart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarChart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarChart.InitializeStub">
            <summary>初始化 type StubRadarChart 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarChart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarChart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarChart.IsSeriesValid(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 RadarChart.IsSeriesValid(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarChart.IsSeriesValidSeriesModel">
            <summary>设置 RadarChart.IsSeriesValid(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarChart.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarChart.NotifyParentModelElementStringObject">
            <summary>设置 Chart.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarChart.SetListener(DevExpress.Charts.Model.IModelListener)">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarChart.SetListenerIModelListener">
            <summary>设置 Chart.SetListener(IModelListener listener) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarLineSeries">
            <summary>DevExpress.Charts.Model.RadarLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRadarLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.InitializeStub">
            <summary>初始化 type StubRadarLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarPointSeries">
            <summary>DevExpress.Charts.Model.RadarPointSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRadarPointSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.InitializeStub">
            <summary>初始化 type StubRadarPointSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarPointSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase">
            <summary>DevExpress.Charts.Model.RadarSeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRadarSeriesBase.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.CreatePropertyBag">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.InitializeStub">
            <summary>初始化 type StubRadarSeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRadarSeriesBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries">
            <summary>DevExpress.Charts.Model.RangeAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRangeAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.InitializeStub">
            <summary>初始化 type StubRangeAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRangeBarSeries">
            <summary>DevExpress.Charts.Model.RangeBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubRangeBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.InitializeStub">
            <summary>初始化 type StubRangeBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRangeBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubRectangleIndents">
            <summary>DevExpress.Charts.Model.RectangleIndents 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRectangleIndents.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRectangleIndents.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRectangleIndents.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRectangleIndents.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRectangleIndents.InitializeStub">
            <summary>初始化 type StubRectangleIndents 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRectangleIndents.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubRectangleIndents.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubRectangleIndents.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubRectangleIndents.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubScatterLineSeries">
            <summary>DevExpress.Charts.Model.ScatterLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubScatterLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.InitializeStub">
            <summary>初始化 type StubScatterLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubScatterLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSeriesAppearance">
            <summary>DevExpress.Charts.Model.SeriesAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.InitializeStub">
            <summary>初始化 type StubSeriesAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSeriesCollection">
            <summary>DevExpress.Charts.Model.SeriesCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.#ctor(DevExpress.Charts.Model.Chart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.Add(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddCore(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddCoreSeriesModel">
            <summary>设置 DXCollectionBase`1.AddCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddIfNotAlreadyAdded(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddIfNotAlreadyAddedSeriesModel">
            <summary>设置 DXCollectionBase`1.AddIfNotAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddRange(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddRangeCore(System.Collections.ICollection)">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddRangeCoreICollection">
            <summary>设置 DXCollectionBase`1.AddRangeCore(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddRangeICollection">
            <summary>设置 DXCollectionBase`1.AddRange(ICollection collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.AddSeriesModel">
            <summary>设置 DXCollectionBase`1.Add(!0 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.Contains(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.ContainsSeriesModel">
            <summary>设置 DXCollectionBase`1.Contains(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.FindAllCore(DevExpress.Utils.DXCollectionBase{DevExpress.Charts.Model.SeriesModel},System.Predicate{DevExpress.Charts.Model.SeriesModel})">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.FindAllCoreDXCollectionBaseOfSeriesModelPredicateOfSeriesModel">
            <summary>设置 DXCollectionBase`1.FindAllCore(DXCollectionBase`1&lt;!0&gt; result, Predicate`1&lt;!0&gt; match) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.GetItem(System.Int32)">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.GetItemInt32">
            <summary>设置 DXCollectionBase`1.GetItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InitializeStub">
            <summary>初始化 type StubSeriesCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InnerList">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InnerListGet">
            <summary>设置 DXCollectionBase`1.get_InnerList() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InsertCore(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InsertCoreInt32SeriesModel">
            <summary>设置 DXCollectionBase`1.InsertCore(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InsertIfNotAlreadyInserted(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InsertIfNotAlreadyInsertedInt32SeriesModel">
            <summary>设置 DXCollectionBase`1.InsertIfNotAlreadyInserted(Int32 index, !0 obj) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.IsReadOnly">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.IsReadOnlyGet">
            <summary>设置 DXCollectionBase`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesCollection.Item(System.Int32)">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.ItemGetInt32">
            <summary>设置 DXCollection`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnClear">
            <summary>设置 ModelElementCollection`1.OnClear() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnClear01">
            <summary>设置 ModelElementCollection`1.OnClear() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnClearComplete">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnClearComplete01">
            <summary>设置 DXCollectionBase`1.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnInsert(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnInsertComplete(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnInsertCompleteInt32SeriesModel">
            <summary>设置 ModelElementCollection`1.OnInsertComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnInsertInt32SeriesModel">
            <summary>设置 DXCollectionBase`1.OnInsert(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnRemove(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnRemoveComplete(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnRemoveCompleteInt32SeriesModel">
            <summary>设置 ModelElementCollection`1.OnRemoveComplete(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnRemoveInt32SeriesModel">
            <summary>设置 DXCollectionBase`1.OnRemove(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnSet(System.Int32,DevExpress.Charts.Model.SeriesModel,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnSetComplete(System.Int32,DevExpress.Charts.Model.SeriesModel,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnSetCompleteInt32SeriesModelSeriesModel">
            <summary>设置 ModelElementCollection`1.OnSetComplete(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnSetInt32SeriesModelSeriesModel">
            <summary>设置 DXCollectionBase`1.OnSet(Int32 index, !0 oldValue, !0 newValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnValidate(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 SeriesCollection.OnValidate(SeriesModel value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.OnValidateSeriesModel">
            <summary>设置 SeriesCollection.OnValidate(SeriesModel value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.Remove(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveAtCore(System.Int32)">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveAtCoreInt32">
            <summary>设置 DXCollectionBase`1.RemoveAtCore(Int32 index) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveCore(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveCoreSeriesModel">
            <summary>设置 DXCollectionBase`1.RemoveCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveIfAlreadyAdded(DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveIfAlreadyAddedSeriesModel">
            <summary>设置 DXCollectionBase`1.RemoveIfAlreadyAdded(!0 obj) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.RemoveSeriesModel">
            <summary>设置 DXCollectionBase`1.Remove(!0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.SetItem(System.Int32,DevExpress.Charts.Model.SeriesModel)">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.SetItemInt32SeriesModel">
            <summary>设置 DXCollection`1.SetItem(Int32 index, !0 value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.Sort(System.Collections.Generic.IComparer{DevExpress.Charts.Model.SeriesModel})">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.SortIComparerOfSeriesModel">
            <summary>设置 DXCollectionBase`1.Sort(IComparer`1&lt;!0&gt; comparer) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesCollection.ToArray">
            <summary>设置 DXCollectionBase`1.ToArray() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesCollection.ToArray01">
            <summary>设置 DXCollectionBase`1.ToArray() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSeriesLabel">
            <summary>DevExpress.Charts.Model.SeriesLabel 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabel.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabel.InitializeStub">
            <summary>初始化 type StubSeriesLabel 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabel.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesLabel.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance">
            <summary>DevExpress.Charts.Model.SeriesLabelAppearance 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.InitializeStub">
            <summary>初始化 type StubSeriesLabelAppearance 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesLabelAppearance.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSeriesModel">
            <summary>DevExpress.Charts.Model.SeriesModel 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesModel.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesModel.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesModel.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesModel.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSeriesModel.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesModel.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesModel.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesModel.InitializeStub">
            <summary>初始化 type StubSeriesModel 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSeriesModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSeriesModel.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSeriesModel.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubShadow">
            <summary>DevExpress.Charts.Model.Shadow 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubShadow.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubShadow.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubShadow.InitializeStub">
            <summary>初始化 type StubShadow 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubShadow.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubShadow.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubShadow.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubShadow.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSideBySideBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.InitializeStub">
            <summary>初始化 type StubSideBySideBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideFullStackedBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSideBySideFullStackedBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.InitializeStub">
            <summary>初始化 type StubSideBySideFullStackedBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideFullStackedBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideRangeBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSideBySideRangeBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.InitializeStub">
            <summary>初始化 type StubSideBySideRangeBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideRangeBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries">
            <summary>DevExpress.Charts.Model.SideBySideStackedBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSideBySideStackedBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.InitializeStub">
            <summary>初始化 type StubSideBySideStackedBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSideBySideStackedBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries">
            <summary>DevExpress.Charts.Model.SplineAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSplineAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.InitializeStub">
            <summary>初始化 type StubSplineAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubSplineSeries">
            <summary>DevExpress.Charts.Model.SplineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubSplineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineSeries.InitializeStub">
            <summary>初始化 type StubSplineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubSplineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubSplineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubSplineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries">
            <summary>DevExpress.Charts.Model.StackedAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStackedAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.InitializeStub">
            <summary>初始化 type StubStackedAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStackedBarSeries">
            <summary>DevExpress.Charts.Model.StackedBarSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStackedBarSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.CreatePropertyBag">
            <summary>设置 BarSeries.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.CreatePropertyBag01">
            <summary>设置 BarSeries.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.InitializeStub">
            <summary>初始化 type StubStackedBarSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedBarSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStackedLineSeries">
            <summary>DevExpress.Charts.Model.StackedLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStackedLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.InitializeStub">
            <summary>初始化 type StubStackedLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries">
            <summary>DevExpress.Charts.Model.StackedSplineAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStackedSplineAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.InitializeStub">
            <summary>初始化 type StubStackedSplineAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStackedSplineAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStepAreaSeries">
            <summary>DevExpress.Charts.Model.StepAreaSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStepAreaSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.CreatePropertyBag">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.CreatePropertyBag01">
            <summary>设置 AreaSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.InitializeStub">
            <summary>初始化 type StubStepAreaSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepAreaSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStepLineSeries">
            <summary>DevExpress.Charts.Model.StepLineSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepLineSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepLineSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepLineSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepLineSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepLineSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStepLineSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepLineSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepLineSeries.CreatePropertyBag">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepLineSeries.CreatePropertyBag01">
            <summary>设置 ColorEachMarkerCartesianSeriesBase.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepLineSeries.InitializeStub">
            <summary>初始化 type StubStepLineSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepLineSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStepLineSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStepLineSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStepLineSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubStockSeries">
            <summary>DevExpress.Charts.Model.StockSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStockSeries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStockSeries.ArgumentScaleType">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStockSeries.ArgumentScaleTypeGet">
            <summary>设置 SeriesModel.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStockSeries.ArgumentScaleTypeSetArgumentScaleType">
            <summary>设置 SeriesModel.set_ArgumentScaleType(ArgumentScaleType value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStockSeries.AttachBackingFieldToArgumentScaleType">
            <summary>附加委托以将 StubStockSeries.ArgumentScaleType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStockSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStockSeries.CreatePropertyBag">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStockSeries.CreatePropertyBag01">
            <summary>设置 SeriesModel.CreatePropertyBag() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStockSeries.InitializeStub">
            <summary>初始化 type StubStockSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStockSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubStockSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubStockSeries.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubStockSeries.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase">
            <summary>DevExpress.Charts.Model.TitleAppearanceBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.InitializeStub">
            <summary>初始化 type StubTitleAppearanceBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubTitleAppearanceBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubTitleBase">
            <summary>DevExpress.Charts.Model.TitleBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleBase.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleBase.InitializeStub">
            <summary>初始化 type StubTitleBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubTitleBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubTitleBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubTitleBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Fakes.StubUpdateInfo">
            <summary>DevExpress.Charts.Model.UpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubUpdateInfo.#ctor(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubUpdateInfo.InitializeStub">
            <summary>初始化 type StubUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Fakes.StubUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Fakes.StubUpdateInfo.ToString">
            <summary>设置 UpdateInfo.ToString() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Fakes.StubUpdateInfo.ToString01">
            <summary>设置 UpdateInfo.ToString() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport">
            <summary>DevExpress.Charts.Model.Native.Bar3DModelBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.#ctor(DevExpress.Charts.Model.Native.Bar3DModelBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.AllInstances.ModelGet">
            <summary>设置 Bar3DModelBagSupport.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.AllInstances.ModelSetBar3DModel">
            <summary>设置 Bar3DModelBagSupport.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.Bind(DevExpress.Charts.Model.ISupportBar3DModelSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.Constructor">
            <summary>设置 Bar3DModelBagSupport.Bar3DModelBagSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.ModelGet">
            <summary>设置 Bar3DModelBagSupport.get_Model() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBar3DModelBagSupport.ModelSetBar3DModel">
            <summary>设置 Bar3DModelBagSupport.set_Model(Bar3DModel value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport">
            <summary>DevExpress.Charts.Model.Native.BarWidthBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.#ctor(DevExpress.Charts.Model.Native.BarWidthBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.AllInstances.BarWidthGet">
            <summary>设置 BarWidthBagSupport.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.AllInstances.BarWidthSetDouble">
            <summary>设置 BarWidthBagSupport.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.BarWidthGet">
            <summary>设置 BarWidthBagSupport.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.BarWidthSetDouble">
            <summary>设置 BarWidthBagSupport.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.Bind(DevExpress.Charts.Model.ISupportBarWidthSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimBarWidthBagSupport.Constructor">
            <summary>设置 BarWidthBagSupport.BarWidthBagSupport() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport">
            <summary>DevExpress.Charts.Model.Native.ColorEachBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.#ctor(DevExpress.Charts.Model.Native.ColorEachBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.AllInstances.ColorEachGet">
            <summary>设置 ColorEachBagSupport.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.AllInstances.ColorEachSetBoolean">
            <summary>设置 ColorEachBagSupport.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.Bind(DevExpress.Charts.Model.ISupportColorEachSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.ColorEachGet">
            <summary>设置 ColorEachBagSupport.get_ColorEach() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.ColorEachSetBoolean">
            <summary>设置 ColorEachBagSupport.set_ColorEach(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimColorEachBagSupport.Constructor">
            <summary>设置 ColorEachBagSupport.ColorEachBagSupport() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag">
            <summary>DevExpress.Charts.Model.Native.EmptyPropertyBag 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.#ctor(DevExpress.Charts.Model.Native.EmptyPropertyBag)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.Constructor">
            <summary>设置 EmptyPropertyBag.EmptyPropertyBag() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimEmptyPropertyBag.StaticConstructor">
            <summary>设置 EmptyPropertyBag.EmptyPropertyBag() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag`1 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.#ctor(DevExpress.Charts.Model.Native.GenericPropertyBag{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.AllInstances.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Model.Native.GenericPropertyBag{`0},``0})">
            <summary>设置 GenericPropertyBag`1.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.AllInstances.Support1Get">
            <summary>设置 GenericPropertyBag`1.get_Support1() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.ConstructorModelElement">
            <summary>设置 GenericPropertyBag`1.GenericPropertyBag`1(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GenericPropertyBag`1.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag`1.Support1Get">
            <summary>设置 GenericPropertyBag`1.get_Support1() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag2`2 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.#ctor(DevExpress.Charts.Model.Native.GenericPropertyBag2{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.AllInstances.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Model.Native.GenericPropertyBag2{`0,`1},``0})">
            <summary>设置 GenericPropertyBag2`2.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.AllInstances.Support2Get">
            <summary>设置 GenericPropertyBag2`2.get_Support2() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.ConstructorModelElement">
            <summary>设置 GenericPropertyBag2`2.GenericPropertyBag2`2(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GenericPropertyBag2`2.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag2`2.Support2Get">
            <summary>设置 GenericPropertyBag2`2.get_Support2() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag3`3 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.#ctor(DevExpress.Charts.Model.Native.GenericPropertyBag3{`0,`1,`2})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.AllInstances.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Model.Native.GenericPropertyBag3{`0,`1,`2},``0})">
            <summary>设置 GenericPropertyBag3`3.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.AllInstances.Support3Get">
            <summary>设置 GenericPropertyBag3`3.get_Support3() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.ConstructorModelElement">
            <summary>设置 GenericPropertyBag3`3.GenericPropertyBag3`3(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GenericPropertyBag3`3.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag3`3.Support3Get">
            <summary>设置 GenericPropertyBag3`3.get_Support3() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag4`4 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.#ctor(DevExpress.Charts.Model.Native.GenericPropertyBag4{`0,`1,`2,`3})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.AllInstances.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Model.Native.GenericPropertyBag4{`0,`1,`2,`3},``0})">
            <summary>设置 GenericPropertyBag4`4.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.AllInstances.Support4Get">
            <summary>设置 GenericPropertyBag4`4.get_Support4() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.ConstructorModelElement">
            <summary>设置 GenericPropertyBag4`4.GenericPropertyBag4`4(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GenericPropertyBag4`4.GetSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimGenericPropertyBag4`4.Support4Get">
            <summary>设置 GenericPropertyBag4`4.get_Support4() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport">
            <summary>DevExpress.Charts.Model.Native.MarkerBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.#ctor(DevExpress.Charts.Model.Native.MarkerBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.AllInstances.MarkerGet">
            <summary>设置 MarkerBagSupport.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.AllInstances.MarkerSetMarker">
            <summary>设置 MarkerBagSupport.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.Bind(DevExpress.Charts.Model.ISupportMarkerSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.Constructor">
            <summary>设置 MarkerBagSupport.MarkerBagSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.MarkerGet">
            <summary>设置 MarkerBagSupport.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimMarkerBagSupport.MarkerSetMarker">
            <summary>设置 MarkerBagSupport.set_Marker(Marker value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase">
            <summary>DevExpress.Charts.Model.Native.SeriesPropertyBagBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.#ctor(DevExpress.Charts.Model.Native.SeriesPropertyBagBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.AllInstances.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Model.Native.SeriesPropertyBagBase,``0})">
            <summary>设置 SeriesPropertyBagBase.GetSupport() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.Constructor">
            <summary>设置 SeriesPropertyBagBase.SeriesPropertyBagBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.ConstructorModelElement">
            <summary>设置 SeriesPropertyBagBase.SeriesPropertyBagBase(ModelElement parent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagBase.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 SeriesPropertyBagBase.GetSupport() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport">
            <summary>DevExpress.Charts.Model.Native.SeriesPropertyBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.#ctor(DevExpress.Charts.Model.Native.SeriesPropertyBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimSeriesPropertyBagSupport.Constructor">
            <summary>设置 SeriesPropertyBagSupport.SeriesPropertyBagSupport() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport">
            <summary>DevExpress.Charts.Model.Native.TransparencyBagSupport 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.#ctor(DevExpress.Charts.Model.Native.TransparencyBagSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.AllInstances.TransparencyGet">
            <summary>设置 TransparencyBagSupport.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.AllInstances.TransparencySetByte">
            <summary>设置 TransparencyBagSupport.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.Bind(DevExpress.Charts.Model.ISupportTransparencySeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.Constructor">
            <summary>设置 TransparencyBagSupport.TransparencyBagSupport() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.TransparencyGet">
            <summary>设置 TransparencyBagSupport.get_Transparency() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.ShimTransparencyBagSupport.TransparencySetByte">
            <summary>设置 TransparencyBagSupport.set_Transparency(Byte value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag`1 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.GetSupport``1">
            <summary>设置 GenericPropertyBag`1.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.InitializeStub">
            <summary>初始化 type StubGenericPropertyBag 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag`1.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag2`2 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.GetSupport``1">
            <summary>设置 GenericPropertyBag2`2.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.InitializeStub">
            <summary>初始化 type StubGenericPropertyBag2 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag2`2.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag3`3 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.GetSupport``1">
            <summary>设置 GenericPropertyBag3`3.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.InitializeStub">
            <summary>初始化 type StubGenericPropertyBag3 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag3`3.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4">
            <summary>DevExpress.Charts.Model.Native.GenericPropertyBag4`4 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.GetSupport``1">
            <summary>设置 GenericPropertyBag4`4.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.InitializeStub">
            <summary>初始化 type StubGenericPropertyBag4 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubGenericPropertyBag4`4.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase">
            <summary>DevExpress.Charts.Model.Native.SeriesPropertyBagBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.#ctor(DevExpress.Charts.Model.ModelElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.GetSupport``1">
            <summary>设置 SeriesPropertyBagBase.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.InitializeStub">
            <summary>初始化 type StubSeriesPropertyBagBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagBase.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport">
            <summary>DevExpress.Charts.Model.Native.SeriesPropertyBagSupport 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.GetSupport``1">
            <summary>设置 SeriesPropertyBagBase.GetSupport() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.GetSupportOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetSupport() 的存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.InitializeStub">
            <summary>初始化 type StubSeriesPropertyBagSupport 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.NotifyParent(DevExpress.Charts.Model.ModelElement,System.String,System.Object)">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Model.Native.Fakes.StubSeriesPropertyBagSupport.NotifyParentModelElementStringObject">
            <summary>设置 ModelElement.NotifyParent(ModelElement element, String propertyName, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint">
            <summary>DevExpress.Charts.Native.AggregatedSeriesPoint 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.#ctor(DevExpress.Charts.Native.AggregatedSeriesPoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.AnimatedValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_AnimatedValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.ArgumentGet">
            <summary>设置 AggregatedSeriesPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.ArgumentScaleTypeDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.ArgumentSetObject">
            <summary>设置 AggregatedSeriesPoint.set_Argument(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.DateTimeArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_DateTimeArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.DateTimeValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_DateTimeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.DateTimeValuesGet">
            <summary>设置 AggregatedSeriesPoint.get_DateTimeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.DevExpressChartsNativeISeriesPointIsEmptyScale">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.IsEmpty(Scale scale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.InitializeArguments">
            <summary>设置 AggregatedSeriesPoint.InitializeArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.InternalArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_InternalArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.InternalArgumentDevExpressChartsNativeISeriesPointsetDouble">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.set_InternalArgument(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.InternalValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_InternalValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.InternalValuesDevExpressChartsNativeISeriesPointsetDoubleArray">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.set_InternalValues(Double[] value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.IsAuxiliaryGet">
            <summary>设置 AggregatedSeriesPoint.get_IsAuxiliary() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.IsEmptyGet">
            <summary>设置 AggregatedSeriesPoint.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.NumericalArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_NumericalArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.QualitativeArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_QualitativeArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.SeriesGet">
            <summary>设置 AggregatedSeriesPoint.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.SourcePointsGet">
            <summary>设置 AggregatedSeriesPoint.get_SourcePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.ToolTipHintDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_ToolTipHint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.UserArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_UserArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.UserValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_UserValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AllInstances.ValuesGet">
            <summary>设置 AggregatedSeriesPoint.get_Values() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.AnimatedValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_AnimatedValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ArgumentGet">
            <summary>设置 AggregatedSeriesPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ArgumentScaleTypeDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ArgumentSetObject">
            <summary>设置 AggregatedSeriesPoint.set_Argument(Object value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.Bind(DevExpress.Charts.Native.ISeriesPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ConstructorRefinedSeriesScaleObjectDateTimeArrayDoubleArrayIListOfRefinedPointBoolean">
            <summary>设置 AggregatedSeriesPoint.AggregatedSeriesPoint(RefinedSeries owner, Scale argumentScaleType, Object argument, DateTime[] values, Double[] userValues, IList`1&lt;RefinedPoint&gt; sourcePoints, Boolean isEmpty) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ConstructorRefinedSeriesScaleObjectDoubleArrayIListOfRefinedPointBooleanBoolean">
            <summary>设置 AggregatedSeriesPoint.AggregatedSeriesPoint(RefinedSeries owner, Scale argumentScaleType, Object argument, Double[] values, IList`1&lt;RefinedPoint&gt; sourcePoints, Boolean isEmpty, Boolean isAuxiliary) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ConstructorRefinedSeriesScaleObjectIListOfRefinedPointBooleanBoolean">
            <summary>设置 AggregatedSeriesPoint.AggregatedSeriesPoint(RefinedSeries owner, Scale argumentScaleType, Object argument, IList`1&lt;RefinedPoint&gt; sourcePoints, Boolean isEmpty, Boolean isAuxiliary) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.DateTimeArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_DateTimeArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.DateTimeValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_DateTimeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.DateTimeValuesGet">
            <summary>设置 AggregatedSeriesPoint.get_DateTimeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.DevExpressChartsNativeISeriesPointIsEmptyScale">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.IsEmpty(Scale scale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.InitializeArguments">
            <summary>设置 AggregatedSeriesPoint.InitializeArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.InternalArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_InternalArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.InternalArgumentDevExpressChartsNativeISeriesPointsetDouble">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.set_InternalArgument(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.InternalValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_InternalValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.InternalValuesDevExpressChartsNativeISeriesPointsetDoubleArray">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.set_InternalValues(Double[] value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.IsAuxiliaryGet">
            <summary>设置 AggregatedSeriesPoint.get_IsAuxiliary() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.IsEmptyGet">
            <summary>设置 AggregatedSeriesPoint.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.NumericalArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_NumericalArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.QualitativeArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_QualitativeArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.SeriesGet">
            <summary>设置 AggregatedSeriesPoint.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.SourcePointsGet">
            <summary>设置 AggregatedSeriesPoint.get_SourcePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ToolTipHintDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_ToolTipHint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.UserArgumentDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_UserArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.UserValuesDevExpressChartsNativeISeriesPointget">
            <summary>设置 AggregatedSeriesPoint.DevExpress.Charts.Native.ISeriesPoint.get_UserValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregatedSeriesPoint.ValuesGet">
            <summary>设置 AggregatedSeriesPoint.get_Values() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator">
            <summary>DevExpress.Charts.Native.AggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.#ctor(DevExpress.Charts.Native.AggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.Constructor">
            <summary>设置 AggregationCalculator.AggregationCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.CreateAggregateFunctionNative">
            <summary>设置 AggregationCalculator.Create(AggregateFunctionNative aggregationFunction) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.CreateArray">
            <summary>设置 AggregationCalculator.CreateArray() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationCalculator.CreateArrayDouble">
            <summary>设置 AggregationCalculator.CreateArray(Double defaultValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter">
            <summary>DevExpress.Charts.Native.AggregationPointFilter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.#ctor(DevExpress.Charts.Native.AggregationPointFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.ClearCache">
            <summary>设置 AggregationPointFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.ConvertToScaleActualScaleType">
            <summary>设置 AggregationPointFilter.ConvertToScale(ActualScaleType scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.CreateAggregatedPointRefinedPointsClusterAggregationCalculator">
            <summary>设置 AggregationPointFilter.CreateAggregatedPoint(RefinedPointsCluster cluster, AggregationCalculator calculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetAggregateFunction">
            <summary>设置 AggregationPointFilter.GetAggregateFunction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetAggregatedPointsIListOfRefinedPointsCluster">
            <summary>设置 AggregationPointFilter.GetAggregatedPoints(IList`1&lt;RefinedPointsCluster&gt; clusteredPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetAxisXData">
            <summary>设置 AggregationPointFilter.GetAxisXData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetAxisYData">
            <summary>设置 AggregationPointFilter.GetAxisYData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetCachedPoints">
            <summary>设置 AggregationPointFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetMeasureUnit">
            <summary>设置 AggregationPointFilter.GetMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.GetProcessMissingPoints">
            <summary>设置 AggregationPointFilter.GetProcessMissingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.IsEnabled">
            <summary>设置 AggregationPointFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.NeedSortedByArgumentPointsGet">
            <summary>设置 AggregationPointFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.RecalculateIListOfRefinedPoint">
            <summary>设置 AggregationPointFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.AllInstances.Update">
            <summary>设置 AggregationPointFilter.Update() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.ClearCache">
            <summary>设置 AggregationPointFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.ConstructorRefinedSeries">
            <summary>设置 AggregationPointFilter.AggregationPointFilter(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.ConvertToScaleActualScaleType">
            <summary>设置 AggregationPointFilter.ConvertToScale(ActualScaleType scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.CreateAggregatedPointRefinedPointsClusterAggregationCalculator">
            <summary>设置 AggregationPointFilter.CreateAggregatedPoint(RefinedPointsCluster cluster, AggregationCalculator calculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetAggregateFunction">
            <summary>设置 AggregationPointFilter.GetAggregateFunction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetAggregatedPointsIListOfRefinedPointsCluster">
            <summary>设置 AggregationPointFilter.GetAggregatedPoints(IList`1&lt;RefinedPointsCluster&gt; clusteredPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetAxisXData">
            <summary>设置 AggregationPointFilter.GetAxisXData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetAxisYData">
            <summary>设置 AggregationPointFilter.GetAxisYData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetCachedPoints">
            <summary>设置 AggregationPointFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetMeasureUnit">
            <summary>设置 AggregationPointFilter.GetMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.GetProcessMissingPoints">
            <summary>设置 AggregationPointFilter.GetProcessMissingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.IsEnabled">
            <summary>设置 AggregationPointFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 AggregationPointFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 AggregationPointFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAggregationPointFilter.Update">
            <summary>设置 AggregationPointFilter.Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator">
            <summary>DevExpress.Charts.Native.AnnotationLayoutCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.ApplyLayoutParamsIAnnotationLayoutGRealRect2DAnnotationLocationGRealPoint2D">
            <summary>设置 AnnotationLayoutCalculator.ApplyLayoutParams(IAnnotationLayout layout, GRealRect2D bounds, AnnotationLocation location, GRealPoint2D offset) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateAutoLayoutIAnnotationLayoutAnnotationLocationArrayGRealRect2DListOfGRealRect2D">
            <summary>设置 AnnotationLayoutCalculator.CalculateAutoLayout(IAnnotationLayout layout, AnnotationLocation[] priorityLocations, GRealRect2D constraintBounds, List`1&lt;GRealRect2D&gt; reservedRects) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateAutoLayoutIAnnotationLayoutAnnotationLocationGRealRect2D">
            <summary>设置 AnnotationLayoutCalculator.CalculateAutoLayout(IAnnotationLayout layout, AnnotationLocation defaultLocation, GRealRect2D constraintBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateAutoLayoutListOfIAnnotationLayout">
            <summary>设置 AnnotationLayoutCalculator.CalculateAutoLayout(List`1&lt;IAnnotationLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateAutoLayoutListOfIAnnotationLayoutGRealRect2D">
            <summary>设置 AnnotationLayoutCalculator.CalculateAutoLayout(List`1&lt;IAnnotationLayout&gt; labels, GRealRect2D constraintBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateLayoutCriteriaGRealRect2DListOfGRealRect2DGRealRect2D">
            <summary>设置 AnnotationLayoutCalculator.CalculateLayoutCriteria(GRealRect2D annotationBounds, List`1&lt;GRealRect2D&gt; reservedRects, GRealRect2D constraintBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateLayoutOffsetGRealPoint2DBoolean">
            <summary>设置 AnnotationLayoutCalculator.CalculateLayoutOffset(GRealPoint2D initOffset, Boolean showTail) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CalculateLocationBoundsGRealPoint2DGRealSize2DAnnotationLocationGRealPoint2DDouble">
            <summary>设置 AnnotationLayoutCalculator.CalculateLocationBounds(GRealPoint2D anchorPoint, GRealSize2D size, AnnotationLocation location, GRealPoint2D offset, Double cursorOffset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.CorrectLayoutByConstraintIAnnotationLayoutGRealRect2D">
            <summary>设置 AnnotationLayoutCalculator.CorrectLayoutByConstraint(IAnnotationLayout layout, GRealRect2D constraintBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.GetPriorityHorizontalLocationsAnnotationLocation">
            <summary>设置 AnnotationLayoutCalculator.GetPriorityHorizontalLocations(AnnotationLocation location) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAnnotationLayoutCalculator.GetPriorityVerticalLocationsAnnotationLocation">
            <summary>设置 AnnotationLayoutCalculator.GetPriorityVerticalLocations(AnnotationLocation location) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.AreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.AreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 AreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 AreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 AreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 AreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 AreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.ClosedGet">
            <summary>设置 AreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.Constructor">
            <summary>设置 AreaGeometryStripCreator.AreaGeometryStripCreator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.CreateStrip">
            <summary>设置 AreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 AreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator">
            <summary>DevExpress.Charts.Native.AverageAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.#ctor(DevExpress.Charts.Native.AverageAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 AverageAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 AverageAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageAggregationCalculator.Constructor">
            <summary>设置 AverageAggregationCalculator.AverageAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator">
            <summary>DevExpress.Charts.Native.AverageTrueRangeCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.#ctor(DevExpress.Charts.Native.AverageTrueRangeCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.CalcTrueRangeIFinancialPointIFinancialPoint">
            <summary>设置 AverageTrueRangeCalculator.CalcTrueRange(IFinancialPoint refinedPoint, IFinancialPoint preRefinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.CalculateIRefinedSeriesInt32">
            <summary>设置 AverageTrueRangeCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.CalculatedGet">
            <summary>设置 AverageTrueRangeCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 AverageTrueRangeCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 AverageTrueRangeCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.MaxDoubleDoubleDouble">
            <summary>设置 AverageTrueRangeCalculator.Max(Double val1, Double val2, Double val3) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.MaxYGet">
            <summary>设置 AverageTrueRangeCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 AverageTrueRangeCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.MinYGet">
            <summary>设置 AverageTrueRangeCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.AllInstances.MinYSetDouble">
            <summary>设置 AverageTrueRangeCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.CalcTrueRangeIFinancialPointIFinancialPoint">
            <summary>设置 AverageTrueRangeCalculator.CalcTrueRange(IFinancialPoint refinedPoint, IFinancialPoint preRefinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.CalculateIRefinedSeriesInt32">
            <summary>设置 AverageTrueRangeCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.CalculatedGet">
            <summary>设置 AverageTrueRangeCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.CalculatedSetBoolean">
            <summary>设置 AverageTrueRangeCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.Constructor">
            <summary>设置 AverageTrueRangeCalculator.AverageTrueRangeCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 AverageTrueRangeCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.MaxDoubleDoubleDouble">
            <summary>设置 AverageTrueRangeCalculator.Max(Double val1, Double val2, Double val3) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.MaxYGet">
            <summary>设置 AverageTrueRangeCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.MaxYSetDouble">
            <summary>设置 AverageTrueRangeCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.MinYGet">
            <summary>设置 AverageTrueRangeCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAverageTrueRangeCalculator.MinYSetDouble">
            <summary>设置 AverageTrueRangeCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisCollectionBatchUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.#ctor(DevExpress.Charts.Native.AxisCollectionBatchUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCollectionBatchUpdateInfo.ConstructorObjectChartCollectionOperationICollectionOfIAxisDataInt32ICollectionOfIAxisDataInt32">
            <summary>设置 AxisCollectionBatchUpdateInfo.AxisCollectionBatchUpdateInfo(Object sender, ChartCollectionOperation operation, ICollection`1&lt;IAxisData&gt; oldItem, Int32 oldIndex, ICollection`1&lt;IAxisData&gt; newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisCollectionUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.#ctor(DevExpress.Charts.Native.AxisCollectionUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCollectionUpdateInfo.ConstructorObjectChartCollectionOperationIAxisDataInt32IAxisDataInt32">
            <summary>设置 AxisCollectionUpdateInfo.AxisCollectionUpdateInfo(Object sender, ChartCollectionOperation operation, IAxisData oldItem, Int32 oldIndex, IAxisData newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator">
            <summary>DevExpress.Charts.Native.AxisCoordCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.GetClampedCoordIMinMaxValuesDoubleDouble">
            <summary>设置 AxisCoordCalculator.GetClampedCoord(IMinMaxValues range, Double value, Double dimension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.GetCoordIMinMaxValuesDoubleDouble">
            <summary>设置 AxisCoordCalculator.GetCoord(IMinMaxValues range, Double value, Double dimension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.GetCoordIMinMaxValuesDoubleDoubleBoolean">
            <summary>设置 AxisCoordCalculator.GetCoord(IMinMaxValues range, Double value, Double dimension, Boolean clamped) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.GetInternalValueDoubleDoubleDouble">
            <summary>设置 AxisCoordCalculator.GetInternalValue(Double min, Double max, Double ratio) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisCoordCalculator.GetInternalValueIMinMaxValuesDouble">
            <summary>设置 AxisCoordCalculator.GetInternalValue(IMinMaxValues range, Double ratio) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping">
            <summary>DevExpress.Charts.Native.AxisDateTimeGridMapping 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.#ctor(DevExpress.Charts.Native.AxisDateTimeGridMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisDateTimeGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AllInstances.AlignedToInternalDouble">
            <summary>设置 AxisDateTimeGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AllInstances.InternalToAlignedDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.AllInstances.MapGet">
            <summary>设置 AxisDateTimeGridMapping.get_Map() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.Bind(DevExpress.Charts.Native.IAxisGridMapping)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.ConstructorAxisDateTimeMapDateTimeGridAlignmentNativeDouble">
            <summary>设置 AxisDateTimeGridMapping.AxisDateTimeGridMapping(AxisDateTimeMap map, DateTimeGridAlignmentNative alignment, Double offset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.InternalToNativeDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeGridMapping.MapGet">
            <summary>设置 AxisDateTimeGridMapping.get_Map() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap">
            <summary>DevExpress.Charts.Native.AxisDateTimeMap 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.#ctor(DevExpress.Charts.Native.AxisDateTimeMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.Clone">
            <summary>设置 AxisDateTimeMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.ConvertValueObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.DefaultAxisValueGet">
            <summary>设置 AxisDateTimeMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.InternalToNativeDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.InternalToRefinedDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.InternalToRefinedDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.InternalToRefinedExactDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.IsCompatibleObject">
            <summary>设置 AxisDateTimeMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.IsCompatibleTypeType">
            <summary>设置 AxisDateTimeMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.MeasureUnitGet">
            <summary>设置 AxisDateTimeMap.get_MeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.MinGet">
            <summary>设置 AxisDateTimeMap.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.NativeToInternalObject">
            <summary>设置 AxisDateTimeMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.NativeToRefinedObject">
            <summary>设置 AxisDateTimeMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.RefinedToInternalDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.RefinedToInternalDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.RefinedToInternalExactDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.RefinedToNativeDouble">
            <summary>设置 AxisDateTimeMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.ScaleTypeGet">
            <summary>设置 AxisDateTimeMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisDateTimeMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.AllInstances.TryParseObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.Bind(DevExpress.Charts.Native.IPriorScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.Bind(DevExpress.Charts.Native.IScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.Clone">
            <summary>设置 AxisDateTimeMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.Constructor">
            <summary>设置 AxisDateTimeMap.AxisDateTimeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.ConstructorDateTimeMeasureUnitNativeIWorkdaysOptions">
            <summary>设置 AxisDateTimeMap.AxisDateTimeMap(DateTimeMeasureUnitNative dateTimeMeasureUnit, IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.DefaultAxisValueGet">
            <summary>设置 AxisDateTimeMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisDateTimeMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.InternalToNativeDouble">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.InternalToNativeDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.InternalToRefinedDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.InternalToRefinedDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.InternalToRefinedExactDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.IsCompatibleObject">
            <summary>设置 AxisDateTimeMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.IsCompatibleTypeType">
            <summary>设置 AxisDateTimeMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.MeasureUnitGet">
            <summary>设置 AxisDateTimeMap.get_MeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.MinGet">
            <summary>设置 AxisDateTimeMap.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.NativeToInternalObject">
            <summary>设置 AxisDateTimeMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.NativeToRefinedObject">
            <summary>设置 AxisDateTimeMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.RefinedToInternalDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.RefinedToInternalDoubleDateTimeMeasureUnitNative">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.RefinedToInternalExactDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.RefinedToNativeDouble">
            <summary>设置 AxisDateTimeMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.ScaleTypeGet">
            <summary>设置 AxisDateTimeMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisDateTimeMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisDateTimeMap.TryParseObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisElementUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.#ctor(DevExpress.Charts.Native.AxisElementUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.AllInstances.AxisGet">
            <summary>设置 AxisElementUpdateInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.AxisGet">
            <summary>设置 AxisElementUpdateInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisElementUpdateInfo.ConstructorObjectIAxisData">
            <summary>设置 AxisElementUpdateInfo.AxisElementUpdateInfo(Object sender, IAxisData axis) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx">
            <summary>DevExpress.Charts.Native.AxisGridDataEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.#ctor(DevExpress.Charts.Native.AxisGridDataEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AddCustomValueDouble">
            <summary>设置 AxisGridDataEx.AddCustomValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AddMajorValueDouble">
            <summary>设置 AxisGridDataEx.AddMajorValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AddMajorValuesDoubleDoubleArrayInt32">
            <summary>设置 AxisGridDataEx.AddMajorValues(Double actualOffset, Double[] values, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AddValueCoreDoubleBoolean">
            <summary>设置 AxisGridDataEx.AddValueCore(Double value, Boolean isAutogenerated) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.AddCustomValueDouble">
            <summary>设置 AxisGridDataEx.AddCustomValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.AddMajorValueDouble">
            <summary>设置 AxisGridDataEx.AddMajorValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.AddMajorValuesDoubleDoubleArrayInt32">
            <summary>设置 AxisGridDataEx.AddMajorValues(Double actualOffset, Double[] values, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.AddValueCoreDoubleBoolean">
            <summary>设置 AxisGridDataEx.AddValueCore(Double value, Boolean isAutogenerated) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.CreateInterlacedData">
            <summary>设置 AxisGridDataEx.CreateInterlacedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.CreateMajorValues">
            <summary>设置 AxisGridDataEx.CreateMajorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.CreateMinorValues">
            <summary>设置 AxisGridDataEx.CreateMinorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.CreateStripsAndCustomLabels">
            <summary>设置 AxisGridDataEx.CreateStripsAndCustomLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.ExtendRadarAxisRange">
            <summary>设置 AxisGridDataEx.ExtendRadarAxisRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.FillAutomaticValues">
            <summary>设置 AxisGridDataEx.FillAutomaticValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.GridIndexDouble">
            <summary>设置 AxisGridDataEx.GridIndex(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.InterlacedDataGet">
            <summary>设置 AxisGridDataEx.get_InterlacedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.InterlacedInverseGet">
            <summary>设置 AxisGridDataEx.get_InterlacedInverse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.IsValueWithinRangeDoubleDoubleDouble">
            <summary>设置 AxisGridDataEx.IsValueWithinRange(Double value, Double minLimit, Double maxLimit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.ItemsGet">
            <summary>设置 AxisGridDataEx.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.MinorValuesGet">
            <summary>设置 AxisGridDataEx.get_MinorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.AllInstances.ValueWithinRangeDouble">
            <summary>设置 AxisGridDataEx.ValueWithinRange(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.CalcStripGridValueIStripIMinMaxValues">
            <summary>设置 AxisGridDataEx.CalcStripGridValue(IStrip strip, IMinMaxValues limits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.ConstructorIAxisElementContainerIAxisGridMappingBooleanInt32IMinMaxValuesDouble">
            <summary>设置 AxisGridDataEx.AxisGridDataEx(IAxisElementContainer axis, IAxisGridMapping mapping, Boolean isRadarAxis, Int32 minorCount, IMinMaxValues visualRange, Double gridSpacing) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.CreateInterlacedData">
            <summary>设置 AxisGridDataEx.CreateInterlacedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.CreateMajorValues">
            <summary>设置 AxisGridDataEx.CreateMajorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.CreateMinorValues">
            <summary>设置 AxisGridDataEx.CreateMinorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.CreateStripsAndCustomLabels">
            <summary>设置 AxisGridDataEx.CreateStripsAndCustomLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.ExtendRadarAxisRange">
            <summary>设置 AxisGridDataEx.ExtendRadarAxisRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.FillAutomaticValues">
            <summary>设置 AxisGridDataEx.FillAutomaticValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.GridIndexDouble">
            <summary>设置 AxisGridDataEx.GridIndex(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.InterlacedDataGet">
            <summary>设置 AxisGridDataEx.get_InterlacedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.InterlacedInverseGet">
            <summary>设置 AxisGridDataEx.get_InterlacedInverse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.IsAxisValueVisibleIAxisDataObject">
            <summary>设置 AxisGridDataEx.IsAxisValueVisible(IAxisData axis, Object axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.IsStripVisibleIAxisGridMappingIStrip">
            <summary>设置 AxisGridDataEx.IsStripVisible(IAxisGridMapping map, IStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.IsStripVisibleInGridIMinMaxValuesIAxisGridMappingIStrip">
            <summary>设置 AxisGridDataEx.IsStripVisibleInGrid(IMinMaxValues limits, IAxisGridMapping map, IStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.IsValidValueDouble">
            <summary>设置 AxisGridDataEx.IsValidValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.IsValueWithinRangeDoubleDoubleDouble">
            <summary>设置 AxisGridDataEx.IsValueWithinRange(Double value, Double minLimit, Double maxLimit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.ItemsGet">
            <summary>设置 AxisGridDataEx.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.MinorValuesGet">
            <summary>设置 AxisGridDataEx.get_MinorValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.NormalizeStripValueIMinMaxValuesDouble">
            <summary>设置 AxisGridDataEx.NormalizeStripValue(IMinMaxValues limits, Double val) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridDataEx.ValueWithinRangeDouble">
            <summary>设置 AxisGridDataEx.ValueWithinRange(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridItem">
            <summary>DevExpress.Charts.Native.AxisGridItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList">
            <summary>DevExpress.Charts.Native.AxisGridItemList 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.#ctor(DevExpress.Charts.Native.AxisGridItemList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AddAxisGridItem">
            <summary>设置 AxisGridItemList.Add(AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AddUniqueValueAxisGridItem">
            <summary>设置 AxisGridItemList.AddUniqueValue(AxisGridItem value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.AddAxisGridItem">
            <summary>设置 AxisGridItemList.Add(AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.AddUniqueValueAxisGridItem">
            <summary>设置 AxisGridItemList.AddUniqueValue(AxisGridItem value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.CountGet">
            <summary>设置 AxisGridItemList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.CreateVisibleValues">
            <summary>设置 AxisGridItemList.CreateVisibleValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.FirstGet">
            <summary>设置 AxisGridItemList.get_First() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.InsertInt32AxisGridItem">
            <summary>设置 AxisGridItemList.Insert(Int32 index, AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.InvisibleItemsCountGet">
            <summary>设置 AxisGridItemList.get_InvisibleItemsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.ItemGetInt32">
            <summary>设置 AxisGridItemList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.ItemSetInt32AxisGridItem">
            <summary>设置 AxisGridItemList.set_Item(Int32 index, AxisGridItem value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.LastGet">
            <summary>设置 AxisGridItemList.get_Last() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.MaxVisibleValueGet">
            <summary>设置 AxisGridItemList.get_MaxVisibleValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.MinVisibleValueGet">
            <summary>设置 AxisGridItemList.get_MinVisibleValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.RemoveItemAxisGridItem">
            <summary>设置 AxisGridItemList.RemoveItem(AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.SystemCollectionsGenericIEnumerableDevExpressChartsNativeAxisGridItemGetEnumerator">
            <summary>设置 AxisGridItemList.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.AxisGridItem&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AxisGridItemList.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.UpdateValuesAxisGridItem">
            <summary>设置 AxisGridItemList.UpdateValues(AxisGridItem newItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.VisibleItemsCountGet">
            <summary>设置 AxisGridItemList.get_VisibleItemsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.AllInstances.VisibleValuesGet">
            <summary>设置 AxisGridItemList.get_VisibleValues() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.AxisGridItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.Constructor">
            <summary>设置 AxisGridItemList.AxisGridItemList() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.CountGet">
            <summary>设置 AxisGridItemList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.CreateVisibleValues">
            <summary>设置 AxisGridItemList.CreateVisibleValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.FirstGet">
            <summary>设置 AxisGridItemList.get_First() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.InsertInt32AxisGridItem">
            <summary>设置 AxisGridItemList.Insert(Int32 index, AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.InvisibleItemsCountGet">
            <summary>设置 AxisGridItemList.get_InvisibleItemsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.ItemGetInt32">
            <summary>设置 AxisGridItemList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.ItemSetInt32AxisGridItem">
            <summary>设置 AxisGridItemList.set_Item(Int32 index, AxisGridItem value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.LastGet">
            <summary>设置 AxisGridItemList.get_Last() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.MaxVisibleValueGet">
            <summary>设置 AxisGridItemList.get_MaxVisibleValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.MinVisibleValueGet">
            <summary>设置 AxisGridItemList.get_MinVisibleValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.RemoveItemAxisGridItem">
            <summary>设置 AxisGridItemList.RemoveItem(AxisGridItem item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.SystemCollectionsGenericIEnumerableDevExpressChartsNativeAxisGridItemGetEnumerator">
            <summary>设置 AxisGridItemList.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.AxisGridItem&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AxisGridItemList.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.UpdateValuesAxisGridItem">
            <summary>设置 AxisGridItemList.UpdateValues(AxisGridItem newItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.VisibleItemsCountGet">
            <summary>设置 AxisGridItemList.get_VisibleItemsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridItemList.VisibleValuesGet">
            <summary>设置 AxisGridItemList.get_VisibleValues() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping">
            <summary>DevExpress.Charts.Native.AxisGridMapping 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.#ctor(DevExpress.Charts.Native.AxisGridMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances.IsCompatibleObject">
            <summary>设置 AxisGridMapping.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances.MapGet">
            <summary>设置 AxisGridMapping.get_Map() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances.NativeToInternalObject">
            <summary>设置 AxisGridMapping.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances.OffsetGet">
            <summary>设置 AxisGridMapping.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.AllInstances.TransformationGet">
            <summary>设置 AxisGridMapping.get_Transformation() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.Bind(DevExpress.Charts.Native.IAxisGridMapping)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.ConstructorAxisScaleTypeMapDouble">
            <summary>设置 AxisGridMapping.AxisGridMapping(AxisScaleTypeMap map, Double offset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.IsCompatibleObject">
            <summary>设置 AxisGridMapping.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.MapGet">
            <summary>设置 AxisGridMapping.get_Map() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.NativeToInternalObject">
            <summary>设置 AxisGridMapping.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.OffsetGet">
            <summary>设置 AxisGridMapping.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisGridMapping.TransformationGet">
            <summary>设置 AxisGridMapping.get_Transformation() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver">
            <summary>DevExpress.Charts.Native.AxisLabelOverlappingResolver 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.#ctor(DevExpress.Charts.Native.AxisLabelOverlappingResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.AnalyzeLabels">
            <summary>设置 AxisLabelOverlappingResolver.AnalyzeLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DetectOverlappingListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DetectOverlapping(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DivideLabels">
            <summary>设置 AxisLabelOverlappingResolver.DivideLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoCustomLabelsThinOut">
            <summary>设置 AxisLabelOverlappingResolver.DoCustomLabelsThinOut() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoLabelsModificationsListOfIAxisLabelLayoutArray">
            <summary>设置 AxisLabelOverlappingResolver.DoLabelsModifications(List`1&lt;IAxisLabelLayout&gt;[] labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoLimitedLabelsThinOutListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoLimitedLabelsThinOut(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoRotateListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoRotate(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoStaggerListOfIAxisLabelLayoutBoolean">
            <summary>设置 AxisLabelOverlappingResolver.DoStagger(List`1&lt;IAxisLabelLayout&gt; labels, Boolean rollback) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.DoThinOutListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoThinOut(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.GetBoundsGRealRect2DBoolean">
            <summary>设置 AxisLabelOverlappingResolver.GetBounds(GRealRect2D bounds, Boolean roundBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.GetStaggerOffsetBoolean">
            <summary>设置 AxisLabelOverlappingResolver.GetStaggerOffset(Boolean rollback) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.GetValueDouble">
            <summary>设置 AxisLabelOverlappingResolver.GetValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.InflateLabelGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.InflateLabel(GRealRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.IsLabelVisibleIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.IsLabelVisible(IAxisLabelLayout label) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.IsOverlappedListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.IsOverlapped(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.LimitBoundsGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.LimitBounds(GRealRect2D labelsLimits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.Process">
            <summary>设置 AxisLabelOverlappingResolver.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.ProcessCustomLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessCustomLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.ProcessLabelsLimitsGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.ProcessLabelsLimits(GRealRect2D labelsLimits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.ProcessSeparateLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessSeparateLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.ProcessWholeLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessWholeLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.ResetOverlapState">
            <summary>设置 AxisLabelOverlappingResolver.ResetOverlapState() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AllInstances.RotationLimitGet">
            <summary>设置 AxisLabelOverlappingResolver.get_RotationLimit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.AnalyzeLabels">
            <summary>设置 AxisLabelOverlappingResolver.AnalyzeLabels() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ConstructorListOfIAxisLabelLayoutIAxisDataBooleanBooleanBoolean">
            <summary>设置 AxisLabelOverlappingResolver.AxisLabelOverlappingResolver(List`1&lt;IAxisLabelLayout&gt; labels, IAxisData axis, Boolean isRadar, Boolean mirrored, Boolean useBoundsRound) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DetectOverlappingListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DetectOverlapping(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DivideLabels">
            <summary>设置 AxisLabelOverlappingResolver.DivideLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoCustomLabelsThinOut">
            <summary>设置 AxisLabelOverlappingResolver.DoCustomLabelsThinOut() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoLabelsModificationsListOfIAxisLabelLayoutArray">
            <summary>设置 AxisLabelOverlappingResolver.DoLabelsModifications(List`1&lt;IAxisLabelLayout&gt;[] labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoLimitedLabelsThinOutListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoLimitedLabelsThinOut(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoRotateListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoRotate(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoStaggerListOfIAxisLabelLayoutBoolean">
            <summary>设置 AxisLabelOverlappingResolver.DoStagger(List`1&lt;IAxisLabelLayout&gt; labels, Boolean rollback) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.DoThinOutListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.DoThinOut(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.GetBoundsGRealRect2DBoolean">
            <summary>设置 AxisLabelOverlappingResolver.GetBounds(GRealRect2D bounds, Boolean roundBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.GetStaggerOffsetBoolean">
            <summary>设置 AxisLabelOverlappingResolver.GetStaggerOffset(Boolean rollback) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.GetValueDouble">
            <summary>设置 AxisLabelOverlappingResolver.GetValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.InflateLabelGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.InflateLabel(GRealRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.IsLabelVisibleIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.IsLabelVisible(IAxisLabelLayout label) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.IsOverlappedListOfIAxisLabelLayout">
            <summary>设置 AxisLabelOverlappingResolver.IsOverlapped(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.LimitBoundsGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.LimitBounds(GRealRect2D labelsLimits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.Process">
            <summary>设置 AxisLabelOverlappingResolver.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ProcessCustomLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessCustomLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ProcessLabelsLimitsGRealRect2D">
            <summary>设置 AxisLabelOverlappingResolver.ProcessLabelsLimits(GRealRect2D labelsLimits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ProcessSeparateLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessSeparateLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ProcessWholeLabels">
            <summary>设置 AxisLabelOverlappingResolver.ProcessWholeLabels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.ResetOverlapState">
            <summary>设置 AxisLabelOverlappingResolver.ResetOverlapState() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelOverlappingResolver.RotationLimitGet">
            <summary>设置 AxisLabelOverlappingResolver.get_RotationLimit() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache">
            <summary>DevExpress.Charts.Native.AxisLabelResolveOverlappingCache 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.#ctor(DevExpress.Charts.Native.AxisLabelResolveOverlappingCache)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.AllInstances.ApplyListOfIAxisLabelLayout">
            <summary>设置 AxisLabelResolveOverlappingCache.Apply(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.AllInstances.CountGet">
            <summary>设置 AxisLabelResolveOverlappingCache.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.AllInstances.Store">
            <summary>设置 AxisLabelResolveOverlappingCache.Store() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.ApplyListOfIAxisLabelLayout">
            <summary>设置 AxisLabelResolveOverlappingCache.Apply(List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.ConstructorIResolveLabelsOverlappingAxisListOfIAxisLabelLayout">
            <summary>设置 AxisLabelResolveOverlappingCache.AxisLabelResolveOverlappingCache(IResolveLabelsOverlappingAxis axis, List`1&lt;IAxisLabelLayout&gt; labels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.CountGet">
            <summary>设置 AxisLabelResolveOverlappingCache.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelResolveOverlappingCache.Store">
            <summary>设置 AxisLabelResolveOverlappingCache.Store() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper">
            <summary>DevExpress.Charts.Native.AxisLabelRotationHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateLeftTopPointForBottomPositionGRealRect2DDoubleDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.CalculateLeftTopPointForBottomPosition(GRealRect2D bounds, Double angleDegree, Double angleRadian, Boolean useBoundsRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateLeftTopPointForLeftPositionGRealRect2DDoubleDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.CalculateLeftTopPointForLeftPosition(GRealRect2D bounds, Double angleDegree, Double angleRadian, Boolean useBoundsRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateLeftTopPointForRightPositionGRealRect2DDoubleDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.CalculateLeftTopPointForRightPosition(GRealRect2D bounds, Double angleDegree, Double angleRadian, Boolean useBoundsRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateLeftTopPointForTopPositionGRealRect2DDoubleDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.CalculateLeftTopPointForTopPosition(GRealRect2D bounds, Double angleDegree, Double angleRadian, Boolean useBoundsRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateOffsetTextRotationGRealRect2DDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateOffset(TextRotation rotation, GRealRect2D rect, Double radianAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateRotatedItemPointsGRealRect2DDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateRotatedItemPoints(GRealRect2D bounds, Double radianAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateRotationForBottomNearPositionDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateRotationForBottomNearPosition(Double degreeAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateRotationForLeftNearPositionDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateRotationForLeftNearPosition(Double degreeAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateRotationForRightNearPositionDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateRotationForRightNearPosition(Double degreeAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.CalculateRotationForTopNearPositionDouble">
            <summary>设置 AxisLabelRotationHelper.CalculateRotationForTopNearPosition(Double degreeAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.GetStrongRoundedValueDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.GetStrongRoundedValue(Double value, Boolean useRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.GetValueHalfDoubleBoolean">
            <summary>设置 AxisLabelRotationHelper.GetValueHalf(Double value, Boolean useRounding) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisLabelRotationHelper.RotateRectangleOverPointGRealRect2DGRealPoint2DDouble">
            <summary>设置 AxisLabelRotationHelper.RotateRectangleOverPoint(GRealRect2D rectangle, GRealPoint2D basePoint, Double radianAngle) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping">
            <summary>DevExpress.Charts.Native.AxisNumericGridMapping 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.#ctor(DevExpress.Charts.Native.AxisNumericGridMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisNumericGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AllInstances.AlignedToInternalDouble">
            <summary>设置 AxisNumericGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AllInstances.InternalToAlignedDouble">
            <summary>设置 AxisNumericGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisNumericGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.AllInstances.NumericMapGet">
            <summary>设置 AxisNumericGridMapping.get_NumericMap() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.Bind(DevExpress.Charts.Native.IAxisGridMapping)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.ConstructorAxisNumericalMapDoubleDouble">
            <summary>设置 AxisNumericGridMapping.AxisNumericGridMapping(AxisNumericalMap map, Double alignment, Double offset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisNumericGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.InternalToNativeDouble">
            <summary>设置 AxisNumericGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericGridMapping.NumericMapGet">
            <summary>设置 AxisNumericGridMapping.get_NumericMap() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap">
            <summary>DevExpress.Charts.Native.AxisNumericalMap 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.#ctor(DevExpress.Charts.Native.AxisNumericalMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.Clone">
            <summary>设置 AxisNumericalMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.ConvertValueObjectCultureInfo">
            <summary>设置 AxisNumericalMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.CreateTransformationIAxisData">
            <summary>设置 AxisNumericalMap.CreateTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.DefaultAxisValueGet">
            <summary>设置 AxisNumericalMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisNumericalMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.InternalToRefinedDouble">
            <summary>设置 AxisNumericalMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.InternalToRefinedExactDouble">
            <summary>设置 AxisNumericalMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.IsCompatibleObject">
            <summary>设置 AxisNumericalMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.IsCompatibleTypeType">
            <summary>设置 AxisNumericalMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.MeasureUnitGet">
            <summary>设置 AxisNumericalMap.get_MeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.NativeToInternalObject">
            <summary>设置 AxisNumericalMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.NativeToRefinedObject">
            <summary>设置 AxisNumericalMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.RefinedToInternalDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.RefinedToInternalExactDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.RefinedToNativeDouble">
            <summary>设置 AxisNumericalMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.ScaleTypeGet">
            <summary>设置 AxisNumericalMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisNumericalMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.AllInstances.TryParseObjectCultureInfo">
            <summary>设置 AxisNumericalMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.Bind(DevExpress.Charts.Native.IPriorScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.Bind(DevExpress.Charts.Native.IScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.Clone">
            <summary>设置 AxisNumericalMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.Constructor">
            <summary>设置 AxisNumericalMap.AxisNumericalMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.ConstructorDouble">
            <summary>设置 AxisNumericalMap.AxisNumericalMap(Double measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisNumericalMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.CreateTransformationIAxisData">
            <summary>设置 AxisNumericalMap.CreateTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.DefaultAxisValueGet">
            <summary>设置 AxisNumericalMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisNumericalMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.InternalToNativeDouble">
            <summary>设置 AxisNumericalMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.InternalToRefinedDouble">
            <summary>设置 AxisNumericalMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.InternalToRefinedExactDouble">
            <summary>设置 AxisNumericalMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.IsCompatibleObject">
            <summary>设置 AxisNumericalMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.IsCompatibleTypeType">
            <summary>设置 AxisNumericalMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.MeasureUnitGet">
            <summary>设置 AxisNumericalMap.get_MeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.NativeToInternalObject">
            <summary>设置 AxisNumericalMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.NativeToRefinedObject">
            <summary>设置 AxisNumericalMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.RefinedToInternalDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.RefinedToInternalExactDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.RefinedToNativeDouble">
            <summary>设置 AxisNumericalMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.ScaleTypeGet">
            <summary>设置 AxisNumericalMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisNumericalMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisNumericalMap.TryParseObjectCultureInfo">
            <summary>设置 AxisNumericalMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer">
            <summary>DevExpress.Charts.Native.AxisPaneContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.#ctor(DevExpress.Charts.Native.AxisPaneContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.AllInstances.GetFirstPaneByAxesIAxisDataIAxisData">
            <summary>设置 AxisPaneContainer.GetFirstPaneByAxes(IAxisData axisX, IAxisData axisY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.AllInstances.GetPanesIAxisData">
            <summary>设置 AxisPaneContainer.GetPanes(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.AllInstances.IsScrollingZoomingEnabledForAxisIAxisData">
            <summary>设置 AxisPaneContainer.IsScrollingZoomingEnabledForAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.AllInstances.RegisterAxisIAxisDataIPane">
            <summary>设置 AxisPaneContainer.RegisterAxis(IAxisData axis, IPane pane) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IList{DevExpress.Charts.Native.IPane}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IList{DevExpress.Charts.Native.IPane}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IList{DevExpress.Charts.Native.IPane}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.Generic.IDictionary{DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IList{DevExpress.Charts.Native.IPane}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Collections.Generic.IReadOnlyDictionary{DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IList{DevExpress.Charts.Native.IPane}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.ConstructorPaneAxesContainerRepository">
            <summary>设置 AxisPaneContainer.AxisPaneContainer(PaneAxesContainerRepository paneAxisRepository) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.GetFirstPaneByAxesIAxisDataIAxisData">
            <summary>设置 AxisPaneContainer.GetFirstPaneByAxes(IAxisData axisX, IAxisData axisY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.GetPanesIAxisData">
            <summary>设置 AxisPaneContainer.GetPanes(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.IsScrollingZoomingEnabledForAxisIAxisData">
            <summary>设置 AxisPaneContainer.IsScrollingZoomingEnabledForAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPaneContainer.RegisterAxisIAxisDataIPane">
            <summary>设置 AxisPaneContainer.RegisterAxis(IAxisData axis, IPane pane) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider">
            <summary>DevExpress.Charts.Native.AxisPatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.#ctor(DevExpress.Charts.Native.AxisPatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.AllInstances.CheckContextObject">
            <summary>设置 AxisPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.AllInstances.GetValue">
            <summary>设置 AxisPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.CheckContextObject">
            <summary>设置 AxisPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.Constructor">
            <summary>设置 AxisPatternDataProvider.AxisPatternDataProvider() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisPatternDataProvider.GetValue">
            <summary>设置 AxisPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping">
            <summary>DevExpress.Charts.Native.AxisQualitativeGridMapping 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.#ctor(DevExpress.Charts.Native.AxisQualitativeGridMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisQualitativeGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.AllInstances.AlignedToInternalDouble">
            <summary>设置 AxisQualitativeGridMapping.AlignedToInternal(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.AllInstances.InternalToAlignedDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.Bind(DevExpress.Charts.Native.IAxisGridMapping)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.ConstructorAxisQualitativeMapDouble">
            <summary>设置 AxisQualitativeGridMapping.AxisQualitativeGridMapping(AxisQualitativeMap map, Double offset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToAligned(Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeGridMapping.InternalToNativeDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToNative(Double alignedValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap">
            <summary>DevExpress.Charts.Native.AxisQualitativeMap 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.#ctor(DevExpress.Charts.Native.AxisQualitativeMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AddValueObject">
            <summary>设置 AxisQualitativeMap.AddValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.AddValueObject">
            <summary>设置 AxisQualitativeMap.AddValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.Clone">
            <summary>设置 AxisQualitativeMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.ConvertValueObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.DefaultAxisValueGet">
            <summary>设置 AxisQualitativeMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.GetValues">
            <summary>设置 AxisQualitativeMap.GetValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.IndexOfObject">
            <summary>设置 AxisQualitativeMap.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.InsertObject">
            <summary>设置 AxisQualitativeMap.Insert(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.InternalToNativeDouble">
            <summary>设置 AxisQualitativeMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.InternalToRefinedDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.InternalToRefinedExactDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.IsCompatibleObject">
            <summary>设置 AxisQualitativeMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.IsCompatibleTypeType">
            <summary>设置 AxisQualitativeMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.NativeToInternalObject">
            <summary>设置 AxisQualitativeMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.NativeToRefinedObject">
            <summary>设置 AxisQualitativeMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.RefinedToInternalDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.RefinedToInternalExactDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.RefinedToNativeDouble">
            <summary>设置 AxisQualitativeMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.ScaleTypeGet">
            <summary>设置 AxisQualitativeMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.SortValuesIComparer">
            <summary>设置 AxisQualitativeMap.SortValues(IComparer comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisQualitativeMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.TryParseObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.AllInstances.UniqueValuesCountGet">
            <summary>设置 AxisQualitativeMap.get_UniqueValuesCount() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.Bind(DevExpress.Charts.Native.IPriorScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.Bind(DevExpress.Charts.Native.IScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.Clone">
            <summary>设置 AxisQualitativeMap.Clone() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.ConstructorListOfObject">
            <summary>设置 AxisQualitativeMap.AxisQualitativeMap(List`1&lt;Object&gt; uniqueValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.ConvertValue(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.DefaultAxisValueGet">
            <summary>设置 AxisQualitativeMap.get_DefaultAxisValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.DevExpressChartsNativeIPriorScaleMapInternalToNativeDouble">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.DevExpressChartsNativeIPriorScaleMapNativeToInternalObject">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.DevExpressChartsNativeIPriorScaleMapUpdateMinDouble">
            <summary>设置 AxisQualitativeMap.DevExpress.Charts.Native.IPriorScaleMap.UpdateMin(Double min) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.GetValues">
            <summary>设置 AxisQualitativeMap.GetValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.IndexOfObject">
            <summary>设置 AxisQualitativeMap.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.InsertObject">
            <summary>设置 AxisQualitativeMap.Insert(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.InternalToNativeDouble">
            <summary>设置 AxisQualitativeMap.InternalToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.InternalToRefinedDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefined(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.InternalToRefinedExactDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefinedExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.IsCompatibleObject">
            <summary>设置 AxisQualitativeMap.IsCompatible(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.IsCompatibleTypeType">
            <summary>设置 AxisQualitativeMap.IsCompatibleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.NativeToInternalObject">
            <summary>设置 AxisQualitativeMap.NativeToInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.NativeToRefinedObject">
            <summary>设置 AxisQualitativeMap.NativeToRefined(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.RefinedToInternalDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternal(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.RefinedToInternalExactDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternalExact(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.RefinedToNativeDouble">
            <summary>设置 AxisQualitativeMap.RefinedToNative(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.ScaleTypeGet">
            <summary>设置 AxisQualitativeMap.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.SortValuesIComparer">
            <summary>设置 AxisQualitativeMap.SortValues(IComparer comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisQualitativeMap.TryNativeToInternal(Object value, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.TryParseObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.TryParse(Object value, CultureInfo culture) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisQualitativeMap.UniqueValuesCountGet">
            <summary>设置 AxisQualitativeMap.get_UniqueValuesCount() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo">
            <summary>DevExpress.Charts.Native.AxisRangeInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.#ctor(DevExpress.Charts.Native.AxisRangeInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.EqualsObject">
            <summary>设置 AxisRangeInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.GetHashCode01">
            <summary>设置 AxisRangeInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MaxGet">
            <summary>设置 AxisRangeInfo.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MaxSetDouble">
            <summary>设置 AxisRangeInfo.set_Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MaxValueGet">
            <summary>设置 AxisRangeInfo.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MaxValueSetObject">
            <summary>设置 AxisRangeInfo.set_MaxValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MinGet">
            <summary>设置 AxisRangeInfo.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MinSetDouble">
            <summary>设置 AxisRangeInfo.set_Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MinValueGet">
            <summary>设置 AxisRangeInfo.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.MinValueSetObject">
            <summary>设置 AxisRangeInfo.set_MinValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.AllInstances.UpdateRangeIVisualAxisRangeData">
            <summary>设置 AxisRangeInfo.UpdateRange(IVisualAxisRangeData axisRange) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.ConstructorIAxisRangeData">
            <summary>设置 AxisRangeInfo.AxisRangeInfo(IAxisRangeData axisRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.EqualsObject">
            <summary>设置 AxisRangeInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.GetHashCode">
            <summary>设置 AxisRangeInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MaxGet">
            <summary>设置 AxisRangeInfo.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MaxSetDouble">
            <summary>设置 AxisRangeInfo.set_Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MaxValueGet">
            <summary>设置 AxisRangeInfo.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MaxValueSetObject">
            <summary>设置 AxisRangeInfo.set_MaxValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MinGet">
            <summary>设置 AxisRangeInfo.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MinSetDouble">
            <summary>设置 AxisRangeInfo.set_Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MinValueGet">
            <summary>设置 AxisRangeInfo.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.MinValueSetObject">
            <summary>设置 AxisRangeInfo.set_MinValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisRangeInfo.UpdateRangeIVisualAxisRangeData">
            <summary>设置 AxisRangeInfo.UpdateRange(IVisualAxisRangeData axisRange) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap">
            <summary>DevExpress.Charts.Native.AxisScaleTypeMap 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.#ctor(DevExpress.Charts.Native.AxisScaleTypeMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.AllInstances.BuildTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.BuildTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.AllInstances.CreateTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.AllInstances.NativeToFinalWithConvertionObjectCultureInfo">
            <summary>设置 AxisScaleTypeMap.NativeToFinalWithConvertion(Object nativeValue, CultureInfo cultureInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.AllInstances.TransformationGet">
            <summary>设置 AxisScaleTypeMap.get_Transformation() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.Bind(DevExpress.Charts.Native.IScaleMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.BuildTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.BuildTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.CheckArgumentScaleTypeISeriesPointScale">
            <summary>设置 AxisScaleTypeMap.CheckArgumentScaleType(ISeriesPoint point, Scale scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.Constructor">
            <summary>设置 AxisScaleTypeMap.AxisScaleTypeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.CreateTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.NativeToFinalWithConvertionObjectCultureInfo">
            <summary>设置 AxisScaleTypeMap.NativeToFinalWithConvertion(Object nativeValue, CultureInfo cultureInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisScaleTypeMap.TransformationGet">
            <summary>设置 AxisScaleTypeMap.get_Transformation() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx">
            <summary>DevExpress.Charts.Native.AxisTextDataEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.#ctor(DevExpress.Charts.Native.AxisTextDataEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AddAutomaticValueAxisGridDataExDouble">
            <summary>设置 AxisTextDataEx.AddAutomaticValue(AxisGridDataEx gridData, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AddAxisGridDataEx">
            <summary>设置 AxisTextDataEx.Add(AxisGridDataEx gridData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AddAxisGridDataExICustomAxisLabelDoubleObjectBoolean">
            <summary>设置 AxisTextDataEx.Add(AxisGridDataEx gridData, ICustomAxisLabel customAxisLabel, Double value, Object content, Boolean isCustom) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.AddAutomaticValueAxisGridDataExDouble">
            <summary>设置 AxisTextDataEx.AddAutomaticValue(AxisGridDataEx gridData, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.AddAxisGridDataEx">
            <summary>设置 AxisTextDataEx.Add(AxisGridDataEx gridData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.AddAxisGridDataExICustomAxisLabelDoubleObjectBoolean">
            <summary>设置 AxisTextDataEx.Add(AxisGridDataEx gridData, ICustomAxisLabel customAxisLabel, Double value, Object content, Boolean isCustom) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.CalculateBoolean">
            <summary>设置 AxisTextDataEx.Calculate(Boolean staggered) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.CalculatePrimaryItems">
            <summary>设置 AxisTextDataEx.CalculatePrimaryItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.CalculateStaggeredItems">
            <summary>设置 AxisTextDataEx.CalculateStaggeredItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.ConstructTextDouble">
            <summary>设置 AxisTextDataEx.ConstructText(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.CountGet">
            <summary>设置 AxisTextDataEx.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.ItemGetInt32">
            <summary>设置 AxisTextDataEx.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.PrimaryItemsGet">
            <summary>设置 AxisTextDataEx.get_PrimaryItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.Sort">
            <summary>设置 AxisTextDataEx.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.AllInstances.StaggeredItemsGet">
            <summary>设置 AxisTextDataEx.get_StaggeredItems() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.CalculateBoolean">
            <summary>设置 AxisTextDataEx.Calculate(Boolean staggered) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.CalculatePrimaryItems">
            <summary>设置 AxisTextDataEx.CalculatePrimaryItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.CalculateStaggeredItems">
            <summary>设置 AxisTextDataEx.CalculateStaggeredItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.ConstructAxisLabelTextDoubleIAxisDataIAxisGridMapping">
            <summary>设置 AxisTextDataEx.ConstructAxisLabelText(Double value, IAxisData axisData, IAxisGridMapping mapping) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.ConstructTextDouble">
            <summary>设置 AxisTextDataEx.ConstructText(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.ConstructorIAxisDataIAxisGridMappingBooleanBoolean">
            <summary>设置 AxisTextDataEx.AxisTextDataEx(IAxisData axisData, IAxisGridMapping mapping, Boolean isRadarAxis, Boolean scrollingEnabled) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.CountGet">
            <summary>设置 AxisTextDataEx.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.ItemGetInt32">
            <summary>设置 AxisTextDataEx.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.PrimaryItemsGet">
            <summary>设置 AxisTextDataEx.get_PrimaryItems() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.Sort">
            <summary>设置 AxisTextDataEx.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextDataEx.StaggeredItemsGet">
            <summary>设置 AxisTextDataEx.get_StaggeredItems() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisTextItem">
            <summary>DevExpress.Charts.Native.AxisTextItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.#ctor(DevExpress.Charts.Native.AxisTextItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.CompareToObject">
            <summary>设置 AxisTextItem.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.ContentGet">
            <summary>设置 AxisTextItem.get_Content() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.CustomAxisLabelGet">
            <summary>设置 AxisTextItem.get_CustomAxisLabel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.GridIndexGet">
            <summary>设置 AxisTextItem.get_GridIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.IsCustomLabelGet">
            <summary>设置 AxisTextItem.get_IsCustomLabel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.ValueGet">
            <summary>设置 AxisTextItem.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.AllInstances.VisibleGet">
            <summary>设置 AxisTextItem.get_Visible() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.CompareToObject">
            <summary>设置 AxisTextItem.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.ConstructorICustomAxisLabelInt32DoubleObjectBooleanBoolean">
            <summary>设置 AxisTextItem.AxisTextItem(ICustomAxisLabel customAxisLabel, Int32 gridIndex, Double value, Object content, Boolean visible, Boolean isCustomLabel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.ContentGet">
            <summary>设置 AxisTextItem.get_Content() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.CustomAxisLabelGet">
            <summary>设置 AxisTextItem.get_CustomAxisLabel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.GridIndexGet">
            <summary>设置 AxisTextItem.get_GridIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.IsCustomLabelGet">
            <summary>设置 AxisTextItem.get_IsCustomLabel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.ValueGet">
            <summary>设置 AxisTextItem.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisTextItem.VisibleGet">
            <summary>设置 AxisTextItem.get_Visible() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper">
            <summary>DevExpress.Charts.Native.AxisValueContainerHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.IsCompatibleWithIAxisValueContainerIScaleMap">
            <summary>设置 AxisValueContainerHelper.IsCompatibleWith(IAxisValueContainer container, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.UpdateAxisValueContainerIAxisValueContainerIScaleMap">
            <summary>设置 AxisValueContainerHelper.UpdateAxisValueContainer(IAxisValueContainer container, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.UpdateAxisValueIAxisValueContainerAxisScaleTypeMap">
            <summary>设置 AxisValueContainerHelper.UpdateAxisValue(IAxisValueContainer container, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValueContainerHelper.UpdateAxisValueIAxisValueContainerIAxisValueContainerAxisScaleTypeMap">
            <summary>设置 AxisValueContainerHelper.UpdateAxisValue(IAxisValueContainer container1, IAxisValueContainer container2, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisValuePair">
            <summary>DevExpress.Charts.Native.AxisValuePair 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValuePair.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisValuePair.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValuePair.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisValuePair.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisValuePair.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes">
            <summary>DevExpress.Charts.Native.AxisVisibilityInPanes 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.#ctor(DevExpress.Charts.Native.AxisVisibilityInPanes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.AxisGet">
            <summary>设置 AxisVisibilityInPanes.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.Changed">
            <summary>设置 AxisVisibilityInPanes.Changed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.Changing">
            <summary>设置 AxisVisibilityInPanes.Changing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.GetVisibilityInPaneIPane">
            <summary>设置 AxisVisibilityInPanes.GetVisibilityInPane(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.IsPaneVisibleIPane">
            <summary>设置 AxisVisibilityInPanes.IsPaneVisible(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.ResetBoolean">
            <summary>设置 AxisVisibilityInPanes.Reset(Boolean visible) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.SetVisibilityInPaneIPaneBoolean">
            <summary>设置 AxisVisibilityInPanes.SetVisibilityInPane(IPane pane, Boolean visible) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.UpdateVisibilityInPanesIListOfIPane">
            <summary>设置 AxisVisibilityInPanes.UpdateVisibilityInPanes(IList`1&lt;IPane&gt; newPanes) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AllInstances.VisibilityGet">
            <summary>设置 AxisVisibilityInPanes.get_Visibility() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.AxisGet">
            <summary>设置 AxisVisibilityInPanes.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.Changed">
            <summary>设置 AxisVisibilityInPanes.Changed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.Changing">
            <summary>设置 AxisVisibilityInPanes.Changing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.ConstructorIAxisData">
            <summary>设置 AxisVisibilityInPanes.AxisVisibilityInPanes(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.GetVisibilityInPaneIPane">
            <summary>设置 AxisVisibilityInPanes.GetVisibilityInPane(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.IsPaneVisibleIPane">
            <summary>设置 AxisVisibilityInPanes.IsPaneVisible(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.ResetBoolean">
            <summary>设置 AxisVisibilityInPanes.Reset(Boolean visible) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.SetVisibilityInPaneIPaneBoolean">
            <summary>设置 AxisVisibilityInPanes.SetVisibilityInPane(IPane pane, Boolean visible) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.UpdateVisibilityInPanesIListOfIPane">
            <summary>设置 AxisVisibilityInPanes.UpdateVisibilityInPanes(IList`1&lt;IPane&gt; newPanes) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimAxisVisibilityInPanes.VisibilityGet">
            <summary>设置 AxisVisibilityInPanes.get_Visibility() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction">
            <summary>DevExpress.Charts.Native.BasePointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.#ctor(DevExpress.Charts.Native.BasePointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.InsertPointToListListOfRefinedPointComparerOfRefinedPointRefinedPoint">
            <summary>设置 BasePointInteraction.InsertPointToList(List`1&lt;RefinedPoint&gt; list, Comparer`1&lt;RefinedPoint&gt; comparer, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.RemovePointFromListListOfRefinedPointComparerOfRefinedPointRefinedPoint">
            <summary>设置 BasePointInteraction.RemovePointFromList(List`1&lt;RefinedPoint&gt; list, Comparer`1&lt;RefinedPoint&gt; comparer, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.UpdatePointsInteractionsListOfRefinedPoint">
            <summary>设置 BasePointInteraction.UpdatePointsInteractions(List`1&lt;RefinedPoint&gt; list) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.AllInstances.UpdatePointsInteractionsListOfRefinedPointInt32">
            <summary>设置 BasePointInteraction.UpdatePointsInteractions(List`1&lt;RefinedPoint&gt; list, Int32 startIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.Constructor">
            <summary>设置 BasePointInteraction.BasePointInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.InsertPointToListListOfRefinedPointComparerOfRefinedPointRefinedPoint">
            <summary>设置 BasePointInteraction.InsertPointToList(List`1&lt;RefinedPoint&gt; list, Comparer`1&lt;RefinedPoint&gt; comparer, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 BasePointInteraction.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.RemovePointFromListListOfRefinedPointComparerOfRefinedPointRefinedPoint">
            <summary>设置 BasePointInteraction.RemovePointFromList(List`1&lt;RefinedPoint&gt; list, Comparer`1&lt;RefinedPoint&gt; comparer, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.UpdatePointsInteractionsListOfRefinedPoint">
            <summary>设置 BasePointInteraction.UpdatePointsInteractions(List`1&lt;RefinedPoint&gt; list) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBasePointInteraction.UpdatePointsInteractionsListOfRefinedPointInt32">
            <summary>设置 BasePointInteraction.UpdatePointsInteractions(List`1&lt;RefinedPoint&gt; list, Int32 startIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierCalculator">
            <summary>DevExpress.Charts.Native.BezierCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.#ctor(DevExpress.Charts.Native.BezierCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.CalculateCurveBezierEndPointGRealPoint2DGRealPoint2DDouble">
            <summary>设置 BezierCalculator.CalculateCurveBezierEndPoint(GRealPoint2D endPoint, GRealPoint2D adjPoint, Double tension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.CalculateListOfGRealPoint2DDouble">
            <summary>设置 BezierCalculator.Calculate(List`1&lt;GRealPoint2D&gt; points, Double lineTension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierCalculator.Constructor">
            <summary>设置 BezierCalculator.BezierCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip">
            <summary>DevExpress.Charts.Native.BezierRangeStrip 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.#ctor(DevExpress.Charts.Native.BezierRangeStrip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.CalculateMinMaxArguments">
            <summary>设置 BezierRangeStrip.CalculateMinMaxArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.CalculateMinMaxValues">
            <summary>设置 BezierRangeStrip.CalculateMinMaxValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.CompleteFilling">
            <summary>设置 BezierRangeStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.CreateBorderStrip">
            <summary>设置 BezierRangeStrip.CreateBorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.CreateInstance">
            <summary>设置 BezierRangeStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.GetBoundingRectangle">
            <summary>设置 BezierRangeStrip.GetBoundingRectangle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.GetPointsForDrawingInternalLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForDrawingInternal(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.GetPointsForDrawingLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForDrawing(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.GetPointsForDrawingLineStripOutLineStripOutDouble">
            <summary>设置 BezierRangeStrip.GetPointsForDrawing(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints, Double border) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.AllInstances.GetPointsForRangeCorrectionLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForRangeCorrection(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.Bind(DevExpress.Charts.Native.IBezierStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.Bind(DevExpress.Charts.Native.IGeometryStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.CalculateMinMaxArguments">
            <summary>设置 BezierRangeStrip.CalculateMinMaxArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.CalculateMinMaxValues">
            <summary>设置 BezierRangeStrip.CalculateMinMaxValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.CompleteFilling">
            <summary>设置 BezierRangeStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.ConstructorDouble">
            <summary>设置 BezierRangeStrip.BezierRangeStrip(Double lineTension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.CreateBorderStrip">
            <summary>设置 BezierRangeStrip.CreateBorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.CreateInstance">
            <summary>设置 BezierRangeStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.GetBoundingRectangle">
            <summary>设置 BezierRangeStrip.GetBoundingRectangle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.GetPointsForDrawingInternalLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForDrawingInternal(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.GetPointsForDrawingLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForDrawing(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierRangeStrip.GetPointsForRangeCorrectionLineStripOutLineStripOut">
            <summary>设置 BezierRangeStrip.GetPointsForRangeCorrection(LineStrip&amp; topPoints, LineStrip&amp; bottomPoints) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierStrip">
            <summary>DevExpress.Charts.Native.BezierStrip 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.#ctor(DevExpress.Charts.Native.BezierStrip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.CalculateMinMaxArguments">
            <summary>设置 BezierStrip.CalculateMinMaxArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.CalculateMinMaxValues">
            <summary>设置 BezierStrip.CalculateMinMaxValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.ClipLargeValuesGet">
            <summary>设置 BezierStrip.get_ClipLargeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.ClipLargeValuesSetBoolean">
            <summary>设置 BezierStrip.set_ClipLargeValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.CompleteFilling">
            <summary>设置 BezierStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.CreateInstance">
            <summary>设置 BezierStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.CreateUniqueStrip">
            <summary>设置 BezierStrip.CreateUniqueStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.DrawingPointsGet">
            <summary>设置 BezierStrip.get_DrawingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.ExtendGRealPoint2DBoolean">
            <summary>设置 BezierStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.ExtractSubStripInt32Int32">
            <summary>设置 BezierStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.GetPointsForDrawingBooleanBoolean">
            <summary>设置 BezierStrip.GetPointsForDrawing(Boolean completeFilling, Boolean clip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.GetPointsForDrawingWithoutValidateBooleanBoolean">
            <summary>设置 BezierStrip.GetPointsForDrawingWithoutValidate(Boolean completeFilling, Boolean clip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.LineTensionGet">
            <summary>设置 BezierStrip.get_LineTension() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.SetPointsForDrawingListOfGRealPoint2D">
            <summary>设置 BezierStrip.SetPointsForDrawing(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.SubstitureInt32Int32LineStrip">
            <summary>设置 BezierStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.TransformPointsBackwardListOfGRealPoint2D">
            <summary>设置 BezierStrip.TransformPointsBackward(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.AllInstances.TransformPointsForwardListOfGRealPoint2D">
            <summary>设置 BezierStrip.TransformPointsForward(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(DevExpress.Charts.Native.IBezierStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(DevExpress.Charts.Native.IGeometryStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.Generic.IReadOnlyCollection{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Bind(System.Collections.Generic.IReadOnlyList{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CalculateMinMaxArguments">
            <summary>设置 BezierStrip.CalculateMinMaxArguments() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CalculateMinMaxArgumentsIListOfGRealPoint2D">
            <summary>设置 BezierStrip.CalculateMinMaxArguments(IList`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CalculateMinMaxValues">
            <summary>设置 BezierStrip.CalculateMinMaxValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CalculateMinMaxValuesIListOfGRealPoint2D">
            <summary>设置 BezierStrip.CalculateMinMaxValues(IList`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ClipLargeValuesGet">
            <summary>设置 BezierStrip.get_ClipLargeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ClipLargeValuesSetBoolean">
            <summary>设置 BezierStrip.set_ClipLargeValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CompleteFilling">
            <summary>设置 BezierStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.Constructor">
            <summary>设置 BezierStrip.BezierStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ConstructorDouble">
            <summary>设置 BezierStrip.BezierStrip(Double lineTension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ConstructorDoubleITransformationITransformation">
            <summary>设置 BezierStrip.BezierStrip(Double lineTension, ITransformation transformationX, ITransformation transformationY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CreateInstance">
            <summary>设置 BezierStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.CreateUniqueStrip">
            <summary>设置 BezierStrip.CreateUniqueStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.DrawingPointsGet">
            <summary>设置 BezierStrip.get_DrawingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ExtendGRealPoint2DBoolean">
            <summary>设置 BezierStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.ExtractSubStripInt32Int32">
            <summary>设置 BezierStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.GetPointsForDrawingBooleanBoolean">
            <summary>设置 BezierStrip.GetPointsForDrawing(Boolean completeFilling, Boolean clip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.GetPointsForDrawingWithoutValidateBooleanBoolean">
            <summary>设置 BezierStrip.GetPointsForDrawingWithoutValidate(Boolean completeFilling, Boolean clip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.LineTensionGet">
            <summary>设置 BezierStrip.get_LineTension() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.SetPointsForDrawingListOfGRealPoint2D">
            <summary>设置 BezierStrip.SetPointsForDrawing(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.SubstitureInt32Int32LineStrip">
            <summary>设置 BezierStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.TransformPointsBackwardListOfGRealPoint2D">
            <summary>设置 BezierStrip.TransformPointsBackward(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBezierStrip.TransformPointsForwardListOfGRealPoint2D">
            <summary>设置 BezierStrip.TransformPointsForward(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore">
            <summary>DevExpress.Charts.Native.BindingHelperCore 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.CheckNumericDataTypeType">
            <summary>设置 BindingHelperCore.CheckNumericDataType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.CompareValuesObjectObject">
            <summary>设置 BindingHelperCore.CompareValues(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.GetMemberTypeObjectString">
            <summary>设置 BindingHelperCore.GetMemberType(Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.GetScaleTypeObjectString">
            <summary>设置 BindingHelperCore.GetScaleType(Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.GetValuesDataContextBaseObjectStringSortMode">
            <summary>设置 BindingHelperCore.GetValues(DataContextBase context, Object dataSource, String dataMember, SortMode sorting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.IsAssignableFromTypeTypeArray">
            <summary>设置 BindingHelperCore.IsAssignableFrom(Type type, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.IsValidDataParamsObjectString">
            <summary>设置 BindingHelperCore.IsValidDataParams(Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingHelperCore.StaticConstructor">
            <summary>设置 BindingHelperCore.BindingHelperCore() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBindingProcedure">
            <summary>DevExpress.Charts.Native.BindingProcedure 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.#ctor(DevExpress.Charts.Native.BindingProcedure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.CheckCurrentRecordByIntersectionISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecordByIntersection(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.CheckCurrentRecordByMergingISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecordByMerging(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.CheckCurrentRecordISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecord(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.CheckCurrentRecordISeriesIDataFilter">
            <summary>设置 BindingProcedure.CheckCurrentRecord(ISeries series, IDataFilter dataFilter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.ConvertToActualArgumentObject">
            <summary>设置 BindingProcedure.ConvertToActualArgument(Object argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.DataContextGet">
            <summary>设置 BindingProcedure.get_DataContext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.DataMemberGet">
            <summary>设置 BindingProcedure.get_DataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.DataSourceGet">
            <summary>设置 BindingProcedure.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.GetBindingPointISeriesPointFactoryObjectObjectISeriesIListOfStringString">
            <summary>设置 BindingProcedure.GetBindingPoint(ISeriesPointFactory factory, Object argument, Object dataRow, ISeries series, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.GetBindingPointISeriesPointFactoryObjectObjectISeriesIListOfStringStringString">
            <summary>设置 BindingProcedure.GetBindingPoint(ISeriesPointFactory factory, Object argument, Object dataRow, ISeries series, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, String colorDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.GetColorString">
            <summary>设置 BindingProcedure.GetColor(String colorDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.GetDataBrowserString">
            <summary>设置 BindingProcedure.GetDataBrowser(String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.GetToolTipHintString">
            <summary>设置 BindingProcedure.GetToolTipHint(String toolTipHintDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.ShouldClearDataContextGet">
            <summary>设置 BindingProcedure.get_ShouldClearDataContext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.AllInstances.TryConvertToDoubleObject">
            <summary>设置 BindingProcedure.TryConvertToDouble(Object argument) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.CheckCurrentRecordByIntersectionISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecordByIntersection(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.CheckCurrentRecordByMergingISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecordByMerging(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.CheckCurrentRecordISeries">
            <summary>设置 BindingProcedure.CheckCurrentRecord(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.CheckCurrentRecordISeriesIDataFilter">
            <summary>设置 BindingProcedure.CheckCurrentRecord(ISeries series, IDataFilter dataFilter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.ConstructorDataContextBaseObjectString">
            <summary>设置 BindingProcedure.BindingProcedure(DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.ConvertToActualArgumentObject">
            <summary>设置 BindingProcedure.ConvertToActualArgument(Object argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.ConvertToActualDataMemberStringString">
            <summary>设置 BindingProcedure.ConvertToActualDataMember(String rootDataMember, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.ConvertToCompatibleValueIDataFilterObject">
            <summary>设置 BindingProcedure.ConvertToCompatibleValue(IDataFilter dataFilter, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.CreateDataBrowserDataContextBaseObjectString">
            <summary>设置 BindingProcedure.CreateDataBrowser(DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.DataContextGet">
            <summary>设置 BindingProcedure.get_DataContext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.DataMemberGet">
            <summary>设置 BindingProcedure.get_DataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.DataSourceGet">
            <summary>设置 BindingProcedure.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.GetBindingPointISeriesPointFactoryObjectObjectISeriesIListOfStringString">
            <summary>设置 BindingProcedure.GetBindingPoint(ISeriesPointFactory factory, Object argument, Object dataRow, ISeries series, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.GetBindingPointISeriesPointFactoryObjectObjectISeriesIListOfStringStringString">
            <summary>设置 BindingProcedure.GetBindingPoint(ISeriesPointFactory factory, Object argument, Object dataRow, ISeries series, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, String colorDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.GetColorString">
            <summary>设置 BindingProcedure.GetColor(String colorDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.GetDataBrowserString">
            <summary>设置 BindingProcedure.GetDataBrowser(String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.GetToolTipHintString">
            <summary>设置 BindingProcedure.GetToolTipHint(String toolTipHintDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.ShouldClearDataContextGet">
            <summary>设置 BindingProcedure.get_ShouldClearDataContext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBindingProcedure.TryConvertToDoubleObject">
            <summary>设置 BindingProcedure.TryConvertToDouble(Object argument) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator">
            <summary>DevExpress.Charts.Native.BollingerBandsCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.#ctor(DevExpress.Charts.Native.BollingerBandsCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.CalcStdDeviationIListOfRefinedPointDoubleInt32Int32ValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.CalcStdDeviation(IList`1&lt;RefinedPoint&gt; refinedPoints, Double sma, Int32 index, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.CalculateIRefinedSeriesInt32DoubleValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, Double deviationMultiplier, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.CalculatedGet">
            <summary>设置 BollingerBandsCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 BollingerBandsCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32DoubleValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, Double deviationMultiplier, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.LowerBandPointsGet">
            <summary>设置 BollingerBandsCalculator.get_LowerBandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.LowerBandPointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_LowerBandPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MaxYGet">
            <summary>设置 BollingerBandsCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 BollingerBandsCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MinYGet">
            <summary>设置 BollingerBandsCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MinYSetDouble">
            <summary>设置 BollingerBandsCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MovingAveragePointsGet">
            <summary>设置 BollingerBandsCalculator.get_MovingAveragePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.MovingAveragePointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_MovingAveragePoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.UpperBandPointsGet">
            <summary>设置 BollingerBandsCalculator.get_UpperBandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.AllInstances.UpperBandPointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_UpperBandPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.CalcStdDeviationIListOfRefinedPointDoubleInt32Int32ValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.CalcStdDeviation(IList`1&lt;RefinedPoint&gt; refinedPoints, Double sma, Int32 index, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.CalculateIRefinedSeriesInt32DoubleValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, Double deviationMultiplier, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.CalculatedGet">
            <summary>设置 BollingerBandsCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.CalculatedSetBoolean">
            <summary>设置 BollingerBandsCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.Constructor">
            <summary>设置 BollingerBandsCalculator.BollingerBandsCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.IsParametersCorrectIRefinedSeriesInt32DoubleValueLevelInternal">
            <summary>设置 BollingerBandsCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, Double deviationMultiplier, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.LowerBandPointsGet">
            <summary>设置 BollingerBandsCalculator.get_LowerBandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.LowerBandPointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_LowerBandPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MaxYGet">
            <summary>设置 BollingerBandsCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MaxYSetDouble">
            <summary>设置 BollingerBandsCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MinYGet">
            <summary>设置 BollingerBandsCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MinYSetDouble">
            <summary>设置 BollingerBandsCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MovingAveragePointsGet">
            <summary>设置 BollingerBandsCalculator.get_MovingAveragePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.MovingAveragePointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_MovingAveragePoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.UpperBandPointsGet">
            <summary>设置 BollingerBandsCalculator.get_UpperBandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimBollingerBandsCalculator.UpperBandPointsSetListOfGRealPoint2D">
            <summary>设置 BollingerBandsCalculator.set_UpperBandPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCell">
            <summary>DevExpress.Charts.Native.Cell 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCell.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCell.#ctor(DevExpress.Charts.Native.Cell)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.BoundsGet">
            <summary>设置 Cell.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.Clear">
            <summary>设置 Cell.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.CompareToObject">
            <summary>设置 Cell.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.Infill">
            <summary>设置 Cell.Infill() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.InfillCountGet">
            <summary>设置 Cell.get_InfillCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.AllInstances.IsEmptyGet">
            <summary>设置 Cell.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCell.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCell.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCell.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.BoundsGet">
            <summary>设置 Cell.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.Clear">
            <summary>设置 Cell.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.CompareToObject">
            <summary>设置 Cell.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.ConstructorGRect2D">
            <summary>设置 Cell.Cell(GRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.ConstructorGRect2DInt32">
            <summary>设置 Cell.Cell(GRect2D bounds, Int32 infillCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.Infill">
            <summary>设置 Cell.Infill() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.InfillCountGet">
            <summary>设置 Cell.get_InfillCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCell.IsEmptyGet">
            <summary>设置 Cell.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator">
            <summary>DevExpress.Charts.Native.ChaikinsVolatilityCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.#ctor(DevExpress.Charts.Native.ChaikinsVolatilityCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.CalcChvDoubleDouble">
            <summary>设置 ChaikinsVolatilityCalculator.CalcChv(Double ema, Double oldEma) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.CalcNextEmaIFinancialPointDoubleDouble">
            <summary>设置 ChaikinsVolatilityCalculator.CalcNextEma(IFinancialPoint point, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.CalculateIRefinedSeriesInt32">
            <summary>设置 ChaikinsVolatilityCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.CalculatedGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 ChaikinsVolatilityCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 ChaikinsVolatilityCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.MaxYGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 ChaikinsVolatilityCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.MinYGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.AllInstances.MinYSetDouble">
            <summary>设置 ChaikinsVolatilityCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.CalcChvDoubleDouble">
            <summary>设置 ChaikinsVolatilityCalculator.CalcChv(Double ema, Double oldEma) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.CalcNextEmaIFinancialPointDoubleDouble">
            <summary>设置 ChaikinsVolatilityCalculator.CalcNextEma(IFinancialPoint point, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.CalculateIRefinedSeriesInt32">
            <summary>设置 ChaikinsVolatilityCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.CalculatedGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.CalculatedSetBoolean">
            <summary>设置 ChaikinsVolatilityCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.Constructor">
            <summary>设置 ChaikinsVolatilityCalculator.ChaikinsVolatilityCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 ChaikinsVolatilityCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.MaxYGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.MaxYSetDouble">
            <summary>设置 ChaikinsVolatilityCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.MinYGet">
            <summary>设置 ChaikinsVolatilityCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChaikinsVolatilityCalculator.MinYSetDouble">
            <summary>设置 ChaikinsVolatilityCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure">
            <summary>DevExpress.Charts.Native.ChartBindingProcedure 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.#ctor(DevExpress.Charts.Native.ChartBindingProcedure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.AutoCreatedSeriesGet">
            <summary>设置 ChartBindingProcedure.get_AutoCreatedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.CompleteISeries">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.CreateBindingSeriesISeriesTemplateString">
            <summary>设置 ChartBindingProcedure.CreateBindingSeries(ISeriesTemplate seriesTemplate, String seriesDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.CreateBindingSeriesISeriesTemplateStringSortModeStringString">
            <summary>设置 ChartBindingProcedure.CreateBindingSeries(ISeriesTemplate seriesTemplate, String seriesDataMember, SortMode sorting, String seriesNameBeginText, String seriesNameEndText) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.CreateSortedSeriesListDictionaryOfObjectISeriesSortMode">
            <summary>设置 ChartBindingProcedure.CreateSortedSeriesList(Dictionary`2&lt;Object,ISeries&gt; seriesList, SortMode sorting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AllInstances.GetActualValueDataMembersIListOfString">
            <summary>设置 ChartBindingProcedure.GetActualValueDataMembers(IList`1&lt;String&gt; valueDataMembers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.AutoCreatedSeriesGet">
            <summary>设置 ChartBindingProcedure.get_AutoCreatedSeries() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.CompleteISeries">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.ConstructorDataContextBaseObjectString">
            <summary>设置 ChartBindingProcedure.ChartBindingProcedure(DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.CreateBindingSeriesISeriesTemplateString">
            <summary>设置 ChartBindingProcedure.CreateBindingSeries(ISeriesTemplate seriesTemplate, String seriesDataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.CreateBindingSeriesISeriesTemplateStringSortModeStringString">
            <summary>设置 ChartBindingProcedure.CreateBindingSeries(ISeriesTemplate seriesTemplate, String seriesDataMember, SortMode sorting, String seriesNameBeginText, String seriesNameEndText) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.CreateSortedSeriesListDictionaryOfObjectISeriesSortMode">
            <summary>设置 ChartBindingProcedure.CreateSortedSeriesList(Dictionary`2&lt;Object,ISeries&gt; seriesList, SortMode sorting) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartBindingProcedure.GetActualValueDataMembersIListOfString">
            <summary>设置 ChartBindingProcedure.GetActualValueDataMembers(IList`1&lt;String&gt; valueDataMembers) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChartDebug">
            <summary>DevExpress.Charts.Native.ChartDebug 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartDebug.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.AssertBoolean">
            <summary>设置 ChartDebug.Assert(Boolean condition) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.AssertBooleanString">
            <summary>设置 ChartDebug.Assert(Boolean condition, String message) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartDebug.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartDebug.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.Fail">
            <summary>设置 ChartDebug.Fail() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.FailString">
            <summary>设置 ChartDebug.Fail(String message) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteLineObject">
            <summary>设置 ChartDebug.WriteLine(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteLineObjectString">
            <summary>设置 ChartDebug.WriteLine(Object value, String category) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteLineString">
            <summary>设置 ChartDebug.WriteLine(String message) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteLineStringString">
            <summary>设置 ChartDebug.WriteLine(String message, String category) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteObject">
            <summary>设置 ChartDebug.Write(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteObjectString">
            <summary>设置 ChartDebug.Write(Object value, String category) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteString">
            <summary>设置 ChartDebug.Write(String message) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteStringString">
            <summary>设置 ChartDebug.Write(String message, String category) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartDebug.WriteWarningString">
            <summary>设置 ChartDebug.WriteWarning(String message) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase">
            <summary>DevExpress.Charts.Native.ChartUpdateInfoBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.#ctor(DevExpress.Charts.Native.ChartUpdateInfoBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.AllInstances.SenderGet">
            <summary>设置 ChartUpdateInfoBase.get_Sender() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.ConstructorObject">
            <summary>设置 ChartUpdateInfoBase.ChartUpdateInfoBase(Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimChartUpdateInfoBase.SenderGet">
            <summary>设置 ChartUpdateInfoBase.get_Sender() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionManager">
            <summary>DevExpress.Charts.Native.CollectionManager 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionManager.#ctor(DevExpress.Charts.Native.CollectionManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.DetectPointIndexOverflowInt32Int32">
            <summary>设置 CollectionManager.DetectPointIndexOverflow(Int32 pointsCount, Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.FindAllPointsWithSameArgumentRefinedPoint">
            <summary>设置 CollectionManager.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.FindRefinePointBySeriesPointISeriesPoint">
            <summary>设置 CollectionManager.FindRefinePointBySeriesPoint(ISeriesPoint seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.GetMaxPointDouble">
            <summary>设置 CollectionManager.GetMaxPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.GetMinAbsArgument">
            <summary>设置 CollectionManager.GetMinAbsArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.GetMinPointDouble">
            <summary>设置 CollectionManager.GetMinPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.GetPointsByArgumentDouble">
            <summary>设置 CollectionManager.GetPointsByArgument(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.IsContainsSortedBySettingsPointsGet">
            <summary>设置 CollectionManager.get_IsContainsSortedBySettingsPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.PointsGet">
            <summary>设置 CollectionManager.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.PointsSortedByArgumentGet">
            <summary>设置 CollectionManager.get_PointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.PointsSortedBySettingsGet">
            <summary>设置 CollectionManager.get_PointsSortedBySettings() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.ProcessPointIPointProcessorRefinedPoint">
            <summary>设置 CollectionManager.ProcessPoint(IPointProcessor processor, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.ProcessPointsIPointProcessor">
            <summary>设置 CollectionManager.ProcessPoints(IPointProcessor processor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 CollectionManager.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 CollectionManager.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative pointsSortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.RefinePointIPointProcessorISeriesPoint">
            <summary>设置 CollectionManager.RefinePoint(IPointProcessor processor, ISeriesPoint seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.TryUpdatePointsIndicesInt32RefinedPointArray">
            <summary>设置 CollectionManager.TryUpdatePointsIndices(Int32 sourceCollectionStartIndex, RefinedPoint[] refinedPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.AllInstances.UpdatePointsIndices">
            <summary>设置 CollectionManager.UpdatePointsIndices() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.ConstructorRefinedSeries">
            <summary>设置 CollectionManager.CollectionManager(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.DetectPointIndexOverflowInt32Int32">
            <summary>设置 CollectionManager.DetectPointIndexOverflow(Int32 pointsCount, Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.FindAllPointsWithSameArgumentRefinedPoint">
            <summary>设置 CollectionManager.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.FindRefinePointBySeriesPointISeriesPoint">
            <summary>设置 CollectionManager.FindRefinePointBySeriesPoint(ISeriesPoint seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.GetMaxPointDouble">
            <summary>设置 CollectionManager.GetMaxPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.GetMinAbsArgument">
            <summary>设置 CollectionManager.GetMinAbsArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.GetMinPointDouble">
            <summary>设置 CollectionManager.GetMinPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.GetPointsByArgumentDouble">
            <summary>设置 CollectionManager.GetPointsByArgument(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.IsContainsSortedBySettingsPointsGet">
            <summary>设置 CollectionManager.get_IsContainsSortedBySettingsPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.PointsGet">
            <summary>设置 CollectionManager.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.PointsSortedByArgumentGet">
            <summary>设置 CollectionManager.get_PointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.PointsSortedBySettingsGet">
            <summary>设置 CollectionManager.get_PointsSortedBySettings() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.ProcessPointIPointProcessorRefinedPoint">
            <summary>设置 CollectionManager.ProcessPoint(IPointProcessor processor, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.ProcessPointsIPointProcessor">
            <summary>设置 CollectionManager.ProcessPoints(IPointProcessor processor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 CollectionManager.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 CollectionManager.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative pointsSortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.RefinePointIPointProcessorISeriesPoint">
            <summary>设置 CollectionManager.RefinePoint(IPointProcessor processor, ISeriesPoint seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.TryUpdatePointsIndicesInt32RefinedPointArray">
            <summary>设置 CollectionManager.TryUpdatePointsIndices(Int32 sourceCollectionStartIndex, RefinedPoint[] refinedPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager.UpdatePointsIndices">
            <summary>设置 CollectionManager.UpdatePointsIndices() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager._PerformBatchUpdateb__cSortedRefinedPointCollection">
            <summary>设置 CollectionManager.&lt;PerformBatchUpdate&gt;b__c(SortedRefinedPointCollection pointsCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionManager._PerformUpdateb__0SortedRefinedPointCollection">
            <summary>设置 CollectionManager.&lt;PerformUpdate&gt;b__0(SortedRefinedPointCollection pointsCollection) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.CollectionUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.#ctor(DevExpress.Charts.Native.CollectionUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances.NewIndexGet">
            <summary>设置 CollectionUpdateInfo.get_NewIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances.NewItemGet">
            <summary>设置 CollectionUpdateInfo.get_NewItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances.OldIndexGet">
            <summary>设置 CollectionUpdateInfo.get_OldIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances.OldItemGet">
            <summary>设置 CollectionUpdateInfo.get_OldItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.AllInstances.OperationGet">
            <summary>设置 CollectionUpdateInfo.get_Operation() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.ConstructorObjectChartCollectionOperationInt32Int32ObjectObject">
            <summary>设置 CollectionUpdateInfo.CollectionUpdateInfo(Object sender, ChartCollectionOperation operation, Int32 oldIndex, Int32 newIndex, Object oldItem, Object newItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.NewIndexGet">
            <summary>设置 CollectionUpdateInfo.get_NewIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.NewItemGet">
            <summary>设置 CollectionUpdateInfo.get_NewItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.OldIndexGet">
            <summary>设置 CollectionUpdateInfo.get_OldIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.OldItemGet">
            <summary>设置 CollectionUpdateInfo.get_OldItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo.OperationGet">
            <summary>设置 CollectionUpdateInfo.get_Operation() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1">
            <summary>DevExpress.Charts.Native.CollectionUpdateInfo`1 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.#ctor(DevExpress.Charts.Native.CollectionUpdateInfo{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.AllInstances.NewItemGet">
            <summary>设置 CollectionUpdateInfo`1.get_NewItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.AllInstances.OldItemGet">
            <summary>设置 CollectionUpdateInfo`1.get_OldItem() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.ConstructorObjectChartCollectionOperationT0Int32T0Int32">
            <summary>设置 CollectionUpdateInfo`1.CollectionUpdateInfo`1(Object sender, ChartCollectionOperation operation, !0 oldItem, Int32 oldIndex, !0 newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.NewItemGet">
            <summary>设置 CollectionUpdateInfo`1.get_NewItem() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCollectionUpdateInfo`1.OldItemGet">
            <summary>设置 CollectionUpdateInfo`1.get_OldItem() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator">
            <summary>DevExpress.Charts.Native.CommodityChannelIndexCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.#ctor(DevExpress.Charts.Native.CommodityChannelIndexCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculateCCIDoubleDoubleDouble">
            <summary>设置 CommodityChannelIndexCalculator.CalculateCCI(Double typicalPrice, Double tpma, Double mad) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculateIRefinedSeriesInt32">
            <summary>设置 CommodityChannelIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculateMadQueueOfDoubleDouble">
            <summary>设置 CommodityChannelIndexCalculator.CalculateMad(Queue`1&lt;Double&gt; typicalPriceQueue, Double tpma) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculateTypicalPriceIFinancialPoint">
            <summary>设置 CommodityChannelIndexCalculator.CalculateTypicalPrice(IFinancialPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculatedGet">
            <summary>设置 CommodityChannelIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 CommodityChannelIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 CommodityChannelIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.MaxYGet">
            <summary>设置 CommodityChannelIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 CommodityChannelIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.MinYGet">
            <summary>设置 CommodityChannelIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.AllInstances.MinYSetDouble">
            <summary>设置 CommodityChannelIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculateCCIDoubleDoubleDouble">
            <summary>设置 CommodityChannelIndexCalculator.CalculateCCI(Double typicalPrice, Double tpma, Double mad) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculateIRefinedSeriesInt32">
            <summary>设置 CommodityChannelIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculateMadQueueOfDoubleDouble">
            <summary>设置 CommodityChannelIndexCalculator.CalculateMad(Queue`1&lt;Double&gt; typicalPriceQueue, Double tpma) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculateTypicalPriceIFinancialPoint">
            <summary>设置 CommodityChannelIndexCalculator.CalculateTypicalPrice(IFinancialPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculatedGet">
            <summary>设置 CommodityChannelIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.CalculatedSetBoolean">
            <summary>设置 CommodityChannelIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.Constructor">
            <summary>设置 CommodityChannelIndexCalculator.CommodityChannelIndexCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 CommodityChannelIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.MaxYGet">
            <summary>设置 CommodityChannelIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.MaxYSetDouble">
            <summary>设置 CommodityChannelIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.MinYGet">
            <summary>设置 CommodityChannelIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCommodityChannelIndexCalculator.MinYSetDouble">
            <summary>设置 CommodityChannelIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator">
            <summary>DevExpress.Charts.Native.CountAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.#ctor(DevExpress.Charts.Native.CountAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 CountAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 CountAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCountAggregationCalculator.Constructor">
            <summary>设置 CountAggregationCalculator.CountAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo">
            <summary>DevExpress.Charts.Native.CrosshairAxisInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.#ctor(DevExpress.Charts.Native.CrosshairAxisInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.AnchorPointGet">
            <summary>设置 CrosshairAxisInfo.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.AxisGet">
            <summary>设置 CrosshairAxisInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.BoundsGet">
            <summary>设置 CrosshairAxisInfo.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.MaxSizeGet">
            <summary>设置 CrosshairAxisInfo.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.SizeGet">
            <summary>设置 CrosshairAxisInfo.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.SizeSetGRealSize2D">
            <summary>设置 CrosshairAxisInfo.set_Size(GRealSize2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.TextGet">
            <summary>设置 CrosshairAxisInfo.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AllInstances.ValueGet">
            <summary>设置 CrosshairAxisInfo.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AnchorPointGet">
            <summary>设置 CrosshairAxisInfo.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.AxisGet">
            <summary>设置 CrosshairAxisInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.BoundsGet">
            <summary>设置 CrosshairAxisInfo.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.ConstructorStringGRealPoint2DGRealSize2DIAxisDataObject">
            <summary>设置 CrosshairAxisInfo.CrosshairAxisInfo(String text, GRealPoint2D anchorPoint, GRealSize2D maxSize, IAxisData axis, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.MaxSizeGet">
            <summary>设置 CrosshairAxisInfo.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.SizeGet">
            <summary>设置 CrosshairAxisInfo.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.SizeSetGRealSize2D">
            <summary>设置 CrosshairAxisInfo.set_Size(GRealSize2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.TextGet">
            <summary>设置 CrosshairAxisInfo.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairAxisInfo.ValueGet">
            <summary>设置 CrosshairAxisInfo.get_Value() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter">
            <summary>DevExpress.Charts.Native.CrosshairGroupHeaderValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.#ctor(DevExpress.Charts.Native.CrosshairGroupHeaderValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.ConstructorISeriesBooleanBoolean">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.CrosshairGroupHeaderValueToStringConverter(ISeries series, Boolean allowArgument, Boolean allowValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairGroupHeaderValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairInfoEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.#ctor(DevExpress.Charts.Native.CrosshairInfoEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AddCrosshairPaneInfoEx">
            <summary>设置 CrosshairInfoEx.Add(CrosshairPaneInfoEx paneInfo) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances.AddCrosshairPaneInfoEx">
            <summary>设置 CrosshairInfoEx.Add(CrosshairPaneInfoEx paneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances.CompleteLabelsLayout">
            <summary>设置 CrosshairInfoEx.CompleteLabelsLayout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances.GetByPaneIPane">
            <summary>设置 CrosshairInfoEx.GetByPane(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances.SystemCollectionsGenericIEnumerableDevExpressChartsNativeCrosshairPaneInfoExGetEnumerator">
            <summary>设置 CrosshairInfoEx.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.CrosshairPaneInfoEx&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CrosshairInfoEx.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.CrosshairPaneInfoEx})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.CompleteLabelsLayout">
            <summary>设置 CrosshairInfoEx.CompleteLabelsLayout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.Constructor">
            <summary>设置 CrosshairInfoEx.CrosshairInfoEx() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.GetByPaneIPane">
            <summary>设置 CrosshairInfoEx.GetByPane(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.SystemCollectionsGenericIEnumerableDevExpressChartsNativeCrosshairPaneInfoExGetEnumerator">
            <summary>设置 CrosshairInfoEx.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.CrosshairPaneInfoEx&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairInfoEx.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CrosshairInfoEx.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairLabelInfoEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.#ctor(DevExpress.Charts.Native.CrosshairLabelInfoEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.AnchorPointGet">
            <summary>设置 CrosshairLabelInfoEx.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.BoundsGet">
            <summary>设置 CrosshairLabelInfoEx.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.BoundsSetGRealRect2D">
            <summary>设置 CrosshairLabelInfoEx.set_Bounds(GRealRect2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.CursorOffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_CursorOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.InitOffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_InitOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.LocationGet">
            <summary>设置 CrosshairLabelInfoEx.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.LocationSetAnnotationLocation">
            <summary>设置 CrosshairLabelInfoEx.set_Location(AnnotationLocation value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.OffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.OffsetSetGRealPoint2D">
            <summary>设置 CrosshairLabelInfoEx.set_Offset(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.PointGroupsGet">
            <summary>设置 CrosshairLabelInfoEx.get_PointGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.ShowTailGet">
            <summary>设置 CrosshairLabelInfoEx.get_ShowTail() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.ShowTailSetBoolean">
            <summary>设置 CrosshairLabelInfoEx.set_ShowTail(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.SizeGet">
            <summary>设置 CrosshairLabelInfoEx.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AllInstances.SizeSetGRealSize2D">
            <summary>设置 CrosshairLabelInfoEx.set_Size(GRealSize2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.AnchorPointGet">
            <summary>设置 CrosshairLabelInfoEx.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.Bind(DevExpress.Charts.Native.IAnnotationLayout)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.BoundsGet">
            <summary>设置 CrosshairLabelInfoEx.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.BoundsSetGRealRect2D">
            <summary>设置 CrosshairLabelInfoEx.set_Bounds(GRealRect2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.ConstructorIListOfCrosshairPointsGroupGRealPoint2DAnnotationLocationBooleanGRealPoint2D">
            <summary>设置 CrosshairLabelInfoEx.CrosshairLabelInfoEx(IList`1&lt;CrosshairPointsGroup&gt; pointGroups, GRealPoint2D anchorPoint, AnnotationLocation defaultLocation, Boolean showTail, GRealPoint2D initOffset) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.CursorOffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_CursorOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.InitOffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_InitOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.LocationGet">
            <summary>设置 CrosshairLabelInfoEx.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.LocationSetAnnotationLocation">
            <summary>设置 CrosshairLabelInfoEx.set_Location(AnnotationLocation value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.OffsetGet">
            <summary>设置 CrosshairLabelInfoEx.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.OffsetSetGRealPoint2D">
            <summary>设置 CrosshairLabelInfoEx.set_Offset(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.PointGroupsGet">
            <summary>设置 CrosshairLabelInfoEx.get_PointGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.ShowTailGet">
            <summary>设置 CrosshairLabelInfoEx.get_ShowTail() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.ShowTailSetBoolean">
            <summary>设置 CrosshairLabelInfoEx.set_ShowTail(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.SizeGet">
            <summary>设置 CrosshairLabelInfoEx.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLabelInfoEx.SizeSetGRealSize2D">
            <summary>设置 CrosshairLabelInfoEx.set_Size(GRealSize2D value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairLine">
            <summary>DevExpress.Charts.Native.CrosshairLine 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.#ctor(DevExpress.Charts.Native.CrosshairLine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.AllInstances.IsValueLineGet">
            <summary>设置 CrosshairLine.get_IsValueLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.AllInstances.LineGet">
            <summary>设置 CrosshairLine.get_Line() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.ConstructorGRealLine2DBoolean">
            <summary>设置 CrosshairLine.CrosshairLine(GRealLine2D line, Boolean isValueLine) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.IsValueLineGet">
            <summary>设置 CrosshairLine.get_IsValueLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairLine.LineGet">
            <summary>设置 CrosshairLine.get_Line() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairManager">
            <summary>DevExpress.Charts.Native.CrosshairManager 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.#ctor(DevExpress.Charts.Native.CrosshairManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AddAxisValuesByPointsCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairManager.AddAxisValuesByPoints(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AddAxisValuesForCursorSnapAxesCrosshairPaneInfoExICrosshairOptions">
            <summary>设置 CrosshairManager.AddAxisValuesForCursorSnapAxes(CrosshairPaneInfoEx crosshairPaneInfo, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AddCrosshairAxisInfoCrosshairPaneInfoExDictionaryOfPointProjectionOnAxisGRealPoint2DPointProjectionOnAxis">
            <summary>设置 CrosshairManager.AddCrosshairAxisInfo(CrosshairPaneInfoEx crosshairPaneInfo, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords, PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.AddAxisValuesByPointsCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairManager.AddAxisValuesByPoints(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.AddAxisValuesForCursorSnapAxesCrosshairPaneInfoExICrosshairOptions">
            <summary>设置 CrosshairManager.AddAxisValuesForCursorSnapAxes(CrosshairPaneInfoEx crosshairPaneInfo, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.AddCrosshairAxisInfoCrosshairPaneInfoExDictionaryOfPointProjectionOnAxisGRealPoint2DPointProjectionOnAxis">
            <summary>设置 CrosshairManager.AddCrosshairAxisInfo(CrosshairPaneInfoEx crosshairPaneInfo, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords, PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.BindAxisValueAndScreenCoordsICrosshairOptionsCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.BindAxisValueAndScreenCoords(ICrosshairOptions options, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateAxisLabelsCrosshairPaneInfoExListOfCrosshairSeriesPointExDictionaryOfPointProjectionOnAxisGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateAxisLabels(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateAxisValuesCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairManager.CalculateAxisValues(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateCrossLinesCrosshairPaneInfoExListOfCrosshairSeriesPointExDictionaryOfPointProjectionOnAxisGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateCrossLines(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateCrosshairInfoGRealPoint2DGRealRect2DIListOfPaneAxesContainerIPaneIListOfIRefinedSeries">
            <summary>设置 CrosshairManager.CalculateCrosshairInfo(GRealPoint2D crosshairLocation, GRealRect2D labelsConstraint, IList`1&lt;PaneAxesContainer&gt; paneAxisRepositories, IPane focusedPane, IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateCrosshairPointsCrosshairPaneInfoExIListOfIRefinedSeries">
            <summary>设置 CrosshairManager.CalculateCrosshairPoints(CrosshairPaneInfoEx crosshairPaneInfo, IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculateNearestPointListOfCrosshairSeriesPointExGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateNearestPoint(List`1&lt;CrosshairSeriesPointEx&gt; crosshairSeriesPoints, GRealPoint2D crosshairLocation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CalculatePointGroupsCrosshairSeriesPointExIRefinedSeriesCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.CalculatePointGroups(CrosshairSeriesPointEx crosshairPoint, IRefinedSeries refinedSeries, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CompleteCrosshairFreeLabelsInfoCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairFreePositionICrosshairOptions">
            <summary>设置 CrosshairManager.CompleteCrosshairFreeLabelsInfo(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; seriesPoints, ICrosshairFreePosition labelPosition, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CreateCrossLineDictionaryOfPointProjectionOnAxisGRealPoint2DGRealRect2DPointProjectionOnAxis">
            <summary>设置 CrosshairManager.CreateCrossLine(Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords, GRealRect2D mappingBounds, PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CreateCrossLineDoubleDoubleDoubleDoubleBoolean">
            <summary>设置 CrosshairManager.CreateCrossLine(Double startX, Double startY, Double endX, Double endY, Boolean isValueLine) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CreateCrosshairLabelsGRealRect2DIPaneICrosshairOptionsCrosshairInfoEx">
            <summary>设置 CrosshairManager.CreateCrosshairLabels(GRealRect2D labelsConstraint, IPane focusedPane, ICrosshairOptions options, CrosshairInfoEx crosshairInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CreateCrosshairPaneInfosGRealPoint2DIPaneIXYDiagram">
            <summary>设置 CrosshairManager.CreateCrosshairPaneInfos(GRealPoint2D crosshairLocation, IPane focusedPane, IXYDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CreateCrosshairSeriesPointIXYSeriesViewDoubleDoubleCrosshairPaneInfoExIRefinedSeriesISideBySidePointPointPositionInSeriesInt32">
            <summary>设置 CrosshairManager.CreateCrosshairSeriesPoint(IXYSeriesView seriesView, Double pointArgument, Double pointValue, CrosshairPaneInfoEx crosshairPaneInfo, IRefinedSeries refinedSeries, ISideBySidePoint nearestPointInfo, PointPositionInSeries pointPosition, Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.CrosshairOptionsGet">
            <summary>设置 CrosshairManager.get_CrosshairOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.FindCrosshairPointIRefinedSeriesCrosshairSeriesDataCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.FindCrosshairPoint(IRefinedSeries refinedSeries, CrosshairSeriesData crosshairSeriesData, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.FindDifferentPointsListOfIAxisDataCrosshairPaneInfoExListOfCrosshairSeriesPointEx">
            <summary>设置 CrosshairManager.FindDifferentPoints(List`1&lt;IAxisData&gt; qualitativeAxes, CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairSeriesPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetAxisValueForCursorSnapAxesPointProjectionsForPaneIPaneBoolean">
            <summary>设置 CrosshairManager.GetAxisValueForCursorSnapAxes(PointProjectionsForPane crosshairCoords, IPane pane, Boolean snapToArguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetAxisValuePairICrosshairOptionsCrosshairSeriesPointEx">
            <summary>设置 CrosshairManager.GetAxisValuePair(ICrosshairOptions options, CrosshairSeriesPointEx point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetConnectedPointsCrosshairSeriesPointExCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.GetConnectedPoints(CrosshairSeriesPointEx point, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetCrosshairDataIRefinedSeries">
            <summary>设置 CrosshairManager.GetCrosshairData(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetCrosshairPointsIRefinedSeriesCrosshairSeriesDataCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.GetCrosshairPoints(IRefinedSeries refinedSeries, CrosshairSeriesData crosshairSeriesData, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetCrosshairSortedDataIRefinedSeries">
            <summary>设置 CrosshairManager.GetCrosshairSortedData(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.GetPaneAxesContainerIPane">
            <summary>设置 CrosshairManager.GetPaneAxesContainer(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.IsAxisLabelVisiblePointProjectionOnAxis">
            <summary>设置 CrosshairManager.IsAxisLabelVisible(PointProjectionOnAxis axisValuePair) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.IsHorizontalCrosshairGet">
            <summary>设置 CrosshairManager.get_IsHorizontalCrosshair() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.IsPointInCrosshairRangeCrosshairSeriesPointExCrosshairPaneInfoExISeriesView">
            <summary>设置 CrosshairManager.IsPointInCrosshairRange(CrosshairSeriesPointEx point, CrosshairPaneInfoEx crosshairPaneInfo, ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.LabelPositionGet">
            <summary>设置 CrosshairManager.get_LabelPosition() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.SnapToArgumentGet">
            <summary>设置 CrosshairManager.get_SnapToArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.AllInstances.UpdateCrosshairDataIListOfRefinedSeries">
            <summary>设置 CrosshairManager.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.BindAxisValueAndScreenCoordsICrosshairOptionsCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.BindAxisValueAndScreenCoords(ICrosshairOptions options, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateAxisLabelsCrosshairPaneInfoExListOfCrosshairSeriesPointExDictionaryOfPointProjectionOnAxisGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateAxisLabels(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateAxisValuesCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairManager.CalculateAxisValues(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateCrossLinesCrosshairPaneInfoExListOfCrosshairSeriesPointExDictionaryOfPointProjectionOnAxisGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateCrossLines(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairPoints, Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateCrosshairInfoGRealPoint2DGRealRect2DIListOfPaneAxesContainerIPaneIListOfIRefinedSeries">
            <summary>设置 CrosshairManager.CalculateCrosshairInfo(GRealPoint2D crosshairLocation, GRealRect2D labelsConstraint, IList`1&lt;PaneAxesContainer&gt; paneAxisRepositories, IPane focusedPane, IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateCrosshairPointsCrosshairPaneInfoExIListOfIRefinedSeries">
            <summary>设置 CrosshairManager.CalculateCrosshairPoints(CrosshairPaneInfoEx crosshairPaneInfo, IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateMinMaxBarRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramIPaneCrosshairSnapModeCore">
            <summary>设置 CrosshairManager.CalculateMinMaxBarRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, IPane pane, CrosshairSnapModeCore snapMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateMinMaxContinuousSeriesRangeValuesCrosshairSeriesPointExDoubleBooleanCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 CrosshairManager.CalculateMinMaxContinuousSeriesRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateMinMaxMarkerSeriesRangeValuesCrosshairSeriesPointExDoubleBoolean">
            <summary>设置 CrosshairManager.CalculateMinMaxMarkerSeriesRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculateNearestPointListOfCrosshairSeriesPointExGRealPoint2D">
            <summary>设置 CrosshairManager.CalculateNearestPoint(List`1&lt;CrosshairSeriesPointEx&gt; crosshairSeriesPoints, GRealPoint2D crosshairLocation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CalculatePointGroupsCrosshairSeriesPointExIRefinedSeriesCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.CalculatePointGroups(CrosshairSeriesPointEx crosshairPoint, IRefinedSeries refinedSeries, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CompleteCrosshairFreeLabelsInfoCrosshairPaneInfoExListOfCrosshairSeriesPointExICrosshairFreePositionICrosshairOptions">
            <summary>设置 CrosshairManager.CompleteCrosshairFreeLabelsInfo(CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; seriesPoints, ICrosshairFreePosition labelPosition, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.ConstructorIXYDiagram">
            <summary>设置 CrosshairManager.CrosshairManager(IXYDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CreateCrossLineDictionaryOfPointProjectionOnAxisGRealPoint2DGRealRect2DPointProjectionOnAxis">
            <summary>设置 CrosshairManager.CreateCrossLine(Dictionary`2&lt;PointProjectionOnAxis,GRealPoint2D&gt; screenCoords, GRealRect2D mappingBounds, PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CreateCrossLineDoubleDoubleDoubleDoubleBoolean">
            <summary>设置 CrosshairManager.CreateCrossLine(Double startX, Double startY, Double endX, Double endY, Boolean isValueLine) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CreateCrosshairLabelsGRealRect2DIPaneICrosshairOptionsCrosshairInfoEx">
            <summary>设置 CrosshairManager.CreateCrosshairLabels(GRealRect2D labelsConstraint, IPane focusedPane, ICrosshairOptions options, CrosshairInfoEx crosshairInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CreateCrosshairPaneInfosGRealPoint2DIPaneIXYDiagram">
            <summary>设置 CrosshairManager.CreateCrosshairPaneInfos(GRealPoint2D crosshairLocation, IPane focusedPane, IXYDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CreateCrosshairSeriesPointIXYSeriesViewDoubleDoubleCrosshairPaneInfoExIRefinedSeriesISideBySidePointPointPositionInSeriesInt32">
            <summary>设置 CrosshairManager.CreateCrosshairSeriesPoint(IXYSeriesView seriesView, Double pointArgument, Double pointValue, CrosshairPaneInfoEx crosshairPaneInfo, IRefinedSeries refinedSeries, ISideBySidePoint nearestPointInfo, PointPositionInSeries pointPosition, Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.CrosshairOptionsGet">
            <summary>设置 CrosshairManager.get_CrosshairOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.FindCrosshairPointIRefinedSeriesCrosshairSeriesDataCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.FindCrosshairPoint(IRefinedSeries refinedSeries, CrosshairSeriesData crosshairSeriesData, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.FindDifferentPointsListOfIAxisDataCrosshairPaneInfoExListOfCrosshairSeriesPointEx">
            <summary>设置 CrosshairManager.FindDifferentPoints(List`1&lt;IAxisData&gt; qualitativeAxes, CrosshairPaneInfoEx crosshairPaneInfo, List`1&lt;CrosshairSeriesPointEx&gt; crosshairSeriesPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetAxisValueForCursorSnapAxesPointProjectionsForPaneIPaneBoolean">
            <summary>设置 CrosshairManager.GetAxisValueForCursorSnapAxes(PointProjectionsForPane crosshairCoords, IPane pane, Boolean snapToArguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetAxisValuePairICrosshairOptionsCrosshairSeriesPointEx">
            <summary>设置 CrosshairManager.GetAxisValuePair(ICrosshairOptions options, CrosshairSeriesPointEx point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetConnectedPointsCrosshairSeriesPointExCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.GetConnectedPoints(CrosshairSeriesPointEx point, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetCrosshairDataIRefinedSeries">
            <summary>设置 CrosshairManager.GetCrosshairData(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetCrosshairPointsIRefinedSeriesCrosshairSeriesDataCrosshairPaneInfoEx">
            <summary>设置 CrosshairManager.GetCrosshairPoints(IRefinedSeries refinedSeries, CrosshairSeriesData crosshairSeriesData, CrosshairPaneInfoEx crosshairPaneInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetCrosshairSortedDataIRefinedSeries">
            <summary>设置 CrosshairManager.GetCrosshairSortedData(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.GetPaneAxesContainerIPane">
            <summary>设置 CrosshairManager.GetPaneAxesContainer(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.IsAxisLabelVisiblePointProjectionOnAxis">
            <summary>设置 CrosshairManager.IsAxisLabelVisible(PointProjectionOnAxis axisValuePair) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.IsHorizontalCrosshairGet">
            <summary>设置 CrosshairManager.get_IsHorizontalCrosshair() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.IsPointInCrosshairRangeCrosshairSeriesPointExCrosshairPaneInfoExISeriesView">
            <summary>设置 CrosshairManager.IsPointInCrosshairRange(CrosshairSeriesPointEx point, CrosshairPaneInfoEx crosshairPaneInfo, ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.LabelPositionGet">
            <summary>设置 CrosshairManager.get_LabelPosition() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.SnapToArgumentGet">
            <summary>设置 CrosshairManager.get_SnapToArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairManager.UpdateCrosshairDataIListOfRefinedSeries">
            <summary>设置 CrosshairManager.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairPaneInfoEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.#ctor(DevExpress.Charts.Native.CrosshairPaneInfoEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddAxisLabelCrosshairAxisInfo">
            <summary>设置 CrosshairPaneInfoEx.AddAxisLabel(CrosshairAxisInfo crosshairAxisInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddAxisLabelPointProjectionOnAxisGRealPoint2DGRealSize2D">
            <summary>设置 CrosshairPaneInfoEx.AddAxisLabel(PointProjectionOnAxis axisValue, GRealPoint2D anchorPoint, GRealSize2D maxSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddCrossLineCrosshairLine">
            <summary>设置 CrosshairPaneInfoEx.AddCrossLine(CrosshairLine line) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddCrosshairLabelCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairLabel(CrosshairSeriesPointEx seriesPoint, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddCrosshairLabelListOfCrosshairSeriesPointExGRealPoint2DAnnotationLocationBooleanGRealPoint2DICrosshairOptions">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairLabel(List`1&lt;CrosshairSeriesPointEx&gt; seriesPoints, GRealPoint2D anchorPoint, AnnotationLocation defaultLocation, Boolean showTail, GRealPoint2D initOffset, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddCrosshairSeriesTextCrosshairSeriesPointExCrosshairPointsGroupICrosshairOptionsBoolean">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairSeriesText(CrosshairSeriesPointEx targetPoint, CrosshairPointsGroup targetGroup, ICrosshairOptions options, Boolean isInGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddSeriesPointCrosshairSeriesPointEx">
            <summary>设置 CrosshairPaneInfoEx.AddSeriesPoint(CrosshairSeriesPointEx seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AddValuePointProjectionOnAxis">
            <summary>设置 CrosshairPaneInfoEx.AddValue(PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllAxesValuesGet">
            <summary>设置 CrosshairPaneInfoEx.get_AllAxesValues() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddAxisLabelCrosshairAxisInfo">
            <summary>设置 CrosshairPaneInfoEx.AddAxisLabel(CrosshairAxisInfo crosshairAxisInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddAxisLabelPointProjectionOnAxisGRealPoint2DGRealSize2D">
            <summary>设置 CrosshairPaneInfoEx.AddAxisLabel(PointProjectionOnAxis axisValue, GRealPoint2D anchorPoint, GRealSize2D maxSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddCrossLineCrosshairLine">
            <summary>设置 CrosshairPaneInfoEx.AddCrossLine(CrosshairLine line) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddCrosshairLabelCrosshairSeriesPointExICrosshairOptions">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairLabel(CrosshairSeriesPointEx seriesPoint, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddCrosshairLabelListOfCrosshairSeriesPointExGRealPoint2DAnnotationLocationBooleanGRealPoint2DICrosshairOptions">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairLabel(List`1&lt;CrosshairSeriesPointEx&gt; seriesPoints, GRealPoint2D anchorPoint, AnnotationLocation defaultLocation, Boolean showTail, GRealPoint2D initOffset, ICrosshairOptions crosshairOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddCrosshairSeriesTextCrosshairSeriesPointExCrosshairPointsGroupICrosshairOptionsBoolean">
            <summary>设置 CrosshairPaneInfoEx.AddCrosshairSeriesText(CrosshairSeriesPointEx targetPoint, CrosshairPointsGroup targetGroup, ICrosshairOptions options, Boolean isInGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddSeriesPointCrosshairSeriesPointEx">
            <summary>设置 CrosshairPaneInfoEx.AddSeriesPoint(CrosshairSeriesPointEx seriesPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AddValuePointProjectionOnAxis">
            <summary>设置 CrosshairPaneInfoEx.AddValue(PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AllAxesValuesGet">
            <summary>设置 CrosshairPaneInfoEx.get_AllAxesValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.AxesInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_AxesInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CompleteLabelsLayout">
            <summary>设置 CrosshairPaneInfoEx.CompleteLabelsLayout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CrossLinesGet">
            <summary>设置 CrosshairPaneInfoEx.get_CrossLines() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CursorAxesInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorAxesInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CursorCoordsGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorCoords() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CursorCrossLineGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorCrossLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CursorCrossLineSetCrosshairLine">
            <summary>设置 CrosshairPaneInfoEx.set_CursorCrossLine(CrosshairLine value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.CursorLocationGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorLocation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.LabelsConstraintGet">
            <summary>设置 CrosshairPaneInfoEx.get_LabelsConstraint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.LabelsConstraintSetGRealRect2D">
            <summary>设置 CrosshairPaneInfoEx.set_LabelsConstraint(GRealRect2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.LabelsInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_LabelsInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.MappingBoundsGet">
            <summary>设置 CrosshairPaneInfoEx.get_MappingBounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.PaneGet">
            <summary>设置 CrosshairPaneInfoEx.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.PointBelongsToGroupRefinedPointCrosshairPointsGroupBoolean">
            <summary>设置 CrosshairPaneInfoEx.PointBelongsToGroup(RefinedPoint refinedPoint, CrosshairPointsGroup group, Boolean snapsToArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AllInstances.SeriesPointsGet">
            <summary>设置 CrosshairPaneInfoEx.get_SeriesPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.AxesInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_AxesInfo() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CompleteLabelsLayout">
            <summary>设置 CrosshairPaneInfoEx.CompleteLabelsLayout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.ConstructAxisTextPointProjectionOnAxis">
            <summary>设置 CrosshairPaneInfoEx.ConstructAxisText(PointProjectionOnAxis axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.ConstructGroupHeaderTextRefinedPointIRefinedSeriesICrosshairOptions">
            <summary>设置 CrosshairPaneInfoEx.ConstructGroupHeaderText(RefinedPoint refinedPoint, IRefinedSeries refinedSeries, ICrosshairOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.ConstructSeriesTextRefinedPointIRefinedSeriesIXYSeriesViewICrosshairOptionsBoolean">
            <summary>设置 CrosshairPaneInfoEx.ConstructSeriesText(RefinedPoint refinedPoint, IRefinedSeries refinedSeries, IXYSeriesView view, ICrosshairOptions options, Boolean isInGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.ConstructorIPaneGRealRect2DGRealPoint2DPointProjectionsForPane">
            <summary>设置 CrosshairPaneInfoEx.CrosshairPaneInfoEx(IPane pane, GRealRect2D mappingBounds, GRealPoint2D cursorLocation, PointProjectionsForPane cursorCoords) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CrossLinesGet">
            <summary>设置 CrosshairPaneInfoEx.get_CrossLines() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CursorAxesInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorAxesInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CursorCoordsGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorCoords() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CursorCrossLineGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorCrossLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CursorCrossLineSetCrosshairLine">
            <summary>设置 CrosshairPaneInfoEx.set_CursorCrossLine(CrosshairLine value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.CursorLocationGet">
            <summary>设置 CrosshairPaneInfoEx.get_CursorLocation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualAxisPatternIAxisDataINumericOptionsIDateTimeOptions">
            <summary>设置 CrosshairPaneInfoEx.GetActualAxisPattern(IAxisData axis, INumericOptions numericOptions, IDateTimeOptions dateTimeOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualAxisPatternIAxisDataString">
            <summary>设置 CrosshairPaneInfoEx.GetActualAxisPattern(IAxisData axis, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualGroupHeaderPatternICrosshairOptionsToolTipPointDataToStringConverter">
            <summary>设置 CrosshairPaneInfoEx.GetActualGroupHeaderPattern(ICrosshairOptions options, ToolTipPointDataToStringConverter converter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualPatternForGroupedElementsIXYSeriesViewICrosshairOptionsBoolean">
            <summary>设置 CrosshairPaneInfoEx.GetActualPatternForGroupedElements(IXYSeriesView view, ICrosshairOptions options, Boolean isInGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualPatternIXYSeriesView">
            <summary>设置 CrosshairPaneInfoEx.GetActualPattern(IXYSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.GetActualPatternStringToolTipPointDataToStringConverter">
            <summary>设置 CrosshairPaneInfoEx.GetActualPattern(String crosshairLabelPattern, ToolTipPointDataToStringConverter converter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.LabelsConstraintGet">
            <summary>设置 CrosshairPaneInfoEx.get_LabelsConstraint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.LabelsConstraintSetGRealRect2D">
            <summary>设置 CrosshairPaneInfoEx.set_LabelsConstraint(GRealRect2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.LabelsInfoGet">
            <summary>设置 CrosshairPaneInfoEx.get_LabelsInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.MappingBoundsGet">
            <summary>设置 CrosshairPaneInfoEx.get_MappingBounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.PaneGet">
            <summary>设置 CrosshairPaneInfoEx.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.PointBelongsToGroupRefinedPointCrosshairPointsGroupBoolean">
            <summary>设置 CrosshairPaneInfoEx.PointBelongsToGroup(RefinedPoint refinedPoint, CrosshairPointsGroup group, Boolean snapsToArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPaneInfoEx.SeriesPointsGet">
            <summary>设置 CrosshairPaneInfoEx.get_SeriesPoints() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils">
            <summary>DevExpress.Charts.Native.CrosshairPatternUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.#ctor(DevExpress.Charts.Native.CrosshairPatternUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.Constructor">
            <summary>设置 CrosshairPatternUtils.CrosshairPatternUtils() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPatternUtils.FormatObjectString">
            <summary>设置 CrosshairPatternUtils.Format(Object value, String format) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup">
            <summary>DevExpress.Charts.Native.CrosshairPointsGroup 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.#ctor(DevExpress.Charts.Native.CrosshairPointsGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances.AnchorValueGet">
            <summary>设置 CrosshairPointsGroup.get_AnchorValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances.HeaderTextGet">
            <summary>设置 CrosshairPointsGroup.get_HeaderText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances.HeaderTextSetString">
            <summary>设置 CrosshairPointsGroup.set_HeaderText(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances.SeriesPointsGet">
            <summary>设置 CrosshairPointsGroup.get_SeriesPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AllInstances.SeriesTextsGet">
            <summary>设置 CrosshairPointsGroup.get_SeriesTexts() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.AnchorValueGet">
            <summary>设置 CrosshairPointsGroup.get_AnchorValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.ConstructorCrosshairSeriesPointExBoolean">
            <summary>设置 CrosshairPointsGroup.CrosshairPointsGroup(CrosshairSeriesPointEx anchorPoint, Boolean snapsToArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.HeaderTextGet">
            <summary>设置 CrosshairPointsGroup.get_HeaderText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.HeaderTextSetString">
            <summary>设置 CrosshairPointsGroup.set_HeaderText(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.SeriesPointsGet">
            <summary>设置 CrosshairPointsGroup.get_SeriesPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairPointsGroup.SeriesTextsGet">
            <summary>设置 CrosshairPointsGroup.get_SeriesTexts() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData">
            <summary>DevExpress.Charts.Native.CrosshairSeriesData 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.#ctor(DevExpress.Charts.Native.CrosshairSeriesData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.CalculatePointPositionInSeriesInt32">
            <summary>设置 CrosshairSeriesData.CalculatePointPositionInSeries(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.CheckPointsWithSameValueInt32DoubleDoubleOut">
            <summary>设置 CrosshairSeriesData.CheckPointsWithSameValue(Int32 crosshairValueItemIndex, Double cursorPoint, Double&amp; nearestValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.CorrectCrosshairPointIndexInt32DoubleDouble">
            <summary>设置 CrosshairSeriesData.CorrectCrosshairPointIndex(Int32 pointIndex, Double delta1, Double delta2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.CrosshairSortedDataGet">
            <summary>设置 CrosshairSeriesData.get_CrosshairSortedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.FillCrosshairSortedData">
            <summary>设置 CrosshairSeriesData.FillCrosshairSortedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.GetCrosshairPointDoubleDoubleDoubleOutDoubleOutPointPositionInSeriesOutInt32Out">
            <summary>设置 CrosshairSeriesData.GetCrosshairPoint(Double argument, Double value, Double&amp; pointArgument, Double&amp; pointValue, PointPositionInSeries&amp; position, Int32&amp; pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.GetMinArgumentDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinArgumentDistance(Double argument, Int32 crosshairValueItemIndex, Double&amp; pointArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.GetMinDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinDistance(Double cursorPoint, Int32 crosshairValueItemIndex, Double&amp; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.GetMinValueDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinValueDistance(Double value, Int32 crosshairValueItemIndex, Double&amp; pointValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.GetPointWithSameCrosshairValueDoubleDoubleDoubleOutDoubleOut">
            <summary>设置 CrosshairSeriesData.GetPointWithSameCrosshairValue(Double argument, Double value, Double&amp; pointArgument, Double&amp; pointValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.IsValueInScaleBreakIEnumerableOfIScaleBreakDouble">
            <summary>设置 CrosshairSeriesData.IsValueInScaleBreak(IEnumerable`1&lt;IScaleBreak&gt; scaleBreaks, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.PointsInfoGet">
            <summary>设置 CrosshairSeriesData.get_PointsInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.SeriesGet">
            <summary>设置 CrosshairSeriesData.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.ShowCrosshairGet">
            <summary>设置 CrosshairSeriesData.get_ShowCrosshair() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.AllInstances.SnapToArgumentGet">
            <summary>设置 CrosshairSeriesData.get_SnapToArgument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.CalculatePointPositionInSeriesInt32">
            <summary>设置 CrosshairSeriesData.CalculatePointPositionInSeries(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.CheckPointsWithSameValueInt32DoubleDoubleOut">
            <summary>设置 CrosshairSeriesData.CheckPointsWithSameValue(Int32 crosshairValueItemIndex, Double cursorPoint, Double&amp; nearestValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.ConstructorIXYDiagramIRefinedSeriesIListOfRefinedPoint">
            <summary>设置 CrosshairSeriesData.CrosshairSeriesData(IXYDiagram diagram, IRefinedSeries series, IList`1&lt;RefinedPoint&gt; pointsInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.CorrectCrosshairPointIndexInt32DoubleDouble">
            <summary>设置 CrosshairSeriesData.CorrectCrosshairPointIndex(Int32 pointIndex, Double delta1, Double delta2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.CrosshairSortedDataGet">
            <summary>设置 CrosshairSeriesData.get_CrosshairSortedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.FillCrosshairSortedData">
            <summary>设置 CrosshairSeriesData.FillCrosshairSortedData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.GetMinArgumentDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinArgumentDistance(Double argument, Int32 crosshairValueItemIndex, Double&amp; pointArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.GetMinDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinDistance(Double cursorPoint, Int32 crosshairValueItemIndex, Double&amp; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.GetMinValueDistanceDoubleInt32DoubleOut">
            <summary>设置 CrosshairSeriesData.GetMinValueDistance(Double value, Int32 crosshairValueItemIndex, Double&amp; pointValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.GetPointWithSameCrosshairValueDoubleDoubleDoubleOutDoubleOut">
            <summary>设置 CrosshairSeriesData.GetPointWithSameCrosshairValue(Double argument, Double value, Double&amp; pointArgument, Double&amp; pointValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.IsValueInScaleBreakIEnumerableOfIScaleBreakDouble">
            <summary>设置 CrosshairSeriesData.IsValueInScaleBreak(IEnumerable`1&lt;IScaleBreak&gt; scaleBreaks, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.PointsInfoGet">
            <summary>设置 CrosshairSeriesData.get_PointsInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.SeriesGet">
            <summary>设置 CrosshairSeriesData.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.ShowCrosshairGet">
            <summary>设置 CrosshairSeriesData.get_ShowCrosshair() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.SnapToArgumentGet">
            <summary>设置 CrosshairSeriesData.get_SnapToArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesData.StaticConstructor">
            <summary>设置 CrosshairSeriesData.CrosshairSeriesData() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx">
            <summary>DevExpress.Charts.Native.CrosshairSeriesPointEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.#ctor(DevExpress.Charts.Native.CrosshairSeriesPointEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.AnchorPointGet">
            <summary>设置 CrosshairSeriesPointEx.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.AxisXProjectionGet">
            <summary>设置 CrosshairSeriesPointEx.get_AxisXProjection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.AxisYProjectionGet">
            <summary>设置 CrosshairSeriesPointEx.get_AxisYProjection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairAxisInfoGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairAxisInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairAxisInfoSetCrosshairAxisInfo">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairAxisInfo(CrosshairAxisInfo value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairLineGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairLineSetCrosshairLine">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairLine(CrosshairLine value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairSeriesTextGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairSeriesText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.CrosshairSeriesTextSetCrosshairSeriesTextEx">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairSeriesText(CrosshairSeriesTextEx value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.PointIndexGet">
            <summary>设置 CrosshairSeriesPointEx.get_PointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.PositionGet">
            <summary>设置 CrosshairSeriesPointEx.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.RefinedPointGet">
            <summary>设置 CrosshairSeriesPointEx.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.RefinedSeriesGet">
            <summary>设置 CrosshairSeriesPointEx.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AllInstances.ViewGet">
            <summary>设置 CrosshairSeriesPointEx.get_View() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AnchorPointGet">
            <summary>设置 CrosshairSeriesPointEx.get_AnchorPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AxisXProjectionGet">
            <summary>设置 CrosshairSeriesPointEx.get_AxisXProjection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.AxisYProjectionGet">
            <summary>设置 CrosshairSeriesPointEx.get_AxisYProjection() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.ConstructorPointProjectionOnAxisPointProjectionOnAxisGRealPoint2DRefinedPointIRefinedSeries">
            <summary>设置 CrosshairSeriesPointEx.CrosshairSeriesPointEx(PointProjectionOnAxis argument, PointProjectionOnAxis value, GRealPoint2D anchorPoint, RefinedPoint refinedPoint, IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.ConstructorPointProjectionOnAxisPointProjectionOnAxisGRealPoint2DRefinedPointIRefinedSeriesPointPositionInSeriesInt32">
            <summary>设置 CrosshairSeriesPointEx.CrosshairSeriesPointEx(PointProjectionOnAxis argument, PointProjectionOnAxis value, GRealPoint2D anchorPoint, RefinedPoint refinedPoint, IRefinedSeries refinedSeries, PointPositionInSeries position, Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairAxisInfoGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairAxisInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairAxisInfoSetCrosshairAxisInfo">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairAxisInfo(CrosshairAxisInfo value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairLineGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairLine() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairLineSetCrosshairLine">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairLine(CrosshairLine value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairSeriesTextGet">
            <summary>设置 CrosshairSeriesPointEx.get_CrosshairSeriesText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.CrosshairSeriesTextSetCrosshairSeriesTextEx">
            <summary>设置 CrosshairSeriesPointEx.set_CrosshairSeriesText(CrosshairSeriesTextEx value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.PointIndexGet">
            <summary>设置 CrosshairSeriesPointEx.get_PointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.PositionGet">
            <summary>设置 CrosshairSeriesPointEx.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.RefinedPointGet">
            <summary>设置 CrosshairSeriesPointEx.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.RefinedSeriesGet">
            <summary>设置 CrosshairSeriesPointEx.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesPointEx.ViewGet">
            <summary>设置 CrosshairSeriesPointEx.get_View() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx">
            <summary>DevExpress.Charts.Native.CrosshairSeriesTextEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.#ctor(DevExpress.Charts.Native.CrosshairSeriesTextEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.AllInstances.RefinedPointGet">
            <summary>设置 CrosshairSeriesTextEx.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.AllInstances.RefinedSeriesGet">
            <summary>设置 CrosshairSeriesTextEx.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.AllInstances.TextGet">
            <summary>设置 CrosshairSeriesTextEx.get_Text() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.ConstructorStringRefinedPointIRefinedSeries">
            <summary>设置 CrosshairSeriesTextEx.CrosshairSeriesTextEx(String text, RefinedPoint refinedPoint, IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.RefinedPointGet">
            <summary>设置 CrosshairSeriesTextEx.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.RefinedSeriesGet">
            <summary>设置 CrosshairSeriesTextEx.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSeriesTextEx.TextGet">
            <summary>设置 CrosshairSeriesTextEx.get_Text() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer">
            <summary>DevExpress.Charts.Native.CrosshairSortedPointsInfoComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.#ctor(DevExpress.Charts.Native.CrosshairSortedPointsInfoComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.AllInstances.CompareCrosshairValueItemCrosshairValueItem">
            <summary>设置 CrosshairSortedPointsInfoComparer.Compare(CrosshairValueItem item1, CrosshairValueItem item2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.CrosshairValueItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.CompareCrosshairValueItemCrosshairValueItem">
            <summary>设置 CrosshairSortedPointsInfoComparer.Compare(CrosshairValueItem item1, CrosshairValueItem item2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairSortedPointsInfoComparer.Constructor">
            <summary>设置 CrosshairSortedPointsInfoComparer.CrosshairSortedPointsInfoComparer() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem">
            <summary>DevExpress.Charts.Native.CrosshairValueItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCrosshairValueItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper">
            <summary>DevExpress.Charts.Native.CustomAxisElementsHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.IsAxisValueContainerVisibleIAxisValueContainer">
            <summary>设置 CustomAxisElementsHelper.IsAxisValueContainerVisible(IAxisValueContainer container) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.IsAxisValueVisibleIAxisDataObject">
            <summary>设置 CustomAxisElementsHelper.IsAxisValueVisible(IAxisData axis, Object axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.IsConstantLineVisibleIConstantLine">
            <summary>设置 CustomAxisElementsHelper.IsConstantLineVisible(IConstantLine constantLine) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.IsCustomLabelVisibleICustomAxisLabel">
            <summary>设置 CustomAxisElementsHelper.IsCustomLabelVisible(ICustomAxisLabel label) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelper.IsStripVisibleIScaleMapIStrip">
            <summary>设置 CustomAxisElementsHelper.IsStripVisible(IScaleMap map, IStrip strip) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew">
            <summary>DevExpress.Charts.Native.CustomAxisElementsHelperNew 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.CalcStripGridValueIStripIMinMaxValues">
            <summary>设置 CustomAxisElementsHelperNew.CalcStripGridValue(IStrip strip, IMinMaxValues limits) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.FillCustomTextDataIAxisElementContainerIAxisGridMappingIMinMaxValuesAxisGridDataExAxisTextDataEx">
            <summary>设置 CustomAxisElementsHelperNew.FillCustomTextData(IAxisElementContainer axis, IAxisGridMapping map, IMinMaxValues limits, AxisGridDataEx gridData, AxisTextDataEx textData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.IsAxisValueVisibleIAxisDataObject">
            <summary>设置 CustomAxisElementsHelperNew.IsAxisValueVisible(IAxisData axis, Object axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.IsStripVisibleIAxisGridMappingIStrip">
            <summary>设置 CustomAxisElementsHelperNew.IsStripVisible(IAxisGridMapping map, IStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.IsStripVisibleInGridIMinMaxValuesIAxisGridMappingIStrip">
            <summary>设置 CustomAxisElementsHelperNew.IsStripVisibleInGrid(IMinMaxValues limits, IAxisGridMapping map, IStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomAxisElementsHelperNew.NormalizeStripValueIMinMaxValuesDouble">
            <summary>设置 CustomAxisElementsHelperNew.NormalizeStripValue(IMinMaxValues limits, Double val) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomDate">
            <summary>DevExpress.Charts.Native.CustomDate 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomDate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection">
            <summary>DevExpress.Charts.Native.CustomDateCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.#ctor(DevExpress.Charts.Native.CustomDateCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.AllInstances.Clear">
            <summary>设置 CustomDateCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.AllInstances.DatesGet">
            <summary>设置 CustomDateCollection.get_Dates() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.AllInstances.ResetDateDateTime">
            <summary>设置 CustomDateCollection.ResetDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.AllInstances.SetDateDateTimeBoolean">
            <summary>设置 CustomDateCollection.SetDate(DateTime date, Boolean isHoliday) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.Clear">
            <summary>设置 CustomDateCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.Constructor">
            <summary>设置 CustomDateCollection.CustomDateCollection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.DatesGet">
            <summary>设置 CustomDateCollection.get_Dates() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.ResetDateDateTime">
            <summary>设置 CustomDateCollection.ResetDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimCustomDateCollection.SetDateDateTimeBoolean">
            <summary>设置 CustomDateCollection.SetDate(DateTime date, Boolean isHoliday) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate">
            <summary>DevExpress.Charts.Native.DataAggregationUpdate 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.#ctor(DevExpress.Charts.Native.DataAggregationUpdate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.AllInstances.SenderGet">
            <summary>设置 DataAggregationUpdate.get_Sender() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.ConstructorIAxisData">
            <summary>设置 DataAggregationUpdate.DataAggregationUpdate(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataAggregationUpdate.SenderGet">
            <summary>设置 DataAggregationUpdate.get_Sender() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper">
            <summary>DevExpress.Charts.Native.DataItemsHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ConvertToActualScaleTypeScale">
            <summary>设置 DataItemsHelper.ConvertToActualScaleType(Scale scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ConvertToDateTimeObject">
            <summary>设置 DataItemsHelper.ConvertToDateTime(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ConvertToDoubleObject">
            <summary>设置 DataItemsHelper.ConvertToDouble(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ConvertToScaleTypeActualScaleType">
            <summary>设置 DataItemsHelper.ConvertToScaleType(ActualScaleType scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.GetScaleTypeByTypeType">
            <summary>设置 DataItemsHelper.GetScaleTypeByType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.GetTypeByScaleTypeActualScaleType">
            <summary>设置 DataItemsHelper.GetTypeByScaleType(ActualScaleType scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.IsNumericalTypeType">
            <summary>设置 DataItemsHelper.IsNumericalType(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ParseDateTimeObject">
            <summary>设置 DataItemsHelper.ParseDateTime(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ParseNumericalObject">
            <summary>设置 DataItemsHelper.ParseNumerical(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ParseValueObjectDoubleOutDateTimeOutStringOut">
            <summary>设置 DataItemsHelper.ParseValue(Object value, Double&amp; numericalValue, DateTime&amp; dateTimeValue, String&amp; qualitativeValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDataItemsHelper.ParseValueStringDoubleOutDateTimeOut">
            <summary>设置 DataItemsHelper.ParseValue(String value, Double&amp; numericalValue, DateTime&amp; dateTimeValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts">
            <summary>DevExpress.Charts.Native.DateTimeFormatParts 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeFormatParts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore">
            <summary>DevExpress.Charts.Native.DateTimeMeasureUnitsCalculatorCore 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.#ctor(DevExpress.Charts.Native.DateTimeMeasureUnitsCalculatorCore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.CalculateGridAlignmentDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CalculateGridAlignment(Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.CreateUnitSelector">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CreateUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.DateTimeScaleOptionsGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_DateTimeScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.ScaleOptionsGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_ScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.UpdateAutomaticGridDateTimeMeasureUnitNativeDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGrid(DateTimeMeasureUnitNative measureUnit, Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.UpdateAutomaticUnitsDateTimeMeasureUnitNativeInt32">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, Int32 pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.AllInstances.UseMinMeasureUnitGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.CalculateGridAlignmentDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CalculateGridAlignment(Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.ConstructorIAxisDataDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.DateTimeMeasureUnitsCalculatorCore(IAxisData axis, Double labelLength) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.CreateUnitSelector">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CreateUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.DateTimeScaleOptionsGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_DateTimeScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.ScaleOptionsGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_ScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGridDateTimeMeasureUnitNativeDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGrid(DateTimeMeasureUnitNative measureUnit, Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnitsDateTimeMeasureUnitNativeInt32">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, Int32 pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeMeasureUnitsCalculatorCore.UseMinMeasureUnitGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper">
            <summary>DevExpress.Charts.Native.DateTimeOptionsHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.GetFormatStringIDateTimeOptions">
            <summary>设置 DateTimeOptionsHelper.GetFormatString(IDateTimeOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeOptionsHelper.GetValueTextDateTimeIDateTimeOptions">
            <summary>设置 DateTimeOptionsHelper.GetValueText(DateTime dateTime, IDateTimeOptions options) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector">
            <summary>DevExpress.Charts.Native.DateTimeUnitSelector 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.#ctor(DevExpress.Charts.Native.DateTimeUnitSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.AllInstances.FilterActiveAlignmentUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.FilterActiveAlignmentUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.AllInstances.FilterActiveMeasureUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.FilterActiveMeasureUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.AllInstances.UpdateActiveUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.UpdateActiveUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.Constructor">
            <summary>设置 DateTimeUnitSelector.DateTimeUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.DefaultGridAlignmentGet">
            <summary>设置 DateTimeUnitSelector.get_DefaultGridAlignment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.DefaultMeasureUnitGet">
            <summary>设置 DateTimeUnitSelector.get_DefaultMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.FilterActiveAlignmentUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.FilterActiveAlignmentUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.FilterActiveMeasureUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.FilterActiveMeasureUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.GetMeasureUnitValueDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUnitSelector.GetMeasureUnitValue(DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUnitSelector.UpdateActiveUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.UpdateActiveUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils">
            <summary>DevExpress.Charts.Native.DateTimeUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.AddDateTimeDateTimeMeasureUnitNativeBoolean">
            <summary>设置 DateTimeUtils.Add(DateTime dateTime, DateTimeMeasureUnitNative measureUnit, Boolean isNegative) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.AddRangeDateTimeMeasureUnitNativeDateTimeMeasureUnitNativeDateTimeDoubleIWorkdaysOptions">
            <summary>设置 DateTimeUtils.AddRange(DateTimeMeasureUnitNative measureUnit, DateTimeMeasureUnitNative gridAlignment, DateTime date, Double range, IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.AddUnitsDateTimeMeasureUnitNativeDateTimeDoubleDoubleIWorkdaysOptions">
            <summary>设置 DateTimeUtils.AddUnits(DateTimeMeasureUnitNative measureUnit, DateTime date, Double range, Double factor, IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.CalcHolidaysCountInWeekIWorkdaysOptions">
            <summary>设置 DateTimeUtils.CalcHolidaysCountInWeek(IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.CalcWeekAdditionIWorkdaysOptionsDateTimeDateTime">
            <summary>设置 DateTimeUtils.CalcWeekAddition(IWorkdaysOptions workdaysOptions, DateTime date, DateTime roundedToWeek) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.CorrectDifferenceBasedOnHolidaysIWorkdaysOptionsDateTimeDoubleInt32">
            <summary>设置 DateTimeUtils.CorrectDifferenceBasedOnHolidays(IWorkdaysOptions workdaysOptions, DateTime fromDate, Double value, Int32 multiplier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.CorrectRangeBasedOnHolidaysIWorkdaysOptionsDateTimeDoubleInt32">
            <summary>设置 DateTimeUtils.CorrectRangeBasedOnHolidays(IWorkdaysOptions workdaysOptions, DateTime date, Double range, Int32 multiplier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.DecreaseDateTimeDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtils.Decrease(DateTime dateTime, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.FloorDateTimeDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtils.Floor(DateTime dateTime, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.GetDifferenceDateTimeMeasureUnitNativeDateTimeMeasureUnitNativeDateTimeDateTimeIWorkdaysOptions">
            <summary>设置 DateTimeUtils.GetDifference(DateTimeMeasureUnitNative measureUnit, DateTimeMeasureUnitNative gridAlignment, DateTime fromDate, DateTime toDate, IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.GetPeriodDateTimeDateTimeDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtils.GetPeriod(DateTime from, DateTime to, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.IncreaseDateTimeDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtils.Increase(DateTime dateTime, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.IsHolidayIWorkdaysOptionsDateTimeBooleanBoolean">
            <summary>设置 DateTimeUtils.IsHoliday(IWorkdaysOptions workdaysOptions, DateTime dateTime, Boolean applyHolidays, Boolean applyExactWorkdays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.RoundDateTimeDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtils.Round(DateTime dateTime, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.SkipHolidayIWorkdaysOptionsDateTime">
            <summary>设置 DateTimeUtils.SkipHoliday(IWorkdaysOptions workdaysOptions, DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.SkipHolidayRevertedIWorkdaysOptionsDateTime">
            <summary>设置 DateTimeUtils.SkipHolidayReverted(IWorkdaysOptions workdaysOptions, DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtils.TotalUnitsDateTimeBooleanIWorkdaysOptionsInt32">
            <summary>设置 DateTimeUtils.TotalUnits(DateTime dateTime, Boolean workdaysOnly, IWorkdaysOptions workdaysOptions, Int32 majorUnit) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt">
            <summary>DevExpress.Charts.Native.DateTimeUtilsExt 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.AddDateTimeDateTimeMeasureUnitNativeDoubleDayOfWeek">
            <summary>设置 DateTimeUtilsExt.Add(DateTime dateTime, DateTimeMeasureUnitNative measureUnit, Double range, DayOfWeek firstDayOfWeek) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.AddMonthsDateTimeMeasureUnitNativeDateTimeDoubleDouble">
            <summary>设置 DateTimeUtilsExt.AddMonths(DateTimeMeasureUnitNative measureUnit, DateTime date, Double range, Double factor) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.CreateLongTimePatternWithMillisecond">
            <summary>设置 DateTimeUtilsExt.CreateLongTimePatternWithMillisecond() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.DifferenceDateTimeDateTimeDateTimeMeasureUnitNativeIWorkdaysOptions">
            <summary>设置 DateTimeUtilsExt.Difference(DateTime fromDate, DateTime toDate, DateTimeMeasureUnitNative measureUnit, IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.FloorDateTimeDateTimeMeasureUnitNativeDayOfWeek">
            <summary>设置 DateTimeUtilsExt.Floor(DateTime dateTime, DateTimeMeasureUnitNative measureUnit, DayOfWeek firstDayOfWeek) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetActualDayOfWeekDateTimeDayOfWeek">
            <summary>设置 DateTimeUtilsExt.GetActualDayOfWeek(DateTime dateTime, DayOfWeek firstDayOfWeek) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetDiffInMonthsDateTimeDateTime">
            <summary>设置 DateTimeUtilsExt.GetDiffInMonths(DateTime fromDate, DateTime toDate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetFirstDayOfWeekIWorkdaysOptions">
            <summary>设置 DateTimeUtilsExt.GetFirstDayOfWeek(IWorkdaysOptions workdaysOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetHolidaysCountDateTimeIWorkdaysOptions">
            <summary>设置 DateTimeUtilsExt.GetHolidaysCount(DateTime date, IWorkdaysOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetHolidaysCountDateTimeIWorkdaysOptionsDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtilsExt.GetHolidaysCount(DateTime date, IWorkdaysOptions options, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetHolidaysCountDateTimeWeekdayCore">
            <summary>设置 DateTimeUtilsExt.GetHolidaysCount(DateTime date, WeekdayCore holidays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetHolidaysCountInWeekDayOfWeekWeekdayCore">
            <summary>设置 DateTimeUtilsExt.GetHolidaysCountInWeek(DayOfWeek day, WeekdayCore holidays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetMondayDateTime">
            <summary>设置 DateTimeUtilsExt.GetMonday(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.GetNumberOfHolidaysInWeekWeekdayCore">
            <summary>设置 DateTimeUtilsExt.GetNumberOfHolidaysInWeek(WeekdayCore holidays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.InvertWeekdayCore">
            <summary>设置 DateTimeUtilsExt.Invert(WeekdayCore flags) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.IsHolidayDateTimeWeekdayCore">
            <summary>设置 DateTimeUtilsExt.IsHoliday(DateTime date, WeekdayCore workdays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.MaskDayDayOfWeekWeekdayCore">
            <summary>设置 DateTimeUtilsExt.MaskDay(DayOfWeek day, WeekdayCore flags) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.MaxDateTimeDateTime">
            <summary>设置 DateTimeUtilsExt.Max(DateTime a, DateTime b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.MinDateTimeGet">
            <summary>设置 DateTimeUtilsExt.get_MinDateTime() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.MondayBasedDayDayOfWeek">
            <summary>设置 DateTimeUtilsExt.MondayBasedDay(DayOfWeek day) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.RestoreCustomDaysDateTimeIEnumerableOfCustomDateWeekdayCore">
            <summary>设置 DateTimeUtilsExt.RestoreCustomDays(DateTime baseDate, IEnumerable`1&lt;CustomDate&gt; customDays, WeekdayCore workdays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.RestoreDayInt32WeekdayCore">
            <summary>设置 DateTimeUtilsExt.RestoreDay(Int32 day, WeekdayCore holidays) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.ReverseHolidaysDoubleIWorkdaysOptionsDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtilsExt.ReverseHolidays(Double value, IWorkdaysOptions options, DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.RoundDateTimeDateTimeMeasureUnitNativeDayOfWeek">
            <summary>设置 DateTimeUtilsExt.Round(DateTime dateTime, DateTimeMeasureUnitNative measureUnit, DayOfWeek firstDayOfWeek) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.SelectFormatDateTimeGridAlignmentNative">
            <summary>设置 DateTimeUtilsExt.SelectFormat(DateTimeGridAlignmentNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.SizeOfDayDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtilsExt.SizeOfDay(DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.SizeOfMeasureUnitDateTimeMeasureUnitNative">
            <summary>设置 DateTimeUtilsExt.SizeOfMeasureUnit(DateTimeMeasureUnitNative measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDateTimeUtilsExt.TotalFloorMonthsDateTime">
            <summary>设置 DateTimeUtilsExt.TotalFloorMonths(DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.DatetimeAxisRangeUpdateStrategy 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.DatetimeAxisRangeUpdateStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.DefaultRangeIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.GetMeasureUnitTimeSpan">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.GetMeasureUnitTimeSpan() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.IsDateGreaterThanMeasureUnitDateTimeTimeSpan">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.IsDateGreaterThanMeasureUnit(DateTime date, TimeSpan measureUnitTimeSpan) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.AllInstances.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.ConstructorIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeries">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.DatetimeAxisRangeUpdateStrategy(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.GetMeasureUnitTimeSpan">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.GetMeasureUnitTimeSpan() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.IsDateGreaterThanMeasureUnitDateTimeTimeSpan">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.IsDateGreaterThanMeasureUnit(DateTime date, TimeSpan measureUnitTimeSpan) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDatetimeAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator">
            <summary>DevExpress.Charts.Native.DetrendedPriceOscillatorCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.#ctor(DevExpress.Charts.Native.DetrendedPriceOscillatorCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 DetrendedPriceOscillatorCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.CalculatedGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 DetrendedPriceOscillatorCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.MaxYGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.MinYGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.AllInstances.MinYSetDouble">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 DetrendedPriceOscillatorCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.CalculatedGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.CalculatedSetBoolean">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.Constructor">
            <summary>设置 DetrendedPriceOscillatorCalculator.DetrendedPriceOscillatorCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 DetrendedPriceOscillatorCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.MaxYGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.MaxYSetDouble">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.MinYGet">
            <summary>设置 DetrendedPriceOscillatorCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimDetrendedPriceOscillatorCalculator.MinYSetDouble">
            <summary>设置 DetrendedPriceOscillatorCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer">
            <summary>DevExpress.Charts.Native.EmptyRangeUpdateEnqueuer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.#ctor(DevExpress.Charts.Native.EmptyRangeUpdateEnqueuer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.DevExpressChartsNativeIRangeUpdaterGetInternalValuesIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.DevExpress.Charts.Native.IRangeUpdater.GetInternalValues(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.DevExpressChartsNativeIRangeUpdaterUpdateRangesIAxisDataMinMaxValues">
            <summary>设置 EmptyRangeUpdateEnqueuer.DevExpress.Charts.Native.IRangeUpdater.UpdateRanges(IAxisData axis, MinMaxValues internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.GetInternalRangeIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetInternalRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.GetRefinedRangeIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetRefinedRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.GetRefinedSeriesIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetRefinedSeries(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.Update">
            <summary>设置 EmptyRangeUpdateEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.AllInstances.UpdateIAxisDataMinMaxValues">
            <summary>设置 EmptyRangeUpdateEnqueuer.Update(IAxisData axis, MinMaxValues minMaxInternalValues) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.Bind(DevExpress.Charts.Native.IRangeUpdater)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.ConstructorRefinedSeriesGroupControllerIListOfIAxisRangeDataVisualRangeUpdateMode">
            <summary>设置 EmptyRangeUpdateEnqueuer.EmptyRangeUpdateEnqueuer(RefinedSeriesGroupController groupController, IList`1&lt;IAxisRangeData&gt; rangesForReset, VisualRangeUpdateMode visualRangeUpdateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.DevExpressChartsNativeIRangeUpdaterGetInternalValuesIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.DevExpress.Charts.Native.IRangeUpdater.GetInternalValues(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.DevExpressChartsNativeIRangeUpdaterUpdateRangesIAxisDataMinMaxValues">
            <summary>设置 EmptyRangeUpdateEnqueuer.DevExpress.Charts.Native.IRangeUpdater.UpdateRanges(IAxisData axis, MinMaxValues internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.GetInternalRangeIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetInternalRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.GetRefinedRangeIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetRefinedRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.GetRefinedSeriesIAxisData">
            <summary>设置 EmptyRangeUpdateEnqueuer.GetRefinedSeries(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.Update">
            <summary>设置 EmptyRangeUpdateEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEmptyRangeUpdateEnqueuer.UpdateIAxisDataMinMaxValues">
            <summary>设置 EmptyRangeUpdateEnqueuer.Update(IAxisData axis, MinMaxValues minMaxInternalValues) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimEnumHelper">
            <summary>DevExpress.Charts.Native.EnumHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEnumHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEnumHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimEnumHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEnumHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimEnumHelper.GetValuesType">
            <summary>设置 EnumHelper.GetValues(Type enumType) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.ExponentialMovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.#ctor(DevExpress.Charts.Native.ExponentialMovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.AllInstances.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 ExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 ExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialMovingAverageCalculator.Constructor">
            <summary>设置 ExponentialMovingAverageCalculator.ExponentialMovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator">
            <summary>DevExpress.Charts.Native.ExponentialRegressionCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.#ctor(DevExpress.Charts.Native.ExponentialRegressionCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.AllInstances.CalculateIRefinedSeriesValueLevelInternal">
            <summary>设置 ExponentialRegressionCalculator.Calculate(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.CalculateIRefinedSeriesValueLevelInternal">
            <summary>设置 ExponentialRegressionCalculator.Calculate(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimExponentialRegressionCalculator.Constructor">
            <summary>设置 ExponentialRegressionCalculator.ExponentialRegressionCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator">
            <summary>DevExpress.Charts.Native.FibonacciArcsCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.#ctor(DevExpress.Charts.Native.FibonacciArcsCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.AllInstances.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalIListOfDouble">
            <summary>设置 FibonacciArcsCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalIListOfDouble">
            <summary>设置 FibonacciArcsCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciArcsCalculator.Constructor">
            <summary>设置 FibonacciArcsCalculator.FibonacciArcsCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle">
            <summary>DevExpress.Charts.Native.FibonacciCircle 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.#ctor(DevExpress.Charts.Native.FibonacciCircle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.CenterGet">
            <summary>设置 FibonacciCircle.get_Center() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.CenterSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_Center(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.LevelGet">
            <summary>设置 FibonacciCircle.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.LevelSetDouble">
            <summary>设置 FibonacciCircle.set_Level(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.PointInCircleGet">
            <summary>设置 FibonacciCircle.get_PointInCircle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.PointInCircleSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_PointInCircle(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenCenterGet">
            <summary>设置 FibonacciCircle.get_ScreenCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenCenterSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_ScreenCenter(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenPointInCircleGet">
            <summary>设置 FibonacciCircle.get_ScreenPointInCircle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenPointInCircleSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_ScreenPointInCircle(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenRadiusGet">
            <summary>设置 FibonacciCircle.get_ScreenRadius() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.AllInstances.ScreenRadiusSetDouble">
            <summary>设置 FibonacciCircle.set_ScreenRadius(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.CenterGet">
            <summary>设置 FibonacciCircle.get_Center() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.CenterSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_Center(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ConstructorGRealPoint2DGRealPoint2DDouble">
            <summary>设置 FibonacciCircle.FibonacciCircle(GRealPoint2D center, GRealPoint2D pointInCircle, Double level) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.LevelGet">
            <summary>设置 FibonacciCircle.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.LevelSetDouble">
            <summary>设置 FibonacciCircle.set_Level(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.PointInCircleGet">
            <summary>设置 FibonacciCircle.get_PointInCircle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.PointInCircleSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_PointInCircle(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenCenterGet">
            <summary>设置 FibonacciCircle.get_ScreenCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenCenterSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_ScreenCenter(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenPointInCircleGet">
            <summary>设置 FibonacciCircle.get_ScreenPointInCircle() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenPointInCircleSetGRealPoint2D">
            <summary>设置 FibonacciCircle.set_ScreenPointInCircle(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenRadiusGet">
            <summary>设置 FibonacciCircle.get_ScreenRadius() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciCircle.ScreenRadiusSetDouble">
            <summary>设置 FibonacciCircle.set_ScreenRadius(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator">
            <summary>DevExpress.Charts.Native.FibonacciFansCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.#ctor(DevExpress.Charts.Native.FibonacciFansCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.AllInstances.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalDoubleIListOfDouble">
            <summary>设置 FibonacciFansCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Double maxAxisXCoord, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.AllInstances.CalculateLinesGRealPoint2DGRealPoint2DIListOfDouble">
            <summary>设置 FibonacciFansCalculator.CalculateLines(GRealPoint2D startPoint, GRealPoint2D endPoint, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalDoubleIListOfDouble">
            <summary>设置 FibonacciFansCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Double maxAxisXCoord, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.CalculateLinesGRealPoint2DGRealPoint2DIListOfDouble">
            <summary>设置 FibonacciFansCalculator.CalculateLines(GRealPoint2D startPoint, GRealPoint2D endPoint, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciFansCalculator.Constructor">
            <summary>设置 FibonacciFansCalculator.FibonacciFansCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciLine">
            <summary>DevExpress.Charts.Native.FibonacciLine 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.#ctor(DevExpress.Charts.Native.FibonacciLine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.EndGet">
            <summary>设置 FibonacciLine.get_End() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.EndSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_End(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.LevelGet">
            <summary>设置 FibonacciLine.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.ScreenEndGet">
            <summary>设置 FibonacciLine.get_ScreenEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.ScreenEndSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_ScreenEnd(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.ScreenStartGet">
            <summary>设置 FibonacciLine.get_ScreenStart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.ScreenStartSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_ScreenStart(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.StartGet">
            <summary>设置 FibonacciLine.get_Start() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.AllInstances.StartSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_Start(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ConstructorDoubleDoubleDoubleDoubleDouble">
            <summary>设置 FibonacciLine.FibonacciLine(Double level, Double startX, Double startY, Double endX, Double endY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ConstructorDoubleGRealPoint2DDoubleDouble">
            <summary>设置 FibonacciLine.FibonacciLine(Double level, GRealPoint2D startPoint, Double endPointX, Double endPointY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ConstructorDoubleGRealPoint2DGRealPoint2D">
            <summary>设置 FibonacciLine.FibonacciLine(Double level, GRealPoint2D start, GRealPoint2D end) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.EndGet">
            <summary>设置 FibonacciLine.get_End() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.EndSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_End(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.LevelGet">
            <summary>设置 FibonacciLine.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ScreenEndGet">
            <summary>设置 FibonacciLine.get_ScreenEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ScreenEndSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_ScreenEnd(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ScreenStartGet">
            <summary>设置 FibonacciLine.get_ScreenStart() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.ScreenStartSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_ScreenStart(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.StartGet">
            <summary>设置 FibonacciLine.get_Start() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciLine.StartSetGRealPoint2D">
            <summary>设置 FibonacciLine.set_Start(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator">
            <summary>DevExpress.Charts.Native.FibonacciRetracementCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.#ctor(DevExpress.Charts.Native.FibonacciRetracementCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.AllInstances.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalDoubleIListOfDouble">
            <summary>设置 FibonacciRetracementCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Double axisXMaxValueInternal, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.AllInstances.CalculateLinesGRealPoint2DGRealPoint2DIListOfDouble">
            <summary>设置 FibonacciRetracementCalculator.CalculateLines(GRealPoint2D startPoint, GRealPoint2D endPoint, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalDoubleIListOfDouble">
            <summary>设置 FibonacciRetracementCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Double axisXMaxValueInternal, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.CalculateLinesGRealPoint2DGRealPoint2DIListOfDouble">
            <summary>设置 FibonacciRetracementCalculator.CalculateLines(GRealPoint2D startPoint, GRealPoint2D endPoint, IList`1&lt;Double&gt; levels) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFibonacciRetracementCalculator.Constructor">
            <summary>设置 FibonacciRetracementCalculator.FibonacciRetracementCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator">
            <summary>DevExpress.Charts.Native.FinancialAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.#ctor(DevExpress.Charts.Native.FinancialAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 FinancialAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 FinancialAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialAggregationCalculator.Constructor">
            <summary>设置 FinancialAggregationCalculator.FinancialAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator">
            <summary>DevExpress.Charts.Native.FinancialIndicatorCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.#ctor(DevExpress.Charts.Native.FinancialIndicatorCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances.CalculatedGet">
            <summary>设置 FinancialIndicatorCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 FinancialIndicatorCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances.CompareRefinedPointsByArgumentRefinedPointValueLevelInternalRefinedPointValueLevelInternalRefinedPointOutValueLevelInternalOutRefinedPointOutValueLevelInternalOut">
            <summary>设置 FinancialIndicatorCalculator.CompareRefinedPointsByArgument(RefinedPoint refinedPoint1, ValueLevelInternal valueLevel1, RefinedPoint refinedPoint2, ValueLevelInternal valueLevel2, RefinedPoint&amp; leftPointInfo, ValueLevelInternal&amp; leftValueLevel, RefinedPoint&amp; rightPointInfo, ValueLevelInternal&amp; rightValueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances.GetPointByArgumentAxisScaleTypeMapIRefinedSeriesObjectCultureInfo">
            <summary>设置 FinancialIndicatorCalculator.GetPointByArgument(AxisScaleTypeMap axisXScaleTypeMap, IRefinedSeries seriesInfo, Object argument, CultureInfo cultureInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.AllInstances.IsStartPointAboveEndPointGRealPoint2DGRealPoint2D">
            <summary>设置 FinancialIndicatorCalculator.IsStartPointAboveEndPoint(GRealPoint2D startPoint, GRealPoint2D endPoint) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.CalculatedGet">
            <summary>设置 FinancialIndicatorCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.CalculatedSetBoolean">
            <summary>设置 FinancialIndicatorCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.Constructor">
            <summary>设置 FinancialIndicatorCalculator.FinancialIndicatorCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.GetPointByArgumentAxisScaleTypeMapIRefinedSeriesObjectCultureInfo">
            <summary>设置 FinancialIndicatorCalculator.GetPointByArgument(AxisScaleTypeMap axisXScaleTypeMap, IRefinedSeries seriesInfo, Object argument, CultureInfo cultureInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFinancialIndicatorCalculator.IsStartPointAboveEndPointGRealPoint2DGRealPoint2D">
            <summary>设置 FinancialIndicatorCalculator.IsStartPointAboveEndPoint(GRealPoint2D startPoint, GRealPoint2D endPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer">
            <summary>DevExpress.Charts.Native.FullStackedInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.#ctor(DevExpress.Charts.Native.FullStackedInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.AllInstances.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 FullStackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.ConstructorISeriesView">
            <summary>设置 FullStackedInteractionContainer.FullStackedInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.ConstructorISeriesViewBoolean">
            <summary>设置 FullStackedInteractionContainer.FullStackedInteractionContainer(ISeriesView view, Boolean isContinousView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedInteractionContainer.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 FullStackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction">
            <summary>DevExpress.Charts.Native.FullStackedPointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.#ctor(DevExpress.Charts.Native.FullStackedPointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances.GetNormalizedValueDouble">
            <summary>设置 FullStackedPointInteraction.GetNormalizedValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances.GetStackedPointMaxValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances.GetStackedPointMinValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances.MaxValueGet">
            <summary>设置 FullStackedPointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.AllInstances.MinValueGet">
            <summary>设置 FullStackedPointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.ConstructorListOfRefinedSeriesInt32RefinedPoint">
            <summary>设置 FullStackedPointInteraction.FullStackedPointInteraction(List`1&lt;RefinedSeries&gt; series, Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.GetNormalizedValueDouble">
            <summary>设置 FullStackedPointInteraction.GetNormalizedValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.GetStackedPointMaxValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.GetStackedPointMinValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.MaxValueGet">
            <summary>设置 FullStackedPointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFullStackedPointInteraction.MinValueGet">
            <summary>设置 FullStackedPointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator">
            <summary>DevExpress.Charts.Native.Funnel2DLayoutCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.#ctor(DevExpress.Charts.Native.Funnel2DLayoutCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.AllInstances.CalcBottomPointDoubleDoubleDoubleDoubleBoolean">
            <summary>设置 Funnel2DLayoutCalculator.CalcBottomPoint(Double topY, Double bottomY, Double topWidth, Double bottomWidth, Boolean isLeftPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.AllInstances.Calculate">
            <summary>设置 Funnel2DLayoutCalculator.Calculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.AllInstances.CalculateSeriesPointLayoutIFunnelPointIFunnelPointDouble">
            <summary>设置 Funnel2DLayoutCalculator.CalculateSeriesPointLayout(IFunnelPoint point, IFunnelPoint bottomPoint, Double topY) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.CalcBottomPointDoubleDoubleDoubleDoubleBoolean">
            <summary>设置 Funnel2DLayoutCalculator.CalcBottomPoint(Double topY, Double bottomY, Double topWidth, Double bottomWidth, Boolean isLeftPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.CalcIntersectionPointGRealPoint2DGRealPoint2DDouble">
            <summary>设置 Funnel2DLayoutCalculator.CalcIntersectionPoint(GRealPoint2D p1, GRealPoint2D p2, Double y) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.Calculate">
            <summary>设置 Funnel2DLayoutCalculator.Calculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.CalculateSeriesPointLayoutIFunnelPointIFunnelPointDouble">
            <summary>设置 Funnel2DLayoutCalculator.CalculateSeriesPointLayout(IFunnelPoint point, IFunnelPoint bottomPoint, Double topY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnel2DLayoutCalculator.ConstructorGRealSize2DIListOfRefinedPointDouble">
            <summary>设置 Funnel2DLayoutCalculator.Funnel2DLayoutCalculator(GRealSize2D bounds, IList`1&lt;RefinedPoint&gt; points, Double pointDistance) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo">
            <summary>DevExpress.Charts.Native.FunnelLableInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.#ctor(DevExpress.Charts.Native.FunnelLableInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.AllInstances.LabelSizeGet">
            <summary>设置 FunnelLableInfo.get_LabelSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.AllInstances.PointInfoGet">
            <summary>设置 FunnelLableInfo.get_PointInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.AllInstances.RefinedPointGet">
            <summary>设置 FunnelLableInfo.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.ConstructorRefinedPointGRealSize2DFunnelPointInfo">
            <summary>设置 FunnelLableInfo.FunnelLableInfo(RefinedPoint refinedPoint, GRealSize2D labelSize, FunnelPointInfo pointInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.LabelSizeGet">
            <summary>设置 FunnelLableInfo.get_LabelSize() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.PointInfoGet">
            <summary>设置 FunnelLableInfo.get_PointInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelLableInfo.RefinedPointGet">
            <summary>设置 FunnelLableInfo.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.FunnelNormalizedValuesCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.FunnelNormalizedValuesCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.AllInstances.CalculateNormValues">
            <summary>设置 FunnelNormalizedValuesCalculator.CalculateNormValues() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.CalculateNormValues">
            <summary>设置 FunnelNormalizedValuesCalculator.CalculateNormValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelNormalizedValuesCalculator.ConstructorISeries">
            <summary>设置 FunnelNormalizedValuesCalculator.FunnelNormalizedValuesCalculator(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo">
            <summary>DevExpress.Charts.Native.FunnelPointInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.#ctor(DevExpress.Charts.Native.FunnelPointInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.BottomLeftPointGet">
            <summary>设置 FunnelPointInfo.get_BottomLeftPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.BottomLeftPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_BottomLeftPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.BottomRightPointGet">
            <summary>设置 FunnelPointInfo.get_BottomRightPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.BottomRightPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_BottomRightPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.TopLeftPointGet">
            <summary>设置 FunnelPointInfo.get_TopLeftPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.TopLeftPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_TopLeftPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.TopRightPointGet">
            <summary>设置 FunnelPointInfo.get_TopRightPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.AllInstances.TopRightPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_TopRightPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BottomLeftPointGet">
            <summary>设置 FunnelPointInfo.get_BottomLeftPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BottomLeftPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_BottomLeftPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BottomRightPointGet">
            <summary>设置 FunnelPointInfo.get_BottomRightPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.BottomRightPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_BottomRightPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.Constructor">
            <summary>设置 FunnelPointInfo.FunnelPointInfo() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.TopLeftPointGet">
            <summary>设置 FunnelPointInfo.get_TopLeftPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.TopLeftPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_TopLeftPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.TopRightPointGet">
            <summary>设置 FunnelPointInfo.get_TopRightPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointInfo.TopRightPointSetGRealPoint2D">
            <summary>设置 FunnelPointInfo.set_TopRightPoint(GRealPoint2D value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider">
            <summary>DevExpress.Charts.Native.FunnelPointPatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.#ctor(DevExpress.Charts.Native.FunnelPointPatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.AllInstances.GetPercentValue">
            <summary>设置 FunnelPointPatternDataProvider.GetPercentValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.ConstructorPatternConstants">
            <summary>设置 FunnelPointPatternDataProvider.FunnelPointPatternDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimFunnelPointPatternDataProvider.GetPercentValue">
            <summary>设置 FunnelPointPatternDataProvider.GetPercentValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGPoint2D">
            <summary>DevExpress.Charts.Native.GPoint2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGPoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPoint2D.StaticConstructor">
            <summary>设置 GPoint2D.GPoint2D() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGPolygon2D">
            <summary>DevExpress.Charts.Native.GPolygon2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.#ctor(DevExpress.Charts.Native.GPolygon2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.AllInstances.VerticesGet">
            <summary>设置 GPolygon2D.get_Vertices() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.ConstructorGRealPoint2DArray">
            <summary>设置 GPolygon2D.GPolygon2D(GRealPoint2D[] vertices) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGPolygon2D.VerticesGet">
            <summary>设置 GPolygon2D.get_Vertices() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealEllipse">
            <summary>DevExpress.Charts.Native.GRealEllipse 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.#ctor(DevExpress.Charts.Native.GRealEllipse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.AllInstances.CenterGet">
            <summary>设置 GRealEllipse.get_Center() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.AllInstances.InflateDoubleDouble">
            <summary>设置 GRealEllipse.Inflate(Double dx, Double dy) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.AllInstances.RadiusXGet">
            <summary>设置 GRealEllipse.get_RadiusX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.AllInstances.RadiusYGet">
            <summary>设置 GRealEllipse.get_RadiusY() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.CenterGet">
            <summary>设置 GRealEllipse.get_Center() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.ConstructorGRealPoint2DDoubleDouble">
            <summary>设置 GRealEllipse.GRealEllipse(GRealPoint2D center, Double radiusX, Double radiusY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.ConstructorGRealPoint2DGRealPoint2D">
            <summary>设置 GRealEllipse.GRealEllipse(GRealPoint2D leftTop, GRealPoint2D rightBottom) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.ConstructorGRealRect2D">
            <summary>设置 GRealEllipse.GRealEllipse(GRealRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.InflateDoubleDouble">
            <summary>设置 GRealEllipse.Inflate(Double dx, Double dy) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.RadiusXGet">
            <summary>设置 GRealEllipse.get_RadiusX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealEllipse.RadiusYGet">
            <summary>设置 GRealEllipse.get_RadiusY() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealLine2D">
            <summary>DevExpress.Charts.Native.GRealLine2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealLine2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealLine2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealLine2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealLine2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealLine2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D">
            <summary>DevExpress.Charts.Native.GRealPoint2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.CalculateDistanceGRealPoint2DGRealPoint2D">
            <summary>设置 GRealPoint2D.CalculateDistance(GRealPoint2D point1, GRealPoint2D point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.EqualityOpGRealPoint2DGRealPoint2D">
            <summary>设置 GRealPoint2D.op_Equality(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.ExplicitOpGPoint2DGRealPoint2D">
            <summary>设置 GRealPoint2D.op_Explicit(GPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealPoint2D.InequalityOpGRealPoint2DGRealPoint2D">
            <summary>设置 GRealPoint2D.op_Inequality(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealRect2D">
            <summary>DevExpress.Charts.Native.GRealRect2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.InflateGRealRect2DDoubleDouble">
            <summary>设置 GRealRect2D.Inflate(GRealRect2D rect, Double dx, Double dy) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.IntersectGRealRect2DGRealRect2D">
            <summary>设置 GRealRect2D.Intersect(GRealRect2D rect1, GRealRect2D rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.IsIntersectedGRealRect2DGRealRect2D">
            <summary>设置 GRealRect2D.IsIntersected(GRealRect2D rect1, GRealRect2D rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealRect2D.StaticConstructor">
            <summary>设置 GRealRect2D.GRealRect2D() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealSize2D">
            <summary>DevExpress.Charts.Native.GRealSize2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.EmptyGet">
            <summary>设置 GRealSize2D.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.EqualityOpGRealSize2DGRealSize2D">
            <summary>设置 GRealSize2D.op_Equality(GRealSize2D size1, GRealSize2D size2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealSize2D.InequalityOpGRealSize2DGRealSize2D">
            <summary>设置 GRealSize2D.op_Inequality(GRealSize2D size1, GRealSize2D size2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealVector2D">
            <summary>DevExpress.Charts.Native.GRealVector2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.AdditionOpGRealPoint2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Addition(GRealPoint2D point, GRealVector2D vector) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.AdditionOpGRealVector2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Addition(GRealVector2D v1, GRealVector2D v2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.EqualityOpGRealVector2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Equality(GRealVector2D v1, GRealVector2D v2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.InequalityOpGRealVector2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Inequality(GRealVector2D v1, GRealVector2D v2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.MultiplyOpDoubleGRealVector2D">
            <summary>设置 GRealVector2D.op_Multiply(Double scalar, GRealVector2D vector) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.MultiplyOpGRealVector2DDouble">
            <summary>设置 GRealVector2D.op_Multiply(GRealVector2D vector, Double scalar) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.SubtractionOpGRealPoint2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Subtraction(GRealPoint2D point, GRealVector2D vector) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRealVector2D.SubtractionOpGRealVector2DGRealVector2D">
            <summary>设置 GRealVector2D.op_Subtraction(GRealVector2D v1, GRealVector2D v2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRect2D">
            <summary>DevExpress.Charts.Native.GRect2D 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRect2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGRect2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRect2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGRect2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRect2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRect2D.IntersectGRect2DGRect2D">
            <summary>设置 GRect2D.Intersect(GRect2D rect1, GRect2D rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRect2D.IsIntersectedGRect2DGRect2D">
            <summary>设置 GRect2D.IsIntersected(GRect2D rect1, GRect2D rect2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGRect2D.StaticConstructor">
            <summary>设置 GRect2D.GRect2D() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGeometricUtils">
            <summary>DevExpress.Charts.Native.GeometricUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcBetweenPointsAngleGRealPoint2DGRealPoint2D">
            <summary>设置 GeometricUtils.CalcBetweenPointsAngle(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcBoundsIListOfGRealPoint2D">
            <summary>设置 GeometricUtils.CalcBounds(IList`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcDistanceGRealPoint2DGRealPoint2D">
            <summary>设置 GeometricUtils.CalcDistance(GRealPoint2D point1, GRealPoint2D point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcDistanceGRealPoint2DGRealPoint2DBoolean">
            <summary>设置 GeometricUtils.CalcDistance(GRealPoint2D point1, GRealPoint2D point2, Boolean isHorizontalDistance) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineSegmentWithArcIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2DDoubleDouble">
            <summary>设置 GeometricUtils.CalcLineSegmentWithArcIntersection(GRealPoint2D segmentPoint1, GRealPoint2D segmentPoint2, GRealPoint2D leftTopEllipseRect, GRealPoint2D rightBottomEllipseRect, Double startAngle, Double sweepAngle) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineSegmentWithEllipseIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2D">
            <summary>设置 GeometricUtils.CalcLineSegmentWithEllipseIntersection(GRealPoint2D segmentPoint1, GRealPoint2D segmentPoint2, GRealPoint2D leftTopEllipseRect, GRealPoint2D rightBottomEllipseRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineSegmentWithRectIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2D">
            <summary>设置 GeometricUtils.CalcLineSegmentWithRectIntersection(GRealPoint2D segmentPoint1, GRealPoint2D segmentPoint2, GRealPoint2D leftTopRectPoint, GRealPoint2D rightBottomRectPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineSegmentWithRoundedRectIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2DDouble">
            <summary>设置 GeometricUtils.CalcLineSegmentWithRoundedRectIntersection(GRealPoint2D startPoint, GRealPoint2D endPoint, GRealPoint2D leftTopRectPoint, GRealPoint2D rightBottomRectPoint, Double fillet) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineSegmentWithRoundedRectIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2DDoubleDoubleDoubleDouble">
            <summary>设置 GeometricUtils.CalcLineSegmentWithRoundedRectIntersection(GRealPoint2D startPoint, GRealPoint2D endPoint, GRealPoint2D leftTopRectPoint, GRealPoint2D rightBottomRectPoint, Double leftBottomFillet, Double leftTopFillet, Double rightTopFillet, Double rightBottomFillet) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLineWithEllipseIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2D">
            <summary>设置 GeometricUtils.CalcLineWithEllipseIntersection(GRealPoint2D segmentPoint1, GRealPoint2D segmentPoint2, GRealPoint2D leftTopEllipseRect, GRealPoint2D rightBottomEllipseRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcLinesIntersectionGRealPoint2DGRealPoint2DGRealPoint2DGRealPoint2DBoolean">
            <summary>设置 GeometricUtils.CalcLinesIntersection(GRealPoint2D line1P1, GRealPoint2D line1P2, GRealPoint2D line2P1, GRealPoint2D line2P2, Boolean intervalMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcMeanICollectionOfGRealPoint2D">
            <summary>设置 GeometricUtils.CalcMean(ICollection`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcPointInLineGRealPoint2DGRealPoint2DDouble">
            <summary>设置 GeometricUtils.CalcPointInLine(GRealPoint2D start, GRealPoint2D end, Double ration) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcQuadraticEquationDoubleDoubleDouble">
            <summary>设置 GeometricUtils.CalcQuadraticEquation(Double a, Double b, Double c) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.CalcRectWithEllipseIntersectionGRealRect2DGRealEllipse">
            <summary>设置 GeometricUtils.CalcRectWithEllipseIntersection(GRealRect2D rect, GRealEllipse ellipse) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.IsValidDoubleDouble">
            <summary>设置 GeometricUtils.IsValidDouble(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.NormalizeRadianDouble">
            <summary>设置 GeometricUtils.NormalizeRadian(Double angleRadian) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.ScalarProductGRealVector2DGRealVector2D">
            <summary>设置 GeometricUtils.ScalarProduct(GRealVector2D v1, GRealVector2D v2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.StrongRoundDouble">
            <summary>设置 GeometricUtils.StrongRound(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.StrongRoundGRealPoint2D">
            <summary>设置 GeometricUtils.StrongRound(GRealPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometricUtils.StrongRoundGRealRect2D">
            <summary>设置 GeometricUtils.StrongRound(GRealRect2D rect) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator">
            <summary>DevExpress.Charts.Native.GeometryCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.#ctor(DevExpress.Charts.Native.GeometryCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.AllInstances.CreateStackedSplineStripsRefinedSeriesIGeometryHolder">
            <summary>设置 GeometryCalculator.CreateStackedSplineStrips(RefinedSeries series, IGeometryHolder geometryHolder) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.AllInstances.CreateStripsIRefinedSeries">
            <summary>设置 GeometryCalculator.CreateStrips(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.Constructor">
            <summary>设置 GeometryCalculator.GeometryCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.CreateStackedSplineStripsRefinedSeriesIGeometryHolder">
            <summary>设置 GeometryCalculator.CreateStackedSplineStrips(RefinedSeries series, IGeometryHolder geometryHolder) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.CreateStripsIRefinedSeries">
            <summary>设置 GeometryCalculator.CreateStrips(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryCalculator.CreateStripsIRefinedSeriesGeometryStripCreator">
            <summary>设置 GeometryCalculator.CreateStrips(IRefinedSeries refinedSeries, GeometryStripCreator stripCreator) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator">
            <summary>DevExpress.Charts.Native.GeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.#ctor(DevExpress.Charts.Native.GeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.AllInstances.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.Constructor">
            <summary>设置 GeometryStripCreator.GeometryStripCreator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx">
            <summary>DevExpress.Charts.Native.GridAndTextDataEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.#ctor(DevExpress.Charts.Native.GridAndTextDataEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.ActualScaleOptionsGet">
            <summary>设置 GridAndTextDataEx.get_ActualScaleOptions() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.ActualScaleOptionsGet">
            <summary>设置 GridAndTextDataEx.get_ActualScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.AxisLengthGet">
            <summary>设置 GridAndTextDataEx.get_AxisLength() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.CalculateDeltaIMinMaxValues">
            <summary>设置 GridAndTextDataEx.CalculateDelta(IMinMaxValues visualRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.CalculateGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.CalculateLogarithmicGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateLogarithmicGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.CalculateManualGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateManualGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.CalculateNumericGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateNumericGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.GridDataGet">
            <summary>设置 GridAndTextDataEx.get_GridData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.IsLogarithmicGet">
            <summary>设置 GridAndTextDataEx.get_IsLogarithmic() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.MappingGet">
            <summary>设置 GridAndTextDataEx.get_Mapping() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AllInstances.TextDataGet">
            <summary>设置 GridAndTextDataEx.get_TextData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.AxisLengthGet">
            <summary>设置 GridAndTextDataEx.get_AxisLength() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.CalculateDeltaIMinMaxValues">
            <summary>设置 GridAndTextDataEx.CalculateDelta(IMinMaxValues visualRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.CalculateGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.CalculateLogarithmicGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateLogarithmicGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.CalculateManualGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateManualGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.CalculateNumericGridSpacing">
            <summary>设置 GridAndTextDataEx.CalculateNumericGridSpacing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.ConstructorIEnumerableOfISeriesIAxisDataBooleanIMinMaxValuesDoubleBoolean">
            <summary>设置 GridAndTextDataEx.GridAndTextDataEx(IEnumerable`1&lt;ISeries&gt; seriesList, IAxisData axis, Boolean scrollingEnabled, IMinMaxValues visualRange, Double axisLength, Boolean staggered) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.GridDataGet">
            <summary>设置 GridAndTextDataEx.get_GridData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.IsLogarithmicGet">
            <summary>设置 GridAndTextDataEx.get_IsLogarithmic() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.MappingGet">
            <summary>设置 GridAndTextDataEx.get_Mapping() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridAndTextDataEx.TextDataGet">
            <summary>设置 GridAndTextDataEx.get_TextData() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator">
            <summary>DevExpress.Charts.Native.GridSpacingCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.#ctor(DevExpress.Charts.Native.GridSpacingCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.CalculateDoubleDoubleDouble">
            <summary>设置 GridSpacingCalculator.Calculate(Double axisRangeDelta, Double screenDelta, Double gridSpacingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimGridSpacingCalculator.Constructor">
            <summary>设置 GridSpacingCalculator.GridSpacingCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimHorizontalStep">
            <summary>DevExpress.Charts.Native.HorizontalStep 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.#ctor(DevExpress.Charts.Native.HorizontalStep)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.AllInstances.StartRowIndexGet">
            <summary>设置 HorizontalStep.get_StartRowIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.AllInstances.UpdatePrimaryTestPositions">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.AllInstances.UpdateSecondaryTestPositions">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 HorizontalStep.HorizontalStep(Int32 position, Int32 startRowIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.StartRowIndexGet">
            <summary>设置 HorizontalStep.get_StartRowIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.UpdatePrimaryTestPositions">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimHorizontalStep.UpdateSecondaryTestPositions">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation">
            <summary>DevExpress.Charts.Native.IdentityTransformation 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.#ctor(DevExpress.Charts.Native.IdentityTransformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.AllInstances.IsIdentityGet">
            <summary>设置 IdentityTransformation.get_IsIdentity() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.AllInstances.TransformBackwardDouble">
            <summary>设置 IdentityTransformation.TransformBackward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.AllInstances.TransformForwardDouble">
            <summary>设置 IdentityTransformation.TransformForward(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.Bind(DevExpress.Charts.Native.ITransformation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.Constructor">
            <summary>设置 IdentityTransformation.IdentityTransformation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.IsIdentityGet">
            <summary>设置 IdentityTransformation.get_IsIdentity() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.TransformBackwardDouble">
            <summary>设置 IdentityTransformation.TransformBackward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIdentityTransformation.TransformForwardDouble">
            <summary>设置 IdentityTransformation.TransformForward(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument">
            <summary>DevExpress.Charts.Native.InteractionComparerByArgument 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.#ctor(DevExpress.Charts.Native.InteractionComparerByArgument)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.AllInstances.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByArgument.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.IPointInteraction})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByArgument.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByArgument.Constructor">
            <summary>设置 InteractionComparerByArgument.InteractionComparerByArgument() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMaxValue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.#ctor(DevExpress.Charts.Native.InteractionComparerByMaxValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.AllInstances.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMaxValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.IPointInteraction})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMaxValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMaxValue.ConstructorISeriesView">
            <summary>设置 InteractionComparerByMaxValue.InteractionComparerByMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMinAbsValue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.#ctor(DevExpress.Charts.Native.InteractionComparerByMinAbsValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.AllInstances.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinAbsValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.IPointInteraction})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinAbsValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinAbsValue.ConstructorISeriesView">
            <summary>设置 InteractionComparerByMinAbsValue.InteractionComparerByMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMinValue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.#ctor(DevExpress.Charts.Native.InteractionComparerByMinValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.AllInstances.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.IPointInteraction})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionComparerByMinValue.ConstructorISeriesView">
            <summary>设置 InteractionComparerByMinValue.InteractionComparerByMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionKey">
            <summary>DevExpress.Charts.Native.InteractionKey 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInteractionKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInteractionKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionKey.EqualityOpInteractionKeyInteractionKey">
            <summary>设置 InteractionKey.op_Equality(InteractionKey a, InteractionKey b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInteractionKey.InequalityOpInteractionKeyInteractionKey">
            <summary>设置 InteractionKey.op_Inequality(InteractionKey a, InteractionKey b) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInterlacedData">
            <summary>DevExpress.Charts.Native.InterlacedData 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInterlacedData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInterlacedData.#ctor(DevExpress.Charts.Native.InterlacedData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInterlacedData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.AllInstances.FarGet">
            <summary>设置 InterlacedData.get_Far() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.AllInstances.NearGet">
            <summary>设置 InterlacedData.get_Near() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInterlacedData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInterlacedData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.ConstructorDoubleDouble">
            <summary>设置 InterlacedData.InterlacedData(Double near, Double far) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.FarGet">
            <summary>设置 InterlacedData.get_Far() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInterlacedData.NearGet">
            <summary>设置 InterlacedData.get_Near() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates">
            <summary>DevExpress.Charts.Native.InternalCoordinates 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.#ctor(DevExpress.Charts.Native.InternalCoordinates)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AddAxisXValueIAxisDataDouble">
            <summary>设置 InternalCoordinates.AddAxisXValue(IAxisData axis, Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AddAxisYValueIAxisDataDouble">
            <summary>设置 InternalCoordinates.AddAxisYValue(IAxisData axis, Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.AddAxisXValueIAxisDataDouble">
            <summary>设置 InternalCoordinates.AddAxisXValue(IAxisData axis, Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.AddAxisYValueIAxisDataDouble">
            <summary>设置 InternalCoordinates.AddAxisYValue(IAxisData axis, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.AxesXValuesGet">
            <summary>设置 InternalCoordinates.get_AxesXValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.AxesYValuesGet">
            <summary>设置 InternalCoordinates.get_AxesYValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.GetArgumentByAxisXIAxisData">
            <summary>设置 InternalCoordinates.GetArgumentByAxisX(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.GetValueByAxisIAxisDataListOfAxisValuePair">
            <summary>设置 InternalCoordinates.GetValueByAxis(IAxisData axis, List`1&lt;AxisValuePair&gt; axesValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.GetValueByAxisYIAxisData">
            <summary>设置 InternalCoordinates.GetValueByAxisY(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AllInstances.PaneGet">
            <summary>设置 InternalCoordinates.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AxesXValuesGet">
            <summary>设置 InternalCoordinates.get_AxesXValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.AxesYValuesGet">
            <summary>设置 InternalCoordinates.get_AxesYValues() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.ConstructorIPane">
            <summary>设置 InternalCoordinates.InternalCoordinates(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.GetArgumentByAxisXIAxisData">
            <summary>设置 InternalCoordinates.GetArgumentByAxisX(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.GetValueByAxisIAxisDataListOfAxisValuePair">
            <summary>设置 InternalCoordinates.GetValueByAxis(IAxisData axis, List`1&lt;AxisValuePair&gt; axesValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.GetValueByAxisYIAxisData">
            <summary>设置 InternalCoordinates.GetValueByAxisY(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalCoordinates.PaneGet">
            <summary>设置 InternalCoordinates.get_Pane() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInternalRange">
            <summary>DevExpress.Charts.Native.InternalRange 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalRange.#ctor(DevExpress.Charts.Native.InternalRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimInternalRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.AllInstances.SetSideMarginsIAxisRangeData">
            <summary>设置 InternalRange.SetSideMargins(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.AllInstances.ValuesWithoutSideMarginsGet">
            <summary>设置 InternalRange.get_ValuesWithoutSideMargins() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimInternalRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.Constructor">
            <summary>设置 InternalRange.InternalRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.SetSideMarginsIAxisRangeData">
            <summary>设置 InternalRange.SetSideMargins(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimInternalRange.ValuesWithoutSideMarginsGet">
            <summary>设置 InternalRange.get_ValuesWithoutSideMargins() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo">
            <summary>DevExpress.Charts.Native.IntersectionInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimIntersectionInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider">
            <summary>DevExpress.Charts.Native.KeyColorColorizerLegendItemDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.#ctor(DevExpress.Charts.Native.KeyColorColorizerLegendItemDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.AllInstances.CheckContextObject">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.AllInstances.GetValue">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.CheckContextObject">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.Constructor">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.KeyColorColorizerLegendItemDataProvider() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimKeyColorColorizerLegendItemDataProvider.GetValue">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper">
            <summary>DevExpress.Charts.Native.LargeScaleHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.IsValidDouble">
            <summary>设置 LargeScaleHelper.IsValid(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.IsValidGRealPoint2D">
            <summary>设置 LargeScaleHelper.IsValid(GRealPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.IsValidLineStrip">
            <summary>设置 LargeScaleHelper.IsValid(LineStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.IsValidListOfIGeometryStrip">
            <summary>设置 LargeScaleHelper.IsValid(List`1&lt;IGeometryStrip&gt; strips) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.ValidateDouble">
            <summary>设置 LargeScaleHelper.Validate(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.ValidateGRealPoint2D">
            <summary>设置 LargeScaleHelper.Validate(GRealPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.ValidateGRealRect2D">
            <summary>设置 LargeScaleHelper.Validate(GRealRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLargeScaleHelper.ValidateListOfGRealPoint2D">
            <summary>设置 LargeScaleHelper.Validate(List`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo">
            <summary>DevExpress.Charts.Native.LightUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.#ctor(DevExpress.Charts.Native.LightUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLightUpdateInfo.ConstructorObject">
            <summary>设置 LightUpdateInfo.LightUpdateInfo(Object sender) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.LineGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.#ctor(DevExpress.Charts.Native.LineGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 LineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 LineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 LineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 LineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances.FilteringPointsSupportedGet">
            <summary>设置 LineGeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 LineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.ClosedGet">
            <summary>设置 LineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.ConstructorBoolean">
            <summary>设置 LineGeometryStripCreator.LineGeometryStripCreator(Boolean closed) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.CreateStrip">
            <summary>设置 LineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 LineGeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 LineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLineStrip">
            <summary>DevExpress.Charts.Native.LineStrip 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.#ctor(DevExpress.Charts.Native.LineStrip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AddStepToPointGRealPoint2DBoolean">
            <summary>设置 LineStrip.AddStepToPoint(GRealPoint2D point, Boolean invertedStep) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AddUniquePointGRealPoint2D">
            <summary>设置 LineStrip.AddUniquePoint(GRealPoint2D point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.AddStepToPointGRealPoint2DBoolean">
            <summary>设置 LineStrip.AddStepToPoint(GRealPoint2D point, Boolean invertedStep) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.AddUniquePointGRealPoint2D">
            <summary>设置 LineStrip.AddUniquePoint(GRealPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.CompleteFilling">
            <summary>设置 LineStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.CreateInstance">
            <summary>设置 LineStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.CreateUniqueStrip">
            <summary>设置 LineStrip.CreateUniqueStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.ExtendGRealPoint2DBoolean">
            <summary>设置 LineStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.ExtractSubStripInt32Int32">
            <summary>设置 LineStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.IsEmptyGet">
            <summary>设置 LineStrip.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.AllInstances.SubstitureInt32Int32LineStrip">
            <summary>设置 LineStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(DevExpress.Charts.Native.IGeometryStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.Generic.IReadOnlyCollection{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLineStrip.Bind(System.Collections.Generic.IReadOnlyList{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.CompleteFilling">
            <summary>设置 LineStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.Constructor">
            <summary>设置 LineStrip.LineStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.ConstructorIListOfGRealPoint2D">
            <summary>设置 LineStrip.LineStrip(IList`1&lt;GRealPoint2D&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.ConstructorInt32">
            <summary>设置 LineStrip.LineStrip(Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.CreateInstance">
            <summary>设置 LineStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.CreateUniqueStrip">
            <summary>设置 LineStrip.CreateUniqueStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.ExtendGRealPoint2DBoolean">
            <summary>设置 LineStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.ExtractSubStripInt32Int32">
            <summary>设置 LineStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.IsEmptyGet">
            <summary>设置 LineStrip.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLineStrip.SubstitureInt32Int32LineStrip">
            <summary>设置 LineStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator">
            <summary>DevExpress.Charts.Native.LogarithmicRegressionCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.#ctor(DevExpress.Charts.Native.LogarithmicRegressionCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.AllInstances.CalculateIRefinedSeriesValueLevelInternal">
            <summary>设置 LogarithmicRegressionCalculator.Calculate(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.CalculateIRefinedSeriesValueLevelInternal">
            <summary>设置 LogarithmicRegressionCalculator.Calculate(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicRegressionCalculator.Constructor">
            <summary>设置 LogarithmicRegressionCalculator.LogarithmicRegressionCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation">
            <summary>DevExpress.Charts.Native.LogarithmicTransformation 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.#ctor(DevExpress.Charts.Native.LogarithmicTransformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.CompleteUpdate">
            <summary>设置 LogarithmicTransformation.CompleteUpdate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.IsIdentityGet">
            <summary>设置 LogarithmicTransformation.get_IsIdentity() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.IsSpecialValueDouble">
            <summary>设置 LogarithmicTransformation.IsSpecialValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.LogarithmicBaseGet">
            <summary>设置 LogarithmicTransformation.get_LogarithmicBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.MinLogValueGet">
            <summary>设置 LogarithmicTransformation.get_MinLogValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.Reset">
            <summary>设置 LogarithmicTransformation.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.TransformBackwardDouble">
            <summary>设置 LogarithmicTransformation.TransformBackward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.TransformForwardDouble">
            <summary>设置 LogarithmicTransformation.TransformForward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.AllInstances.UpdateDoubleArray">
            <summary>设置 LogarithmicTransformation.Update(Double[] values) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.Bind(DevExpress.Charts.Native.ITransformation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.CompleteUpdate">
            <summary>设置 LogarithmicTransformation.CompleteUpdate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.ConstructorDouble">
            <summary>设置 LogarithmicTransformation.LogarithmicTransformation(Double logarithmicBase) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.ConstructorDoubleDouble">
            <summary>设置 LogarithmicTransformation.LogarithmicTransformation(Double logarithmicBase, Double indentFromZero) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.IsIdentityGet">
            <summary>设置 LogarithmicTransformation.get_IsIdentity() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.IsSpecialValueDouble">
            <summary>设置 LogarithmicTransformation.IsSpecialValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.LogarithmicBaseGet">
            <summary>设置 LogarithmicTransformation.get_LogarithmicBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.MinLogValueGet">
            <summary>设置 LogarithmicTransformation.get_MinLogValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.Reset">
            <summary>设置 LogarithmicTransformation.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.TransformBackwardDouble">
            <summary>设置 LogarithmicTransformation.TransformBackward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.TransformForwardDouble">
            <summary>设置 LogarithmicTransformation.TransformForward(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimLogarithmicTransformation.UpdateDoubleArray">
            <summary>设置 LogarithmicTransformation.Update(Double[] values) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator">
            <summary>DevExpress.Charts.Native.MassIndexCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.#ctor(DevExpress.Charts.Native.MassIndexCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.CalcNextEmaDoubleDoubleDouble">
            <summary>设置 MassIndexCalculator.CalcNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.CalculateIRefinedSeriesInt32Int32">
            <summary>设置 MassIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 movingAveragePointsCount, Int32 sumPointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.CalculatedGet">
            <summary>设置 MassIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 MassIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32Int32">
            <summary>设置 MassIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 movingAveragePointsCount, Int32 sumPointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.MaxYGet">
            <summary>设置 MassIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 MassIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.MinYGet">
            <summary>设置 MassIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.AllInstances.MinYSetDouble">
            <summary>设置 MassIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.CalcNextEmaDoubleDoubleDouble">
            <summary>设置 MassIndexCalculator.CalcNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.CalculateIRefinedSeriesInt32Int32">
            <summary>设置 MassIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 movingAveragePointsCount, Int32 sumPointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.CalculatedGet">
            <summary>设置 MassIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.CalculatedSetBoolean">
            <summary>设置 MassIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.Constructor">
            <summary>设置 MassIndexCalculator.MassIndexCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.IsParametersCorrectIRefinedSeriesInt32Int32">
            <summary>设置 MassIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 movingAveragePointsCount, Int32 sumPointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.MaxYGet">
            <summary>设置 MassIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.MaxYSetDouble">
            <summary>设置 MassIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.MinYGet">
            <summary>设置 MassIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMassIndexCalculator.MinYSetDouble">
            <summary>设置 MassIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator">
            <summary>DevExpress.Charts.Native.MaxAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.#ctor(DevExpress.Charts.Native.MaxAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 MaxAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 MaxAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxAggregationCalculator.Constructor">
            <summary>设置 MaxAggregationCalculator.MaxAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior">
            <summary>DevExpress.Charts.Native.MaxValueFilterBehavior 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.#ctor(DevExpress.Charts.Native.MaxValueFilterBehavior)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.AllInstances.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 MaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.Constructor">
            <summary>设置 MaxValueFilterBehavior.MaxValueFilterBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMaxValueFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 MaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase">
            <summary>DevExpress.Charts.Native.MeasureUnitsCalculatorBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.#ctor(DevExpress.Charts.Native.MeasureUnitsCalculatorBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.CalculateAutoMeasureUnitDoubleDoubleDoubleInt32">
            <summary>设置 MeasureUnitsCalculatorBase.CalculateAutoMeasureUnit(Double wholeRange, Double visualRange, Double visualRangeLength, Int32 pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMeasureUnitsCalculatorBase.Constructor">
            <summary>设置 MeasureUnitsCalculatorBase.MeasureUnitsCalculatorBase() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator">
            <summary>DevExpress.Charts.Native.MedianPriceCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.#ctor(DevExpress.Charts.Native.MedianPriceCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.AllInstances.CalculateIRefinedSeries">
            <summary>设置 MedianPriceCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.AllInstances.CalculatedGet">
            <summary>设置 MedianPriceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 MedianPriceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.AllInstances.IsParameterCorrectIRefinedSeries">
            <summary>设置 MedianPriceCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.CalculateIRefinedSeries">
            <summary>设置 MedianPriceCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.CalculatedGet">
            <summary>设置 MedianPriceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.CalculatedSetBoolean">
            <summary>设置 MedianPriceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.Constructor">
            <summary>设置 MedianPriceCalculator.MedianPriceCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMedianPriceCalculator.IsParameterCorrectIRefinedSeries">
            <summary>设置 MedianPriceCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator">
            <summary>DevExpress.Charts.Native.MinAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.#ctor(DevExpress.Charts.Native.MinAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 MinAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 MinAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinAggregationCalculator.Constructor">
            <summary>设置 MinAggregationCalculator.MinAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMinMaxValues">
            <summary>DevExpress.Charts.Native.MinMaxValues 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.CalculateCenterIMinMaxValues">
            <summary>设置 MinMaxValues.CalculateCenter(IMinMaxValues minMaxValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.CloneIMinMaxValues">
            <summary>设置 MinMaxValues.Clone(IMinMaxValues value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.EmptyGet">
            <summary>设置 MinMaxValues.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.EqualityOpMinMaxValuesMinMaxValues">
            <summary>设置 MinMaxValues.op_Equality(MinMaxValues a, MinMaxValues b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.InequalityOpMinMaxValuesMinMaxValues">
            <summary>设置 MinMaxValues.op_Inequality(MinMaxValues a, MinMaxValues b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.IntersectionIMinMaxValuesIMinMaxValues">
            <summary>设置 MinMaxValues.Intersection(IMinMaxValues first, IMinMaxValues second) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.IsEmptyValueIMinMaxValues">
            <summary>设置 MinMaxValues.IsEmptyValue(IMinMaxValues value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.NotEmptyIMinMaxValues">
            <summary>设置 MinMaxValues.NotEmpty(IMinMaxValues value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.UnionMinMaxValuesDouble">
            <summary>设置 MinMaxValues.Union(MinMaxValues a, Double b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMinMaxValues.UnionMinMaxValuesMinMaxValues">
            <summary>设置 MinMaxValues.Union(MinMaxValues a, MinMaxValues b) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator">
            <summary>DevExpress.Charts.Native.MissingArgumentsCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.#ctor(DevExpress.Charts.Native.MissingArgumentsCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.AllInstances.CreatePointForMissingArgumentDoubleProcessMissingPointsModeNative">
            <summary>设置 MissingArgumentsCalculator.CreatePointForMissingArgument(Double internalArgument, ProcessMissingPointsModeNative processMissingPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.AllInstances.EqualValuesDoubleDoubleDouble">
            <summary>设置 MissingArgumentsCalculator.EqualValues(Double value1, Double value2, Double epsilon) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.AllInstances.FillMissingArgumentsIListOfRefinedPointProcessMissingPointsModeNative">
            <summary>设置 MissingArgumentsCalculator.FillMissingArguments(IList`1&lt;RefinedPoint&gt; sourcePoints, ProcessMissingPointsModeNative processMissingPoints) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.ConstructorAxisScaleTypeMapISeries">
            <summary>设置 MissingArgumentsCalculator.MissingArgumentsCalculator(AxisScaleTypeMap axisXScaleMap, ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.CreatePointForMissingArgumentDoubleProcessMissingPointsModeNative">
            <summary>设置 MissingArgumentsCalculator.CreatePointForMissingArgument(Double internalArgument, ProcessMissingPointsModeNative processMissingPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.EqualValuesDoubleDoubleDouble">
            <summary>设置 MissingArgumentsCalculator.EqualValues(Double value1, Double value2, Double epsilon) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMissingArgumentsCalculator.FillMissingArgumentsIListOfRefinedPointProcessMissingPointsModeNative">
            <summary>设置 MissingArgumentsCalculator.FillMissingArguments(IList`1&lt;RefinedPoint&gt; sourcePoints, ProcessMissingPointsModeNative processMissingPoints) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.MovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.#ctor(DevExpress.Charts.Native.MovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.CalculateEnvelopeDataListOfGRealPoint2DDouble">
            <summary>设置 MovingAverageCalculator.CalculateEnvelopeData(List`1&lt;GRealPoint2D&gt; movingAverageData, Double envelopePercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternalMovingAverageKindInternalDouble">
            <summary>设置 MovingAverageCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel, MovingAverageKindInternal kind, Double envelopePercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.EnvelopeDataCalculatedGet">
            <summary>设置 MovingAverageCalculator.get_EnvelopeDataCalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.LowerEnvelopeDataGet">
            <summary>设置 MovingAverageCalculator.get_LowerEnvelopeData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.MovingAverageDataCalculatedGet">
            <summary>设置 MovingAverageCalculator.get_MovingAverageDataCalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.MovingAverageDataCalculatedSetBoolean">
            <summary>设置 MovingAverageCalculator.set_MovingAverageDataCalculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.MovingAverageDataGet">
            <summary>设置 MovingAverageCalculator.get_MovingAverageData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.AllInstances.UpperEnvelopeDataGet">
            <summary>设置 MovingAverageCalculator.get_UpperEnvelopeData() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.CalculateEnvelopeDataListOfGRealPoint2DDouble">
            <summary>设置 MovingAverageCalculator.CalculateEnvelopeData(List`1&lt;GRealPoint2D&gt; movingAverageData, Double envelopePercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.CalculateIRefinedSeriesInt32ValueLevelInternalMovingAverageKindInternalDouble">
            <summary>设置 MovingAverageCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel, MovingAverageKindInternal kind, Double envelopePercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.Constructor">
            <summary>设置 MovingAverageCalculator.MovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.EnvelopeDataCalculatedGet">
            <summary>设置 MovingAverageCalculator.get_EnvelopeDataCalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.LowerEnvelopeDataGet">
            <summary>设置 MovingAverageCalculator.get_LowerEnvelopeData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.MovingAverageDataCalculatedGet">
            <summary>设置 MovingAverageCalculator.get_MovingAverageDataCalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.MovingAverageDataCalculatedSetBoolean">
            <summary>设置 MovingAverageCalculator.set_MovingAverageDataCalculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.MovingAverageDataGet">
            <summary>设置 MovingAverageCalculator.get_MovingAverageData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageCalculator.UpperEnvelopeDataGet">
            <summary>设置 MovingAverageCalculator.get_UpperEnvelopeData() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator">
            <summary>DevExpress.Charts.Native.MovingAverageConvergenceDivergenceCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.#ctor(DevExpress.Charts.Native.MovingAverageConvergenceDivergenceCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.CalculateIRefinedSeriesInt32Int32Int32ValueLevelInternal">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.Calculate(IRefinedSeries refinedSeries, Int32 shortPeriod, Int32 longPeriod, Int32 smoothingPeriod, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.CalculateNextEmaDoubleDoubleDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.CalculateNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.CalculatedGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32Int32Int32ValueLevelInternal">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 shortPeriod, Int32 longPeriod, Int32 smoothingPeriod, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MacdPointsGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MacdPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MacdPointsSetListOfGRealPoint2D">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MacdPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MaxYGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MinYGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.MinYSetDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.SignalPointsGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_SignalPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.AllInstances.SignalPointsSetListOfGRealPoint2D">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_SignalPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.CalculateIRefinedSeriesInt32Int32Int32ValueLevelInternal">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.Calculate(IRefinedSeries refinedSeries, Int32 shortPeriod, Int32 longPeriod, Int32 smoothingPeriod, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.CalculateNextEmaDoubleDoubleDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.CalculateNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.CalculatedGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.CalculatedSetBoolean">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.Constructor">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.MovingAverageConvergenceDivergenceCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.IsParametersCorrectIRefinedSeriesInt32Int32Int32ValueLevelInternal">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 shortPeriod, Int32 longPeriod, Int32 smoothingPeriod, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MacdPointsGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MacdPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MacdPointsSetListOfGRealPoint2D">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MacdPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MaxYGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MaxYSetDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MinYGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.MinYSetDouble">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.SignalPointsGet">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.get_SignalPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimMovingAverageConvergenceDivergenceCalculator.SignalPointsSetListOfGRealPoint2D">
            <summary>设置 MovingAverageConvergenceDivergenceCalculator.set_SignalPoints(List`1&lt;GRealPoint2D&gt; value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNativeRange">
            <summary>DevExpress.Charts.Native.NativeRange 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNativeRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNativeRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNativeRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNativeRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNativeRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer">
            <summary>DevExpress.Charts.Native.NestedDoughnutInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.#ctor(DevExpress.Charts.Native.NestedDoughnutInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetDoubleArrayValueIListOfDoubleInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetDoubleArrayValue(IList`1&lt;Double&gt; array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetExplodedFactorInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetExplodedFactor(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetHoleRadiusInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetHoleRadius(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetIsExplodedInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetIsExploded(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetNormalizedWeightInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetNormalizedWeight(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetStartOffsetInPixelsInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetStartOffsetInPixels(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetStartOffsetInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetStartOffset(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.GetTotalGroupIndentInPixelsInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetTotalGroupIndentInPixels(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.RecalculateCoreInt32">
            <summary>设置 NestedDoughnutInteractionContainer.RecalculateCore(Int32 groupsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.AllInstances.UpdateInteractionKeys">
            <summary>设置 NestedDoughnutInteractionContainer.UpdateInteractionKeys() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.ConstructorISeriesView">
            <summary>设置 NestedDoughnutInteractionContainer.NestedDoughnutInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetDoubleArrayValueIListOfDoubleInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetDoubleArrayValue(IList`1&lt;Double&gt; array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetExplodedFactorInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetExplodedFactor(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetHoleRadiusInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetHoleRadius(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetIsExplodedInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetIsExploded(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetNormalizedWeightInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetNormalizedWeight(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetStartOffsetInPixelsInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetStartOffsetInPixels(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetStartOffsetInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetStartOffset(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.GetTotalGroupIndentInPixelsInt32">
            <summary>设置 NestedDoughnutInteractionContainer.GetTotalGroupIndentInPixels(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.RecalculateCoreInt32">
            <summary>设置 NestedDoughnutInteractionContainer.RecalculateCore(Int32 groupsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNestedDoughnutInteractionContainer.UpdateInteractionKeys">
            <summary>设置 NestedDoughnutInteractionContainer.UpdateInteractionKeys() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.NormalizedValuesCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.NormalizedValuesCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.AllInstances.CalculateNormalizedValueISeriesPoint">
            <summary>设置 NormalizedValuesCalculator.CalculateNormalizedValue(ISeriesPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.AllInstances.PointsGet">
            <summary>设置 NormalizedValuesCalculator.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.AllInstances.SeriesGet">
            <summary>设置 NormalizedValuesCalculator.get_Series() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.CalculateNormalizedValueISeriesPoint">
            <summary>设置 NormalizedValuesCalculator.CalculateNormalizedValue(ISeriesPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.ConstructorISeries">
            <summary>设置 NormalizedValuesCalculator.NormalizedValuesCalculator(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.GetPointValueISeriesPoint">
            <summary>设置 NormalizedValuesCalculator.GetPointValue(ISeriesPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.PointsGet">
            <summary>设置 NormalizedValuesCalculator.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNormalizedValuesCalculator.SeriesGet">
            <summary>设置 NormalizedValuesCalculator.get_Series() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore">
            <summary>DevExpress.Charts.Native.NumericMeasureUnitsCalculatorCore 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.#ctor(DevExpress.Charts.Native.NumericMeasureUnitsCalculatorCore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.CreateUnitSelector">
            <summary>设置 NumericMeasureUnitsCalculatorCore.CreateUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.NumericScaleOptionsGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_NumericScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.ScaleOptionsGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_ScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.UpdateAutomaticGridDoubleDouble">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticGrid(Double measureUnit, Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.UpdateAutomaticUnitsDoubleInt32">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticUnits(Double measureUnit, Int32 pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.AllInstances.UseMinMeasureUnitGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.ConstructorIAxisData">
            <summary>设置 NumericMeasureUnitsCalculatorCore.NumericMeasureUnitsCalculatorCore(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.CreateUnitSelector">
            <summary>设置 NumericMeasureUnitsCalculatorCore.CreateUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.NumericScaleOptionsGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_NumericScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.ScaleOptionsGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_ScaleOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.UpdateAutomaticGridDoubleDouble">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticGrid(Double measureUnit, Double pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.UpdateAutomaticUnitsDoubleInt32">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticUnits(Double measureUnit, Int32 pixelsPerUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericMeasureUnitsCalculatorCore.UseMinMeasureUnitGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper">
            <summary>DevExpress.Charts.Native.NumericOptionsHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.GetFormatStringINumericOptions">
            <summary>设置 NumericOptionsHelper.GetFormatString(INumericOptions options) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericOptionsHelper.GetValueTextDoubleINumericOptions">
            <summary>设置 NumericOptionsHelper.GetValueText(Double value, INumericOptions options) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector">
            <summary>DevExpress.Charts.Native.NumericUnitSelector 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.#ctor(DevExpress.Charts.Native.NumericUnitSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.AllInstances.UpdateActiveUnitsDoubleDouble">
            <summary>设置 NumericUnitSelector.UpdateActiveUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.AutoMeasureUnitStepGet">
            <summary>设置 NumericUnitSelector.get_AutoMeasureUnitStep() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.Constructor">
            <summary>设置 NumericUnitSelector.NumericUnitSelector() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.RoundMeasureUnitDouble">
            <summary>设置 NumericUnitSelector.RoundMeasureUnit(Double measureUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericUnitSelector.UpdateActiveUnitsDoubleDouble">
            <summary>设置 NumericUnitSelector.UpdateActiveUnits(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.NumericalAxisRangeUpdateStrategy 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.NumericalAxisRangeUpdateStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.AllInstances.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.AllInstances.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.AllInstances.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.ConstructorIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeries">
            <summary>设置 NumericalAxisRangeUpdateStrategy.NumericalAxisRangeUpdateStrategy(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.NumericalLogarithmicAxisRangeUpdateStrategy 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.NumericalLogarithmicAxisRangeUpdateStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances.IsRadarSeries">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.IsRadarSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.AllInstances.RoundLogarithmicValueDoubleLogarithmicTransformationDouble">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.RoundLogarithmicValue(Double value, LogarithmicTransformation logarithmicTransformation, Double powerOffset) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.ConstructorIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeries">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.NumericalLogarithmicAxisRangeUpdateStrategy(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.IsRadarSeries">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.IsRadarSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimNumericalLogarithmicAxisRangeUpdateStrategy.RoundLogarithmicValueDoubleLogarithmicTransformationDouble">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.RoundLogarithmicValue(Double value, LogarithmicTransformation logarithmicTransformation, Double powerOffset) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion">
            <summary>DevExpress.Charts.Native.ObjectToStringConversion 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.ObjectToStringObject">
            <summary>设置 ObjectToStringConversion.ObjectToString(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectToStringConversion.StringToObjectString">
            <summary>设置 ObjectToStringConversion.StringToObject(String str) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter">
            <summary>DevExpress.Charts.Native.ObjectTypeConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.#ctor(DevExpress.Charts.Native.ObjectTypeConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ObjectTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ObjectTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ObjectTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ObjectTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.Constructor">
            <summary>设置 ObjectTypeConverter.ObjectTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ObjectTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimObjectTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ObjectTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo">
            <summary>DevExpress.Charts.Native.OnLoadEndUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.#ctor(DevExpress.Charts.Native.OnLoadEndUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOnLoadEndUpdateInfo.ConstructorObject">
            <summary>设置 OnLoadEndUpdateInfo.OnLoadEndUpdateInfo(Object sender) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx">
            <summary>DevExpress.Charts.Native.OutOfBoundsCheckerEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.#ctor(DevExpress.Charts.Native.OutOfBoundsCheckerEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.AxisGet">
            <summary>设置 OutOfBoundsCheckerEx.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.CheckOutOfBoundsGRealRect2D">
            <summary>设置 OutOfBoundsCheckerEx.CheckOutOfBounds(GRealRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.GetCorrectedWholeRange">
            <summary>设置 OutOfBoundsCheckerEx.GetCorrectedWholeRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.MaxMarginInPixelsIAxisDataDouble">
            <summary>设置 OutOfBoundsCheckerEx.MaxMarginInPixels(IAxisData axis, Double pixelPerAxisUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.MinMarginInPixelsIAxisDataDouble">
            <summary>设置 OutOfBoundsCheckerEx.MinMarginInPixels(IAxisData axis, Double pixelPerAxisUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AllInstances.NeedCorrectionGet">
            <summary>设置 OutOfBoundsCheckerEx.get_NeedCorrection() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.AxisGet">
            <summary>设置 OutOfBoundsCheckerEx.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.CheckOutOfBoundsGRealRect2D">
            <summary>设置 OutOfBoundsCheckerEx.CheckOutOfBounds(GRealRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.ConstructorIAxisDataBooleanGRect2DIMinMaxValues">
            <summary>设置 OutOfBoundsCheckerEx.OutOfBoundsCheckerEx(IAxisData axis, Boolean isHorizontal, GRect2D visualRangeBounds, IMinMaxValues axisInterval) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.GetCorrectedWholeRange">
            <summary>设置 OutOfBoundsCheckerEx.GetCorrectedWholeRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.MaxMarginInPixelsIAxisDataDouble">
            <summary>设置 OutOfBoundsCheckerEx.MaxMarginInPixels(IAxisData axis, Double pixelPerAxisUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.MinMarginInPixelsIAxisDataDouble">
            <summary>设置 OutOfBoundsCheckerEx.MinMarginInPixels(IAxisData axis, Double pixelPerAxisUnit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimOutOfBoundsCheckerEx.NeedCorrectionGet">
            <summary>设置 OutOfBoundsCheckerEx.get_NeedCorrection() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer">
            <summary>DevExpress.Charts.Native.PaneAxesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.#ctor(DevExpress.Charts.Native.PaneAxesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.AxesGet">
            <summary>设置 PaneAxesContainer.get_Axes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.AxesXGet">
            <summary>设置 PaneAxesContainer.get_AxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.AxesYGet">
            <summary>设置 PaneAxesContainer.get_AxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.BeginZoomingZoomingKind">
            <summary>设置 PaneAxesContainer.BeginZooming(ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.CanScrollInt32Int32Boolean">
            <summary>设置 PaneAxesContainer.CanScroll(Int32 dx, Int32 dy, Boolean useReverse) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.CanScrollToScrollingOrientation">
            <summary>设置 PaneAxesContainer.CanScrollTo(ScrollingOrientation orientation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.CanZoomIn">
            <summary>设置 PaneAxesContainer.CanZoomIn() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.CanZoomInAxisIAxisData">
            <summary>设置 PaneAxesContainer.CanZoomInAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.CanZoomOutGet">
            <summary>设置 PaneAxesContainer.get_CanZoomOut() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.FinishScrollingScrollingOrientationRangesSnapshotNavigationType">
            <summary>设置 PaneAxesContainer.FinishScrolling(ScrollingOrientation scrollingOrientation, RangesSnapshot rangesDiapason, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.FinishZoomingRangesSnapshotNavigationType">
            <summary>设置 PaneAxesContainer.FinishZooming(RangesSnapshot rangesSnapshot, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.GetMaximumZoomPercentIAxisData">
            <summary>设置 PaneAxesContainer.GetMaximumZoomPercent(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.GetZoomRegionPositionGPoint2D">
            <summary>设置 PaneAxesContainer.GetZoomRegionPosition(GPoint2D p) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.InitializePrimaryAndSecondaryAxes">
            <summary>设置 PaneAxesContainer.InitializePrimaryAndSecondaryAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.InitializeTotalSecondaryAxesPaneAxesContainerRepository">
            <summary>设置 PaneAxesContainer.InitializeTotalSecondaryAxes(PaneAxesContainerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.PaneGet">
            <summary>设置 PaneAxesContainer.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.PerformZoomIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.PerformZoom(IAxisData axis, Double newMin, Double newMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.PerformZoomIZoomablePaneGRect2DGPoint2DDoubleDouble">
            <summary>设置 PaneAxesContainer.PerformZoom(IZoomablePane zoomablePane, GRect2D bounds, GPoint2D center, Double xZoomPercent, Double yZoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.PrimaryAxisXGet">
            <summary>设置 PaneAxesContainer.get_PrimaryAxisX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.PrimaryAxisYGet">
            <summary>设置 PaneAxesContainer.get_PrimaryAxisY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.RangeLimitsUpdated">
            <summary>设置 PaneAxesContainer.RangeLimitsUpdated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.RegisterAxisXInt32IAxisData">
            <summary>设置 PaneAxesContainer.RegisterAxisX(Int32 index, IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.RegisterAxisYInt32IAxisData">
            <summary>设置 PaneAxesContainer.RegisterAxisY(Int32 index, IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ResetZoom">
            <summary>设置 PaneAxesContainer.ResetZoom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ResetZoomIAxisData">
            <summary>设置 PaneAxesContainer.ResetZoom(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ScrollInt32Int32BooleanNavigationType">
            <summary>设置 PaneAxesContainer.Scroll(Int32 dx, Int32 dy, Boolean useReverse, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ScrollToDoubleScrollingOrientationNavigationType">
            <summary>设置 PaneAxesContainer.ScrollTo(Double position, ScrollingOrientation orientation, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ScrollingEnabledGet">
            <summary>设置 PaneAxesContainer.get_ScrollingEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SecondaryAxesXGet">
            <summary>设置 PaneAxesContainer.get_SecondaryAxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SecondaryAxesYGet">
            <summary>设置 PaneAxesContainer.get_SecondaryAxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetAxisXRangeDoubleDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisXRange(Double position1, Double position2, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetAxisXZoomDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisXZoom(Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetAxisYRangeDoubleDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisYRange(Double position1, Double position2, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetAxisYZoomDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisYZoom(Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetAxisZoomIAxisDataDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisZoom(IAxisData axis, Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.SetRangeIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.SetRange(IAxisData axis, Double position1, Double position2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.TotalSecondaryAxesXGet">
            <summary>设置 PaneAxesContainer.get_TotalSecondaryAxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.TotalSecondaryAxesYGet">
            <summary>设置 PaneAxesContainer.get_TotalSecondaryAxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.UndoZoomZoomCacheItemEx">
            <summary>设置 PaneAxesContainer.UndoZoom(ZoomCacheItemEx zoomCacheItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomGPoint2DDoubleDoubleDoubleDoubleDoubleDoubleZoomingKindNavigationType">
            <summary>设置 PaneAxesContainer.Zoom(GPoint2D center, Double axisXMin, Double axisXMax, Double axisYMin, Double axisYMax, Double xZoomPercent, Double yZoomPercent, ZoomingKind zoomingKind, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomGPoint2DDoubleZoomingKindNavigationType">
            <summary>设置 PaneAxesContainer.Zoom(GPoint2D center, Double zoomPercent, ZoomingKind zoomingKind, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomIAxisDataDouble">
            <summary>设置 PaneAxesContainer.Zoom(IAxisData axis, Double zoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.Zoom(IAxisData axis, Double position, Double zoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomInGRect2D">
            <summary>设置 PaneAxesContainer.ZoomIn(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomInIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.ZoomIn(IAxisData axis, Double minPercent, Double maxPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AllInstances.ZoomInt32ZoomingKind">
            <summary>设置 PaneAxesContainer.Zoom(Int32 delta, ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AxesGet">
            <summary>设置 PaneAxesContainer.get_Axes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AxesXGet">
            <summary>设置 PaneAxesContainer.get_AxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.AxesYGet">
            <summary>设置 PaneAxesContainer.get_AxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.BeginZoomingZoomingKind">
            <summary>设置 PaneAxesContainer.BeginZooming(ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.Bind(DevExpress.Charts.Native.IPaneAxesContainer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CalcAxisStepIAxisDataInt32Int32Boolean">
            <summary>设置 PaneAxesContainer.CalcAxisStep(IAxisData axis, Int32 step, Int32 size, Boolean useReverse) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanScrollAxisIAxisData">
            <summary>设置 PaneAxesContainer.CanScrollAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanScrollInt32Int32Boolean">
            <summary>设置 PaneAxesContainer.CanScroll(Int32 dx, Int32 dy, Boolean useReverse) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanScrollToScrollingOrientation">
            <summary>设置 PaneAxesContainer.CanScrollTo(ScrollingOrientation orientation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanZoomIn">
            <summary>设置 PaneAxesContainer.CanZoomIn() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanZoomInAxisIAxisData">
            <summary>设置 PaneAxesContainer.CanZoomInAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanZoomOutAxisIAxisData">
            <summary>设置 PaneAxesContainer.CanZoomOutAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.CanZoomOutGet">
            <summary>设置 PaneAxesContainer.get_CanZoomOut() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ClampPositionDouble">
            <summary>设置 PaneAxesContainer.ClampPosition(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ConstructorIPane">
            <summary>设置 PaneAxesContainer.PaneAxesContainer(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.FinishScrollingScrollingOrientationRangesSnapshotNavigationType">
            <summary>设置 PaneAxesContainer.FinishScrolling(ScrollingOrientation scrollingOrientation, RangesSnapshot rangesDiapason, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.FinishZoomingRangesSnapshotNavigationType">
            <summary>设置 PaneAxesContainer.FinishZooming(RangesSnapshot rangesSnapshot, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.GetMaximumZoomPercentIAxisData">
            <summary>设置 PaneAxesContainer.GetMaximumZoomPercent(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.GetScrollBarPositionIAxisData">
            <summary>设置 PaneAxesContainer.GetScrollBarPosition(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.GetScrollBarRelativeSizeIAxisData">
            <summary>设置 PaneAxesContainer.GetScrollBarRelativeSize(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.GetZoomRegionPositionGPoint2D">
            <summary>设置 PaneAxesContainer.GetZoomRegionPosition(GPoint2D p) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.InitializePrimaryAndSecondaryAxes">
            <summary>设置 PaneAxesContainer.InitializePrimaryAndSecondaryAxes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.InitializeTotalSecondaryAxesPaneAxesContainerRepository">
            <summary>设置 PaneAxesContainer.InitializeTotalSecondaryAxes(PaneAxesContainerRepository repository) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.InternalToNativeAxisScaleTypeMapDouble">
            <summary>设置 PaneAxesContainer.InternalToNative(AxisScaleTypeMap scaleMap, Double internalValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.PaneGet">
            <summary>设置 PaneAxesContainer.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.PerformZoomIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.PerformZoom(IAxisData axis, Double newMin, Double newMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.PerformZoomIZoomablePaneGRect2DGPoint2DDoubleDouble">
            <summary>设置 PaneAxesContainer.PerformZoom(IZoomablePane zoomablePane, GRect2D bounds, GPoint2D center, Double xZoomPercent, Double yZoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.PrimaryAxisXGet">
            <summary>设置 PaneAxesContainer.get_PrimaryAxisX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.PrimaryAxisYGet">
            <summary>设置 PaneAxesContainer.get_PrimaryAxisY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.RangeLimitsUpdated">
            <summary>设置 PaneAxesContainer.RangeLimitsUpdated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.RegisterAxisXInt32IAxisData">
            <summary>设置 PaneAxesContainer.RegisterAxisX(Int32 index, IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.RegisterAxisYInt32IAxisData">
            <summary>设置 PaneAxesContainer.RegisterAxisY(Int32 index, IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ResetZoom">
            <summary>设置 PaneAxesContainer.ResetZoom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ResetZoomIAxisData">
            <summary>设置 PaneAxesContainer.ResetZoom(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ScrollIAxisDataInt32Int32Boolean">
            <summary>设置 PaneAxesContainer.Scroll(IAxisData axis, Int32 step, Int32 size, Boolean useReverse) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ScrollInt32Int32BooleanNavigationType">
            <summary>设置 PaneAxesContainer.Scroll(Int32 dx, Int32 dy, Boolean useReverse, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ScrollToDoubleScrollingOrientationNavigationType">
            <summary>设置 PaneAxesContainer.ScrollTo(Double position, ScrollingOrientation orientation, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ScrollToIAxisDataDouble">
            <summary>设置 PaneAxesContainer.ScrollTo(IAxisData axis, Double position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ScrollingEnabledGet">
            <summary>设置 PaneAxesContainer.get_ScrollingEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SecondaryAxesXGet">
            <summary>设置 PaneAxesContainer.get_SecondaryAxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SecondaryAxesYGet">
            <summary>设置 PaneAxesContainer.get_SecondaryAxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetAxisXRangeDoubleDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisXRange(Double position1, Double position2, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetAxisXZoomDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisXZoom(Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetAxisYRangeDoubleDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisYRange(Double position1, Double position2, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetAxisYZoomDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisYZoom(Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetAxisZoomIAxisDataDoubleNavigationType">
            <summary>设置 PaneAxesContainer.SetAxisZoom(IAxisData axis, Double factor, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetMinMaxIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.SetMinMax(IAxisData axis, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.SetRangeIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.SetRange(IAxisData axis, Double position1, Double position2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.TotalSecondaryAxesXGet">
            <summary>设置 PaneAxesContainer.get_TotalSecondaryAxesX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.TotalSecondaryAxesYGet">
            <summary>设置 PaneAxesContainer.get_TotalSecondaryAxesY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.TransformITransformationIMinMaxValues">
            <summary>设置 PaneAxesContainer.Transform(ITransformation transformation, IMinMaxValues minMaxValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.UndoZoomZoomCacheItemEx">
            <summary>设置 PaneAxesContainer.UndoZoom(ZoomCacheItemEx zoomCacheItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomGPoint2DDoubleDoubleDoubleDoubleDoubleDoubleZoomingKindNavigationType">
            <summary>设置 PaneAxesContainer.Zoom(GPoint2D center, Double axisXMin, Double axisXMax, Double axisYMin, Double axisYMax, Double xZoomPercent, Double yZoomPercent, ZoomingKind zoomingKind, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomGPoint2DDoubleZoomingKindNavigationType">
            <summary>设置 PaneAxesContainer.Zoom(GPoint2D center, Double zoomPercent, ZoomingKind zoomingKind, NavigationType navigationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomIAxisDataDouble">
            <summary>设置 PaneAxesContainer.Zoom(IAxisData axis, Double zoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.Zoom(IAxisData axis, Double position, Double zoomPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomInGRect2D">
            <summary>设置 PaneAxesContainer.ZoomIn(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomInIAxisDataDoubleDouble">
            <summary>设置 PaneAxesContainer.ZoomIn(IAxisData axis, Double minPercent, Double maxPercent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainer.ZoomInt32ZoomingKind">
            <summary>设置 PaneAxesContainer.Zoom(Int32 delta, ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository">
            <summary>DevExpress.Charts.Native.PaneAxesContainerRepository 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.#ctor(DevExpress.Charts.Native.PaneAxesContainerRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.AllInstances.GetContaiterIPane">
            <summary>设置 PaneAxesContainerRepository.GetContaiter(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.AllInstances.UpdateRanges">
            <summary>设置 PaneAxesContainerRepository.UpdateRanges() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.AllInstances.ValuesGet">
            <summary>设置 PaneAxesContainerRepository.get_Values() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.ConstructorIAxisDataIAxisDataIEnumerableOfIAxisDataIEnumerableOfIAxisDataIListOfIPaneIEnumerableOfIRefinedSeries">
            <summary>设置 PaneAxesContainerRepository.PaneAxesContainerRepository(IAxisData primaryAxisX, IAxisData primaryAxisY, IEnumerable`1&lt;IAxisData&gt; secondaryAxesX, IEnumerable`1&lt;IAxisData&gt; secondaryAxesY, IList`1&lt;IPane&gt; actualPanes, IEnumerable`1&lt;IRefinedSeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.GetContaiterIPane">
            <summary>设置 PaneAxesContainerRepository.GetContaiter(IPane pane) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.UpdateRanges">
            <summary>设置 PaneAxesContainerRepository.UpdateRanges() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPaneAxesContainerRepository.ValuesGet">
            <summary>设置 PaneAxesContainerRepository.get_Values() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider">
            <summary>DevExpress.Charts.Native.PatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.#ctor(DevExpress.Charts.Native.PatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.AllInstances.ContextGet">
            <summary>设置 PatternDataProvider.get_Context() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.AllInstances.ContextSetObject">
            <summary>设置 PatternDataProvider.set_Context(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.AllInstances.GetTextString">
            <summary>设置 PatternDataProvider.GetText(String format) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.Constructor">
            <summary>设置 PatternDataProvider.PatternDataProvider() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.ContextGet">
            <summary>设置 PatternDataProvider.get_Context() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.ContextSetObject">
            <summary>设置 PatternDataProvider.set_Context(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternDataProvider.GetTextString">
            <summary>设置 PatternDataProvider.GetText(String format) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource">
            <summary>DevExpress.Charts.Native.PatternEditorValuesSource 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.#ctor(DevExpress.Charts.Native.PatternEditorValuesSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.ArgumentDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.CloseValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_CloseValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.DevExpressChartsNativeIPatternHolderGetDataProviderPatternConstants">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.HighValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.LowValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.OpenValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_OpenValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.PercentValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_PercentValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.PointHintDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_PointHint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.PointPatternDevExpressChartsNativeIPatternHolderget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternHolder.get_PointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.SeriesDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.SeriesGroupDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_SeriesGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.Value1DevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.Value2DevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.ValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.ValueDurationDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_ValueDuration() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.AllInstances.WeightDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Weight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ArgumentDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.Bind(DevExpress.Charts.Native.IPatternHolder)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.Bind(DevExpress.Charts.Native.IPatternValuesSource)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.CloseValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_CloseValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ConstructorObject">
            <summary>设置 PatternEditorValuesSource.PatternEditorValuesSource(Object axisValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ConstructorObjectObject">
            <summary>设置 PatternEditorValuesSource.PatternEditorValuesSource(Object argument, Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ConstructorObjectObjectStringObject">
            <summary>设置 PatternEditorValuesSource.PatternEditorValuesSource(Object argument, Object value, String series, Object seriesGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.DevExpressChartsNativeIPatternHolderGetDataProviderPatternConstants">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.HighValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_HighValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.LowValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_LowValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.OpenValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_OpenValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.PercentValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_PercentValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.PointHintDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_PointHint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.PointPatternDevExpressChartsNativeIPatternHolderget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternHolder.get_PointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.SeriesDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.SeriesGroupDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_SeriesGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.Value1DevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.Value2DevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ValueDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.ValueDurationDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_ValueDuration() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternEditorValuesSource.WeightDevExpressChartsNativeIPatternValuesSourceget">
            <summary>设置 PatternEditorValuesSource.DevExpress.Charts.Native.IPatternValuesSource.get_Weight() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternParser">
            <summary>DevExpress.Charts.Native.PatternParser 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternParser.#ctor(DevExpress.Charts.Native.PatternParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances.GetText">
            <summary>设置 PatternParser.GetText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances.Parse">
            <summary>设置 PatternParser.Parse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances.PrepareFragmentStringNullableOfPatternConstantsOutStringOut">
            <summary>设置 PatternParser.PrepareFragment(String fragment, Nullable`1&lt;PatternConstants&gt;&amp; patternConstant, String&amp; format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances.SetContextObjectArray">
            <summary>设置 PatternParser.SetContext(Object[] contexts) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.AllInstances.SplitStringStringCharChar">
            <summary>设置 PatternParser.SplitString(String splittingString, Char leftSeparator, Char rightSeparator) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.ConstructorStringIPatternHolder">
            <summary>设置 PatternParser.PatternParser(String pattern, IPatternHolder patternHolder) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.FullStackedToolTipPatternStringString">
            <summary>设置 PatternParser.FullStackedToolTipPattern(String argumentFormat, String valueFormat) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.GetText">
            <summary>设置 PatternParser.GetText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.Parse">
            <summary>设置 PatternParser.Parse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.PrepareFragmentStringNullableOfPatternConstantsOutStringOut">
            <summary>设置 PatternParser.PrepareFragment(String fragment, Nullable`1&lt;PatternConstants&gt;&amp; patternConstant, String&amp; format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.SetContextObjectArray">
            <summary>设置 PatternParser.SetContext(Object[] contexts) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.SplitStringStringCharChar">
            <summary>设置 PatternParser.SplitString(String splittingString, Char leftSeparator, Char rightSeparator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternParser.StaticConstructor">
            <summary>设置 PatternParser.PatternParser() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPatternUtils">
            <summary>DevExpress.Charts.Native.PatternUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPatternUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ConstructDefaultPatternIAxisData">
            <summary>设置 PatternUtils.ConstructDefaultPattern(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.CorrectTextForPatternString">
            <summary>设置 PatternUtils.CorrectTextForPattern(String pattern) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ExtractElementStringStringOut">
            <summary>设置 PatternUtils.ExtractElement(String pattern, String&amp; element) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.FormatObjectString">
            <summary>设置 PatternUtils.Format(Object value, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.FormatTimeSpanTimeSpanString">
            <summary>设置 PatternUtils.FormatTimeSpan(TimeSpan value, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.GetArgumentFormatString">
            <summary>设置 PatternUtils.GetArgumentFormat(String pattern) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.GetAxisLabelFormatString">
            <summary>设置 PatternUtils.GetAxisLabelFormat(String pattern) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.GetCustomDateTimeFormats">
            <summary>设置 PatternUtils.GetCustomDateTimeFormats() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.GetMaxValuePlaceholderRefinedPointScale">
            <summary>设置 PatternUtils.GetMaxValuePlaceholder(RefinedPoint refinedPoint, Scale valueScaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.GetMinValuePlaceholderRefinedPointScale">
            <summary>设置 PatternUtils.GetMinValuePlaceholder(RefinedPoint refinedPoint, Scale valueScaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ParsePatternString">
            <summary>设置 PatternUtils.ParsePattern(String pattern) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ReplacePlaceholderStringStringString">
            <summary>设置 PatternUtils.ReplacePlaceholder(String pattern, String oldPlaceholder, String newPlaceholder) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ReplacePlaceholderStringStringStringString">
            <summary>设置 PatternUtils.ReplacePlaceholder(String pattern, String oldPlaceholder, String newPlaceholder1, String newPlaceholder2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.ReplacePlaceholderStringStringStringStringString">
            <summary>设置 PatternUtils.ReplacePlaceholder(String pattern, String oldPlaceholder, String newPlaceholder1, String newPlaceholder2, String separator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPatternUtils.SelectFormatDateTimeGridAlignmentNative">
            <summary>设置 PatternUtils.SelectFormat(DateTimeGridAlignmentNative gridAlignment) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior">
            <summary>DevExpress.Charts.Native.PercentMaxValueFilterBehavior 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.#ctor(DevExpress.Charts.Native.PercentMaxValueFilterBehavior)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.AllInstances.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 PercentMaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.Constructor">
            <summary>设置 PercentMaxValueFilterBehavior.PercentMaxValueFilterBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPercentMaxValueFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 PercentMaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.PieNormalizedValuesCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.PieNormalizedValuesCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.AllInstances.CalculateNormValues">
            <summary>设置 PieNormalizedValuesCalculator.CalculateNormValues() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.CalculateNormValues">
            <summary>设置 PieNormalizedValuesCalculator.CalculateNormValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPieNormalizedValuesCalculator.ConstructorISeries">
            <summary>设置 PieNormalizedValuesCalculator.PieNormalizedValuesCalculator(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection">
            <summary>DevExpress.Charts.Native.PointInteractionCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.#ctor(DevExpress.Charts.Native.PointInteractionCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AddIPointInteraction">
            <summary>设置 PointInteractionCollection.Add(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.AddIPointInteraction">
            <summary>设置 PointInteractionCollection.Add(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.BinarySearchIPointInteraction">
            <summary>设置 PointInteractionCollection.BinarySearch(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.Clear">
            <summary>设置 PointInteractionCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.ContainsIPointInteraction">
            <summary>设置 PointInteractionCollection.Contains(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.CountGet">
            <summary>设置 PointInteractionCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.IndexOfIPointInteraction">
            <summary>设置 PointInteractionCollection.IndexOf(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.InsertInt32IPointInteraction">
            <summary>设置 PointInteractionCollection.Insert(Int32 index, IPointInteraction interaction) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.ItemGetInt32">
            <summary>设置 PointInteractionCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.ItemSetInt32IPointInteraction">
            <summary>设置 PointInteractionCollection.set_Item(Int32 index, IPointInteraction value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.RemoveAtInt32">
            <summary>设置 PointInteractionCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.RemoveIPointInteraction">
            <summary>设置 PointInteractionCollection.Remove(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.Sort">
            <summary>设置 PointInteractionCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.SystemCollectionsGenericIEnumerableDevExpressChartsNativeIPointInteractionGetEnumerator">
            <summary>设置 PointInteractionCollection.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.IPointInteraction&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PointInteractionCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.BinarySearchIPointInteraction">
            <summary>设置 PointInteractionCollection.BinarySearch(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.IPointInteraction})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.Clear">
            <summary>设置 PointInteractionCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.ConstructorComparerOfIPointInteraction">
            <summary>设置 PointInteractionCollection.PointInteractionCollection(Comparer`1&lt;IPointInteraction&gt; comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.ContainsIPointInteraction">
            <summary>设置 PointInteractionCollection.Contains(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.CountGet">
            <summary>设置 PointInteractionCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.IndexOfIPointInteraction">
            <summary>设置 PointInteractionCollection.IndexOf(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.InsertInt32IPointInteraction">
            <summary>设置 PointInteractionCollection.Insert(Int32 index, IPointInteraction interaction) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.ItemGetInt32">
            <summary>设置 PointInteractionCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.ItemSetInt32IPointInteraction">
            <summary>设置 PointInteractionCollection.set_Item(Int32 index, IPointInteraction value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.RemoveAtInt32">
            <summary>设置 PointInteractionCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.RemoveIPointInteraction">
            <summary>设置 PointInteractionCollection.Remove(IPointInteraction item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.Sort">
            <summary>设置 PointInteractionCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.SystemCollectionsGenericIEnumerableDevExpressChartsNativeIPointInteractionGetEnumerator">
            <summary>设置 PointInteractionCollection.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.IPointInteraction&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointInteractionCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PointInteractionCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper">
            <summary>DevExpress.Charts.Native.PointOptionsHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.ConstructArgumentTextISeriesISeriesPointINumericOptionsIDateTimeOptions">
            <summary>设置 PointOptionsHelper.ConstructArgumentText(ISeries series, ISeriesPoint point, INumericOptions numericOptions, IDateTimeOptions dateTimeOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.ConvertToPatternPointViewKind">
            <summary>设置 PointOptionsHelper.ConvertToPattern(PointViewKind pointView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointOptionsHelper.ConvertToPointViewString">
            <summary>设置 PointOptionsHelper.ConvertToPointView(String pattern) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider">
            <summary>DevExpress.Charts.Native.PointPatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.#ctor(DevExpress.Charts.Native.PointPatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.CheckContextObject">
            <summary>设置 PointPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.GetDurationValueRefinedPoint">
            <summary>设置 PointPatternDataProvider.GetDurationValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.GetValue">
            <summary>设置 PointPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.GetValueFormRefinedPoint">
            <summary>设置 PointPatternDataProvider.GetValueFormRefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.GetValueFormSeriesPoint">
            <summary>设置 PointPatternDataProvider.GetValueFormSeriesPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.RefinedPointGet">
            <summary>设置 PointPatternDataProvider.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.AllInstances.SeriesPointGet">
            <summary>设置 PointPatternDataProvider.get_SeriesPoint() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.CheckContextObject">
            <summary>设置 PointPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.ConstructorPatternConstantsAxisScaleTypeMap">
            <summary>设置 PointPatternDataProvider.PointPatternDataProvider(PatternConstants patternConstant, AxisScaleTypeMap axisScaleTypeMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.GetDurationValueRefinedPoint">
            <summary>设置 PointPatternDataProvider.GetDurationValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.GetValue">
            <summary>设置 PointPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.GetValueFormRefinedPoint">
            <summary>设置 PointPatternDataProvider.GetValueFormRefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.GetValueFormSeriesPoint">
            <summary>设置 PointPatternDataProvider.GetValueFormSeriesPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.RefinedPointGet">
            <summary>设置 PointPatternDataProvider.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointPatternDataProvider.SeriesPointGet">
            <summary>设置 PointPatternDataProvider.get_SeriesPoint() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis">
            <summary>DevExpress.Charts.Native.PointProjectionOnAxis 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionOnAxis.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane">
            <summary>DevExpress.Charts.Native.PointProjectionsForPane 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.#ctor(DevExpress.Charts.Native.PointProjectionsForPane)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AddAxisXValueIAxisDataDouble">
            <summary>设置 PointProjectionsForPane.AddAxisXValue(IAxisData axis, Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AddAxisYValueIAxisDataDouble">
            <summary>设置 PointProjectionsForPane.AddAxisYValue(IAxisData axis, Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.AddAxisXValueIAxisDataDouble">
            <summary>设置 PointProjectionsForPane.AddAxisXValue(IAxisData axis, Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.AddAxisYValueIAxisDataDouble">
            <summary>设置 PointProjectionsForPane.AddAxisYValue(IAxisData axis, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.AxesXValuesGet">
            <summary>设置 PointProjectionsForPane.get_AxesXValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.AxesYValuesGet">
            <summary>设置 PointProjectionsForPane.get_AxesYValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.GetArgumentByAxisXIAxisData">
            <summary>设置 PointProjectionsForPane.GetArgumentByAxisX(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.GetValueByAxisIAxisDataListOfPointProjectionOnAxis">
            <summary>设置 PointProjectionsForPane.GetValueByAxis(IAxisData axis, List`1&lt;PointProjectionOnAxis&gt; axesValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.GetValueByAxisYIAxisData">
            <summary>设置 PointProjectionsForPane.GetValueByAxisY(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.PaneGet">
            <summary>设置 PointProjectionsForPane.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AllInstances.SetValuesListOfAxisValuePairListOfAxisValuePair">
            <summary>设置 PointProjectionsForPane.SetValues(List`1&lt;AxisValuePair&gt; axesXValues, List`1&lt;AxisValuePair&gt; axesYValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AxesXValuesGet">
            <summary>设置 PointProjectionsForPane.get_AxesXValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.AxesYValuesGet">
            <summary>设置 PointProjectionsForPane.get_AxesYValues() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.ConstructorIPaneInternalCoordinates">
            <summary>设置 PointProjectionsForPane.PointProjectionsForPane(IPane pane, InternalCoordinates cursorCoordinates) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.GetArgumentByAxisXIAxisData">
            <summary>设置 PointProjectionsForPane.GetArgumentByAxisX(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.GetValueByAxisIAxisDataListOfPointProjectionOnAxis">
            <summary>设置 PointProjectionsForPane.GetValueByAxis(IAxisData axis, List`1&lt;PointProjectionOnAxis&gt; axesValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.GetValueByAxisYIAxisData">
            <summary>设置 PointProjectionsForPane.GetValueByAxisY(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.PaneGet">
            <summary>设置 PointProjectionsForPane.get_Pane() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointProjectionsForPane.SetValuesListOfAxisValuePairListOfAxisValuePair">
            <summary>设置 PointProjectionsForPane.SetValues(List`1&lt;AxisValuePair&gt; axesXValues, List`1&lt;AxisValuePair&gt; axesYValues) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsFilter">
            <summary>DevExpress.Charts.Native.PointsFilter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsFilter.#ctor(DevExpress.Charts.Native.PointsFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.AllInstances.EnableGet">
            <summary>设置 PointsFilter.get_Enable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.AllInstances.EnableSetBoolean">
            <summary>设置 PointsFilter.set_Enable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.AllInstances.GeFilteredPointsIListOfRefinedPoint">
            <summary>设置 PointsFilter.GeFilteredPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.AllInstances.RefinedSeriesGet">
            <summary>设置 PointsFilter.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.ConstructorRefinedSeries">
            <summary>设置 PointsFilter.PointsFilter(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.EnableGet">
            <summary>设置 PointsFilter.get_Enable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.EnableSetBoolean">
            <summary>设置 PointsFilter.set_Enable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.GeFilteredPointsIListOfRefinedPoint">
            <summary>设置 PointsFilter.GeFilteredPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsFilter.RefinedSeriesGet">
            <summary>设置 PointsFilter.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ActualCollectionManagerGet">
            <summary>设置 PointsProcessor.get_ActualCollectionManager() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ActualCollectionManagerGet">
            <summary>设置 PointsProcessor.get_ActualCollectionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ClearCache">
            <summary>设置 PointsProcessor.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.DetectScale">
            <summary>设置 PointsProcessor.DetectScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.DetectScaleWithCountersScale">
            <summary>设置 PointsProcessor.DetectScaleWithCounters(Scale initialScale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.GetInitialPointsBoolean">
            <summary>设置 PointsProcessor.GetInitialPoints(Boolean needProcessNewPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.GetPointsForMap">
            <summary>设置 PointsProcessor.GetPointsForMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.GetProcessedPointsBoolean">
            <summary>设置 PointsProcessor.GetProcessedPoints(Boolean shouldSortByArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.GetSortedByArgumentPointsIListOfRefinedPoint">
            <summary>设置 PointsProcessor.GetSortedByArgumentPoints(IList`1&lt;RefinedPoint&gt; intermediate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.HasPositivePointsGet">
            <summary>设置 PointsProcessor.get_HasPositivePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.InitCollections">
            <summary>设置 PointsProcessor.InitCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.InitFilters">
            <summary>设置 PointsProcessor.InitFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.InsurePointProcessor">
            <summary>设置 PointsProcessor.InsurePointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 PointsProcessor.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.IsContainsProcessedPointsGet">
            <summary>设置 PointsProcessor.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.NoArgumentScaleTypeGet">
            <summary>设置 PointsProcessor.get_NoArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 PointsProcessor.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 PointsProcessor.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative sortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.RandomCollectionsGet">
            <summary>设置 PointsProcessor.get_RandomCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.RealCollectionsGet">
            <summary>设置 PointsProcessor.get_RealCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ResetScaleCounters">
            <summary>设置 PointsProcessor.ResetScaleCounters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ScaleCountersGet">
            <summary>设置 PointsProcessor.get_ScaleCounters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.SeriesGet">
            <summary>设置 PointsProcessor.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.SeriesViewGet">
            <summary>设置 PointsProcessor.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ShouldProcessData">
            <summary>设置 PointsProcessor.ShouldProcessData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.ShouldUseAutoGeneratedPointsGet">
            <summary>设置 PointsProcessor.get_ShouldUseAutoGeneratedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.UpdateArgumentScale">
            <summary>设置 PointsProcessor.UpdateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.UpdateData">
            <summary>设置 PointsProcessor.UpdateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.UpdateFilters">
            <summary>设置 PointsProcessor.UpdateFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.UpdateRandomPoints">
            <summary>设置 PointsProcessor.UpdateRandomPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.AllInstances.UpdateScaleCounters">
            <summary>设置 PointsProcessor.UpdateScaleCounters() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ClearCache">
            <summary>设置 PointsProcessor.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ConstructorRefinedSeriesIRefinedSeriesContainer">
            <summary>设置 PointsProcessor.PointsProcessor(RefinedSeries refinedSeries, IRefinedSeriesContainer seriesContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.DetectScale">
            <summary>设置 PointsProcessor.DetectScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.DetectScaleWithCountersScale">
            <summary>设置 PointsProcessor.DetectScaleWithCounters(Scale initialScale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.GetInitialPointsBoolean">
            <summary>设置 PointsProcessor.GetInitialPoints(Boolean needProcessNewPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.GetPointsForMap">
            <summary>设置 PointsProcessor.GetPointsForMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.GetProcessedPointsBoolean">
            <summary>设置 PointsProcessor.GetProcessedPoints(Boolean shouldSortByArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.GetSortedByArgumentPointsIListOfRefinedPoint">
            <summary>设置 PointsProcessor.GetSortedByArgumentPoints(IList`1&lt;RefinedPoint&gt; intermediate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.HasPositivePointsGet">
            <summary>设置 PointsProcessor.get_HasPositivePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.InitCollections">
            <summary>设置 PointsProcessor.InitCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.InitFilters">
            <summary>设置 PointsProcessor.InitFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.InsurePointProcessor">
            <summary>设置 PointsProcessor.InsurePointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 PointsProcessor.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.IsContainsProcessedPointsGet">
            <summary>设置 PointsProcessor.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.NoArgumentScaleTypeGet">
            <summary>设置 PointsProcessor.get_NoArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 PointsProcessor.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 PointsProcessor.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative sortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.RandomCollectionsGet">
            <summary>设置 PointsProcessor.get_RandomCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.RealCollectionsGet">
            <summary>设置 PointsProcessor.get_RealCollections() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ResetScaleCounters">
            <summary>设置 PointsProcessor.ResetScaleCounters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ScaleCountersGet">
            <summary>设置 PointsProcessor.get_ScaleCounters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.SeriesGet">
            <summary>设置 PointsProcessor.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.SeriesViewGet">
            <summary>设置 PointsProcessor.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+BasePointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.BasePointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.AllInstances.CanProcessAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 BasePointProcessor.CanProcess(AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.AllInstances.GetValueISeriesPointInt32AxisScaleTypeMap">
            <summary>设置 BasePointProcessor.GetValue(ISeriesPoint seriesPoint, Int32 valueIndex, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 BasePointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.CanProcessAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 BasePointProcessor.CanProcess(AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.Constructor">
            <summary>设置 BasePointProcessor.BasePointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.GetValueISeriesPointInt32AxisScaleTypeMap">
            <summary>设置 BasePointProcessor.GetValue(ISeriesPoint seriesPoint, Int32 valueIndex, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimBasePointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 BasePointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+FinancialPointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.FinancialPointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 FinancialPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.Constructor">
            <summary>设置 FinancialPointProcessor.FinancialPointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimFinancialPointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 FinancialPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState">
            <summary>DevExpress.Charts.Native.PointsProcessor+RandomPointsState 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.#ctor(DevExpress.Charts.Native.PointsProcessor.RandomPointsState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.ArgumentMeasureUnitGet">
            <summary>设置 RandomPointsState.get_ArgumentMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.ArgumentScaleTypeGet">
            <summary>设置 RandomPointsState.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.EqualsObject">
            <summary>设置 RandomPointsState.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.GetHashCode01">
            <summary>设置 RandomPointsState.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.ValueMeasureUnitGet">
            <summary>设置 RandomPointsState.get_ValueMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.ValueScaleTypeGet">
            <summary>设置 RandomPointsState.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.AllInstances.ViewGet">
            <summary>设置 RandomPointsState.get_View() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ArgumentMeasureUnitGet">
            <summary>设置 RandomPointsState.get_ArgumentMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ArgumentScaleTypeGet">
            <summary>设置 RandomPointsState.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ConstructorISeries">
            <summary>设置 RandomPointsState.RandomPointsState(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.EqualsObject">
            <summary>设置 RandomPointsState.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.GetHashCode">
            <summary>设置 RandomPointsState.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ValueMeasureUnitGet">
            <summary>设置 RandomPointsState.get_ValueMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ValueScaleTypeGet">
            <summary>设置 RandomPointsState.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRandomPointsState.ViewGet">
            <summary>设置 RandomPointsState.get_View() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+RangeBarPointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.RangeBarPointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 RangeBarPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.Constructor">
            <summary>设置 RangeBarPointProcessor.RangeBarPointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimRangeBarPointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 RangeBarPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+ValuePointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.ValuePointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 ValuePointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.Constructor">
            <summary>设置 ValuePointProcessor.ValuePointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimValuePointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 ValuePointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+XYPointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.XYPointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 XYPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.Constructor">
            <summary>设置 XYPointProcessor.XYPointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYPointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 XYPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor+XYWPointProcessor 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.#ctor(DevExpress.Charts.Native.PointsProcessor.XYWPointProcessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.AllInstances.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 XYWPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.Bind(DevExpress.Charts.Native.IPointProcessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.Constructor">
            <summary>设置 XYWPointProcessor.XYWPointProcessor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShimXYWPointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 XYWPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShouldProcessData">
            <summary>设置 PointsProcessor.ShouldProcessData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.ShouldUseAutoGeneratedPointsGet">
            <summary>设置 PointsProcessor.get_ShouldUseAutoGeneratedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.UpdateArgumentScale">
            <summary>设置 PointsProcessor.UpdateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.UpdateData">
            <summary>设置 PointsProcessor.UpdateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.UpdateFilters">
            <summary>设置 PointsProcessor.UpdateFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.UpdateRandomPoints">
            <summary>设置 PointsProcessor.UpdateRandomPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsProcessor.UpdateScaleCounters">
            <summary>设置 PointsProcessor.UpdateScaleCounters() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter">
            <summary>DevExpress.Charts.Native.PointsValueThresholdFilter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.#ctor(DevExpress.Charts.Native.PointsValueThresholdFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.CalculateSumIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.CalculateSum(IList`1&lt;RefinedPoint&gt; list) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ClearCache">
            <summary>设置 PointsValueThresholdFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.CreateBehavior">
            <summary>设置 PointsValueThresholdFilter.CreateBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.FilterPointsIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.FilterTypeGet">
            <summary>设置 PointsValueThresholdFilter.get_FilterType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.FilterTypeSetPointsFilterType">
            <summary>设置 PointsValueThresholdFilter.set_FilterType(PointsFilterType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.GetCachedPoints">
            <summary>设置 PointsValueThresholdFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.GetOptions">
            <summary>设置 PointsValueThresholdFilter.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.IsEnabled">
            <summary>设置 PointsValueThresholdFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.NeedSortedByArgumentPointsGet">
            <summary>设置 PointsValueThresholdFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.OthersArgumentGet">
            <summary>设置 PointsValueThresholdFilter.get_OthersArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.OthersArgumentSetString">
            <summary>设置 PointsValueThresholdFilter.set_OthersArgument(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.PointsRecalculated">
            <summary>设置 PointsValueThresholdFilter.PointsRecalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ProcessOthersPointIPointProcessorAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 PointsValueThresholdFilter.ProcessOthersPoint(IPointProcessor processor, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.RecalculateIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ShowOthersGet">
            <summary>设置 PointsValueThresholdFilter.get_ShowOthers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ShowOthersSetBoolean">
            <summary>设置 PointsValueThresholdFilter.set_ShowOthers(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ThresholdValueGet">
            <summary>设置 PointsValueThresholdFilter.get_ThresholdValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.ThresholdValueSetDouble">
            <summary>设置 PointsValueThresholdFilter.set_ThresholdValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.Update">
            <summary>设置 PointsValueThresholdFilter.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.AllInstances.UpdateOthersPoint">
            <summary>设置 PointsValueThresholdFilter.UpdateOthersPoint() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.CalculateSumIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.CalculateSum(IList`1&lt;RefinedPoint&gt; list) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ClearCache">
            <summary>设置 PointsValueThresholdFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ConstructorRefinedSeries">
            <summary>设置 PointsValueThresholdFilter.PointsValueThresholdFilter(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.CreateBehavior">
            <summary>设置 PointsValueThresholdFilter.CreateBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.FilterPointsIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.FilterTypeGet">
            <summary>设置 PointsValueThresholdFilter.get_FilterType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.FilterTypeSetPointsFilterType">
            <summary>设置 PointsValueThresholdFilter.set_FilterType(PointsFilterType value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.GetCachedPoints">
            <summary>设置 PointsValueThresholdFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.GetOptions">
            <summary>设置 PointsValueThresholdFilter.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.IsEnabled">
            <summary>设置 PointsValueThresholdFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 PointsValueThresholdFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.OthersArgumentGet">
            <summary>设置 PointsValueThresholdFilter.get_OthersArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.OthersArgumentSetString">
            <summary>设置 PointsValueThresholdFilter.set_OthersArgument(String value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.PointsRecalculated">
            <summary>设置 PointsValueThresholdFilter.PointsRecalculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ProcessOthersPointIPointProcessorAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 PointsValueThresholdFilter.ProcessOthersPoint(IPointProcessor processor, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ShowOthersGet">
            <summary>设置 PointsValueThresholdFilter.get_ShowOthers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ShowOthersSetBoolean">
            <summary>设置 PointsValueThresholdFilter.set_ShowOthers(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ThresholdValueGet">
            <summary>设置 PointsValueThresholdFilter.get_ThresholdValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.ThresholdValueSetDouble">
            <summary>设置 PointsValueThresholdFilter.set_ThresholdValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.Update">
            <summary>设置 PointsValueThresholdFilter.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPointsValueThresholdFilter.UpdateOthersPoint">
            <summary>设置 PointsValueThresholdFilter.UpdateOthersPoint() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.#ctor(DevExpress.Charts.Native.PropertyUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.AllInstances.NameGet">
            <summary>设置 PropertyUpdateInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.ConstructorObjectString">
            <summary>设置 PropertyUpdateInfo.PropertyUpdateInfo(Object sender, String name) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo.NameGet">
            <summary>设置 PropertyUpdateInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo`1 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.#ctor(DevExpress.Charts.Native.PropertyUpdateInfo{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.AllInstances.NewValueGet">
            <summary>设置 PropertyUpdateInfo`1.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.AllInstances.OldValueGet">
            <summary>设置 PropertyUpdateInfo`1.get_OldValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.ConstructorObjectStringT0T0">
            <summary>设置 PropertyUpdateInfo`1.PropertyUpdateInfo`1(Object sender, String name, !0 oldValue, !0 newValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.NewValueGet">
            <summary>设置 PropertyUpdateInfo`1.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`1.OldValueGet">
            <summary>设置 PropertyUpdateInfo`1.get_OldValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo`2 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.#ctor(DevExpress.Charts.Native.PropertyUpdateInfo{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.AllInstances.OwnerGet">
            <summary>设置 PropertyUpdateInfo`2.get_Owner() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.ConstructorObjectStringT1T1T0">
            <summary>设置 PropertyUpdateInfo`2.PropertyUpdateInfo`2(Object sender, String name, !1 oldValue, !1 newValue, !0 owner) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimPropertyUpdateInfo`2.OwnerGet">
            <summary>设置 PropertyUpdateInfo`2.get_Owner() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.QualitativeAxisRangeUpdateStrategy 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.QualitativeAxisRangeUpdateStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.DefaultRangeIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.IsAxisContainsValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IsAxisContainsValues(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.RestoreValuesFromVisualRangeInternalRange">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.RestoreValuesFromVisualRange(InternalRange internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.AllInstances.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.ConstructorIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeries">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.QualitativeAxisRangeUpdateStrategy(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.IsAxisContainsValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IsAxisContainsValues(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.RestoreValuesFromVisualRangeInternalRange">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.RestoreValuesFromVisualRange(InternalRange internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimQualitativeAxisRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.RadarAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.RadarAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RadarAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RadarAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 RadarAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.ClosedGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.ConstructorBoolean">
            <summary>设置 RadarAreaGeometryStripCreator.RadarAreaGeometryStripCreator(Boolean closed) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.CreateStrip">
            <summary>设置 RadarAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRadarAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.RandomPointsBatchUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.#ctor(DevExpress.Charts.Native.RandomPointsBatchUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.ConstructorObjectChartCollectionOperationISeriesICollectionOfISeriesPointInt32ICollectionOfISeriesPointInt32">
            <summary>设置 RandomPointsBatchUpdateInfo.RandomPointsBatchUpdateInfo(Object sender, ChartCollectionOperation operation, ISeries series, ICollection`1&lt;ISeriesPoint&gt; oldItem, Int32 oldIndex, ICollection`1&lt;ISeriesPoint&gt; newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.CreateInsertInfoISeries">
            <summary>设置 RandomPointsBatchUpdateInfo.CreateInsertInfo(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRandomPointsBatchUpdateInfo.CreateResetInfoISeries">
            <summary>设置 RandomPointsBatchUpdateInfo.CreateResetInfo(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.RangeAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.RangeAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RangeAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RangeAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 RangeAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.ClosedGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.Constructor">
            <summary>设置 RangeAreaGeometryStripCreator.RangeAreaGeometryStripCreator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.CreateStrip">
            <summary>设置 RangeAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo">
            <summary>DevExpress.Charts.Native.RangeChangedUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.#ctor(DevExpress.Charts.Native.RangeChangedUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.AllInstances.AxisGet">
            <summary>设置 RangeChangedUpdateInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.AllInstances.IsArgumentAxisGet">
            <summary>设置 RangeChangedUpdateInfo.get_IsArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.AllInstances.IsRangeControlGet">
            <summary>设置 RangeChangedUpdateInfo.get_IsRangeControl() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.AxisGet">
            <summary>设置 RangeChangedUpdateInfo.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.ConstructorIAxisRangeDataIAxisDataBooleanBoolean">
            <summary>设置 RangeChangedUpdateInfo.RangeChangedUpdateInfo(IAxisRangeData sender, IAxisData axis, Boolean needUpdate, Boolean isArgumentAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.IsArgumentAxisGet">
            <summary>设置 RangeChangedUpdateInfo.get_IsArgumentAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeChangedUpdateInfo.IsRangeControlGet">
            <summary>设置 RangeChangedUpdateInfo.get_IsRangeControl() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider">
            <summary>DevExpress.Charts.Native.RangeColorizerLegendItemDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.#ctor(DevExpress.Charts.Native.RangeColorizerLegendItemDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.AllInstances.CheckContextObject">
            <summary>设置 RangeColorizerLegendItemDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.AllInstances.GetValue">
            <summary>设置 RangeColorizerLegendItemDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.CheckContextObject">
            <summary>设置 RangeColorizerLegendItemDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.ConstructorPatternConstants">
            <summary>设置 RangeColorizerLegendItemDataProvider.RangeColorizerLegendItemDataProvider(PatternConstants patternConstants) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeColorizerLegendItemDataProvider.GetValue">
            <summary>设置 RangeColorizerLegendItemDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeHelper">
            <summary>DevExpress.Charts.Native.RangeHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeHelper.#ctor(DevExpress.Charts.Native.RangeHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.Constructor">
            <summary>设置 RangeHelper.RangeHelper() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.ResetRangeOnRemoveSeriesFromSeriesGroupsIAxisData">
            <summary>设置 RangeHelper.ResetRangeOnRemoveSeriesFromSeriesGroups(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SetDefaultRangeIAxisData">
            <summary>设置 RangeHelper.SetDefaultRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SetMaxObjectDoubleIAxisRangeData">
            <summary>设置 RangeHelper.SetMax(Object maxValue, Double maxValueInternal, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SetMinObjectDoubleIAxisRangeData">
            <summary>设置 RangeHelper.SetMin(Object minValue, Double minValueInternal, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SetSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeHelper.SetSideMargins(IAxisRangeData range, MinMaxValues sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.StaticConstructor">
            <summary>设置 RangeHelper.RangeHelper() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SynchronizeVisualRangeIWholeAxisRangeDataIVisualAxisRangeDataBoolean">
            <summary>设置 RangeHelper.SynchronizeVisualRange(IWholeAxisRangeData wholeRange, IVisualAxisRangeData visualRange, Boolean needSyncWhisWholeRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.SynchronizeWholeRangeIWholeAxisRangeDataIVisualAxisRangeData">
            <summary>设置 RangeHelper.SynchronizeWholeRange(IWholeAxisRangeData wholeRange, IVisualAxisRangeData visualRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeHelper.ThrowRangeDataIAxisDataIAxisRangeDataIAxisRange">
            <summary>设置 RangeHelper.ThrowRangeData(IAxisData axisData, IAxisRangeData pattern, IAxisRange target) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeIndexes">
            <summary>DevExpress.Charts.Native.RangeIndexes 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.EmptyGet">
            <summary>设置 RangeIndexes.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeIndexes.StaticConstructor">
            <summary>设置 RangeIndexes.RangeIndexes() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction">
            <summary>DevExpress.Charts.Native.RangePointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.#ctor(DevExpress.Charts.Native.RangePointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AddPointRefinedPoint">
            <summary>设置 RangePointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.AddPointRefinedPoint">
            <summary>设置 RangePointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.Clear">
            <summary>设置 RangePointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.CountGet">
            <summary>设置 RangePointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.GetMaxValueISeriesView">
            <summary>设置 RangePointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.GetMinAbsValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.GetMinValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.AllInstances.RemovePointRefinedPoint">
            <summary>设置 RangePointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.Clear">
            <summary>设置 RangePointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.Constructor">
            <summary>设置 RangePointInteraction.RangePointInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.CountGet">
            <summary>设置 RangePointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.GetMaxValueISeriesView">
            <summary>设置 RangePointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.GetMinValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangePointInteraction.RemovePointRefinedPoint">
            <summary>设置 RangePointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo">
            <summary>DevExpress.Charts.Native.RangeResetUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.#ctor(DevExpress.Charts.Native.RangeResetUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.AllInstances.RangeGet">
            <summary>设置 RangeResetUpdateInfo.get_Range() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.ConstructorIAxisRangeData">
            <summary>设置 RangeResetUpdateInfo.RangeResetUpdateInfo(IAxisRangeData sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeResetUpdateInfo.RangeGet">
            <summary>设置 RangeResetUpdateInfo.get_Range() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer">
            <summary>DevExpress.Charts.Native.RangeSeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.#ctor(DevExpress.Charts.Native.RangeSeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.GetAbsMinValue">
            <summary>设置 RangeSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.MaxGet">
            <summary>设置 RangeSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.MinGet">
            <summary>设置 RangeSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.ConstructorISeriesView">
            <summary>设置 RangeSeriesContainer.RangeSeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.GetAbsMinValue">
            <summary>设置 RangeSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.MaxGet">
            <summary>设置 RangeSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.MinGet">
            <summary>设置 RangeSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot">
            <summary>DevExpress.Charts.Native.RangeSnapshot 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.#ctor(DevExpress.Charts.Native.RangeSnapshot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AdjustInternalValueRangeSnapshot">
            <summary>设置 RangeSnapshot.AdjustInternalValue(RangeSnapshot bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AdjustNativValueRangeSnapshotAxisScaleTypeMap">
            <summary>设置 RangeSnapshot.AdjustNativValue(RangeSnapshot bounds, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AdjustRangeSnapshotAxisScaleTypeMap">
            <summary>设置 RangeSnapshot.Adjust(RangeSnapshot bounds, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.AdjustInternalValueRangeSnapshot">
            <summary>设置 RangeSnapshot.AdjustInternalValue(RangeSnapshot bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.AdjustNativValueRangeSnapshotAxisScaleTypeMap">
            <summary>设置 RangeSnapshot.AdjustNativValue(RangeSnapshot bounds, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.AdjustRangeSnapshotAxisScaleTypeMap">
            <summary>设置 RangeSnapshot.Adjust(RangeSnapshot bounds, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.ApplyStateIAxisRangeData">
            <summary>设置 RangeSnapshot.ApplyState(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.DeltaDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Delta() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.DevExpressChartsNativeIMinMaxValuesCalculateCenter">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.CalculateCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.DevExpressChartsNativeIMinMaxValuesIntersectionIMinMaxValues">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.IsSameIAxisRangeData">
            <summary>设置 RangeSnapshot.IsSame(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.IsSameRangeSnapshot">
            <summary>设置 RangeSnapshot.IsSame(RangeSnapshot range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.IsSubsetOfRangeSnapshot">
            <summary>设置 RangeSnapshot.IsSubsetOf(RangeSnapshot range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MaxDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MaxDevExpressChartsNativeIMinMaxValuessetDouble">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.set_Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MaxGet">
            <summary>设置 RangeSnapshot.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MaxValueGet">
            <summary>设置 RangeSnapshot.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MinDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MinDevExpressChartsNativeIMinMaxValuessetDouble">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.set_Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MinGet">
            <summary>设置 RangeSnapshot.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.MinValueGet">
            <summary>设置 RangeSnapshot.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.RefinedValuesGet">
            <summary>设置 RangeSnapshot.get_RefinedValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.AllInstances.RefinedValuesSetMinMaxValues">
            <summary>设置 RangeSnapshot.set_RefinedValues(MinMaxValues value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.ApplyStateIAxisRangeData">
            <summary>设置 RangeSnapshot.ApplyState(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.Bind(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.ConstructorIAxisRangeData">
            <summary>设置 RangeSnapshot.RangeSnapshot(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.ConstructorNativeRangeInternalRangeMinMaxValues">
            <summary>设置 RangeSnapshot.RangeSnapshot(NativeRange range, InternalRange internalRange, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.DeltaDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Delta() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.DevExpressChartsNativeIMinMaxValuesCalculateCenter">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.CalculateCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.DevExpressChartsNativeIMinMaxValuesIntersectionIMinMaxValues">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.IsSameIAxisRangeData">
            <summary>设置 RangeSnapshot.IsSame(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.IsSameRangeSnapshot">
            <summary>设置 RangeSnapshot.IsSame(RangeSnapshot range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.IsSubsetOfRangeSnapshot">
            <summary>设置 RangeSnapshot.IsSubsetOf(RangeSnapshot range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MaxDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MaxDevExpressChartsNativeIMinMaxValuessetDouble">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.set_Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MaxGet">
            <summary>设置 RangeSnapshot.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MaxValueGet">
            <summary>设置 RangeSnapshot.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MinDevExpressChartsNativeIMinMaxValuesget">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MinDevExpressChartsNativeIMinMaxValuessetDouble">
            <summary>设置 RangeSnapshot.DevExpress.Charts.Native.IMinMaxValues.set_Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MinGet">
            <summary>设置 RangeSnapshot.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.MinValueGet">
            <summary>设置 RangeSnapshot.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.RefinedValuesGet">
            <summary>设置 RangeSnapshot.get_RefinedValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeSnapshot.RefinedValuesSetMinMaxValues">
            <summary>设置 RangeSnapshot.set_RefinedValues(MinMaxValues value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStrip">
            <summary>DevExpress.Charts.Native.RangeStrip 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStrip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStrip.#ctor(DevExpress.Charts.Native.RangeStrip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AddStripRange">
            <summary>设置 RangeStrip.Add(StripRange range) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.AddStripRange">
            <summary>设置 RangeStrip.Add(StripRange range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.BottomStripGet">
            <summary>设置 RangeStrip.get_BottomStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.BottomStripSetLineStrip">
            <summary>设置 RangeStrip.set_BottomStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.CompleteFilling">
            <summary>设置 RangeStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.CountGet">
            <summary>设置 RangeStrip.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.CreateBorderStrip">
            <summary>设置 RangeStrip.CreateBorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.CreateInstance">
            <summary>设置 RangeStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.EnsureStips">
            <summary>设置 RangeStrip.EnsureStips() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.IsEmptyGet">
            <summary>设置 RangeStrip.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.TopStripGet">
            <summary>设置 RangeStrip.get_TopStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.AllInstances.TopStripSetLineStrip">
            <summary>设置 RangeStrip.set_TopStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStrip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStrip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStrip.Bind(DevExpress.Charts.Native.IGeometryStrip)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.BottomStripGet">
            <summary>设置 RangeStrip.get_BottomStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.BottomStripSetLineStrip">
            <summary>设置 RangeStrip.set_BottomStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.CompleteFilling">
            <summary>设置 RangeStrip.CompleteFilling() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.Constructor">
            <summary>设置 RangeStrip.RangeStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.CountGet">
            <summary>设置 RangeStrip.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.CreateBorderStrip">
            <summary>设置 RangeStrip.CreateBorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.CreateInstance">
            <summary>设置 RangeStrip.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.EnsureStips">
            <summary>设置 RangeStrip.EnsureStips() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.IsEmptyGet">
            <summary>设置 RangeStrip.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.TopStripGet">
            <summary>设置 RangeStrip.get_TopStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStrip.TopStripSetLineStrip">
            <summary>设置 RangeStrip.set_TopStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation">
            <summary>DevExpress.Charts.Native.RangeStripTriangulation 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.#ctor(DevExpress.Charts.Native.RangeStripTriangulation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AddPointsToBorderStripsGRealPoint2DGRealPoint2D">
            <summary>设置 RangeStripTriangulation.AddPointsToBorderStrips(GRealPoint2D topPoint, GRealPoint2D bottomPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.AddPointsToBorderStripsGRealPoint2DGRealPoint2D">
            <summary>设置 RangeStripTriangulation.AddPointsToBorderStrips(GRealPoint2D topPoint, GRealPoint2D bottomPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.ArePointsEqualsGRealPoint2DGRealPoint2D">
            <summary>设置 RangeStripTriangulation.ArePointsEquals(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.MakeStepLineStripGRealPoint2DRefInt32Ref">
            <summary>设置 RangeStripTriangulation.MakeStep(LineStrip strip, GRealPoint2D&amp; point, Int32&amp; stripIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.Process">
            <summary>设置 RangeStripTriangulation.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.ProcessEmptyStrip">
            <summary>设置 RangeStripTriangulation.ProcessEmptyStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.AllInstances.ProcessRegularStrip">
            <summary>设置 RangeStripTriangulation.ProcessRegularStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.ArePointsEqualsGRealPoint2DGRealPoint2D">
            <summary>设置 RangeStripTriangulation.ArePointsEquals(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.ConstructorRangeStripDouble">
            <summary>设置 RangeStripTriangulation.RangeStripTriangulation(RangeStrip strip, Double epsilon) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.MakeStepLineStripGRealPoint2DRefInt32Ref">
            <summary>设置 RangeStripTriangulation.MakeStep(LineStrip strip, GRealPoint2D&amp; point, Int32&amp; stripIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.Process">
            <summary>设置 RangeStripTriangulation.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.ProcessEmptyStrip">
            <summary>设置 RangeStripTriangulation.ProcessEmptyStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.ProcessRegularStrip">
            <summary>设置 RangeStripTriangulation.ProcessRegularStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulation.TriangulateRangeStripDouble">
            <summary>设置 RangeStripTriangulation.Triangulate(RangeStrip strip, Double epsilon) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult">
            <summary>DevExpress.Charts.Native.RangeStripTriangulationResult 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeStripTriangulationResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer">
            <summary>DevExpress.Charts.Native.RangeUpdateDependentEnqueuer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.#ctor(DevExpress.Charts.Native.RangeUpdateDependentEnqueuer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.AllInstances.Update">
            <summary>设置 RangeUpdateDependentEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.Bind(DevExpress.Charts.Native.IRangeUpdater)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.ConstructorRefinedSeriesGroupControllerIListOfIAxisRangeDataVisualRangeUpdateModeListOfIPaneAxesContainer">
            <summary>设置 RangeUpdateDependentEnqueuer.RangeUpdateDependentEnqueuer(RefinedSeriesGroupController groupController, IList`1&lt;IAxisRangeData&gt; rangesForReset, VisualRangeUpdateMode visualRangeUpdateMode, List`1&lt;IPaneAxesContainer&gt; containers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateDependentEnqueuer.Update">
            <summary>设置 RangeUpdateDependentEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer">
            <summary>DevExpress.Charts.Native.RangeUpdateEnqueuer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.#ctor(DevExpress.Charts.Native.RangeUpdateEnqueuer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.AllInstances.RangesForResetGet">
            <summary>设置 RangeUpdateEnqueuer.get_RangesForReset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.AllInstances.RefinedSeriesGroupsGet">
            <summary>设置 RangeUpdateEnqueuer.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.AllInstances.VisualRangeUpdateModeGet">
            <summary>设置 RangeUpdateEnqueuer.get_VisualRangeUpdateMode() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.ConstructorRefinedSeriesGroupControllerIListOfIAxisRangeDataVisualRangeUpdateMode">
            <summary>设置 RangeUpdateEnqueuer.RangeUpdateEnqueuer(RefinedSeriesGroupController groupController, IList`1&lt;IAxisRangeData&gt; rangesForReset, VisualRangeUpdateMode visualRangeUpdateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.RangesForResetGet">
            <summary>设置 RangeUpdateEnqueuer.get_RangesForReset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.RefinedSeriesGroupsGet">
            <summary>设置 RangeUpdateEnqueuer.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.UpdateRefinedSeriesGroupControllerIListOfIAxisRangeDataVisualRangeUpdateModeIXYDiagramIListOfRefinedSeries">
            <summary>设置 RangeUpdateEnqueuer.Update(RefinedSeriesGroupController groupController, IList`1&lt;IAxisRangeData&gt; rangesForReset, VisualRangeUpdateMode visualRangeUpdateMode, IXYDiagram diagram, IList`1&lt;RefinedSeries&gt; activeSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateEnqueuer.VisualRangeUpdateModeGet">
            <summary>设置 RangeUpdateEnqueuer.get_VisualRangeUpdateMode() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer">
            <summary>DevExpress.Charts.Native.RangeUpdateNonDependentEnqueuer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.#ctor(DevExpress.Charts.Native.RangeUpdateNonDependentEnqueuer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.AllInstances.ContainersGet">
            <summary>设置 RangeUpdateNonDependentEnqueuer.get_Containers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.AllInstances.Update">
            <summary>设置 RangeUpdateNonDependentEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.Bind(DevExpress.Charts.Native.IRangeUpdater)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.ConstructorRefinedSeriesGroupControllerIListOfIAxisRangeDataVisualRangeUpdateModeListOfIPaneAxesContainer">
            <summary>设置 RangeUpdateNonDependentEnqueuer.RangeUpdateNonDependentEnqueuer(RefinedSeriesGroupController groupController, IList`1&lt;IAxisRangeData&gt; rangesForReset, VisualRangeUpdateMode visualRangeUpdateMode, List`1&lt;IPaneAxesContainer&gt; containers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.ContainersGet">
            <summary>设置 RangeUpdateNonDependentEnqueuer.get_Containers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateNonDependentEnqueuer.Update">
            <summary>设置 RangeUpdateNonDependentEnqueuer.Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.RangeUpdateStrategy 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.RangeUpdateStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.ApplySideMarginMinMaxValuesDouble">
            <summary>设置 RangeUpdateStrategy.ApplySideMargin(MinMaxValues values, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.AutoSideMarginEnableIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.AutoSideMarginEnable(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.AxisGet">
            <summary>设置 RangeUpdateStrategy.get_Axis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CalcVisualRangeValuesVisualRangeUpdateModeMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcVisualRangeValues(VisualRangeUpdateMode updateMode, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CalcWholeRangeValues">
            <summary>设置 RangeUpdateStrategy.CalcWholeRangeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CanShowZeroLevelMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CanShowZeroLevel(MinMaxValues range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CheckZeroLevelMinMaxValuesMinMaxValuesBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CheckZeroLevel(MinMaxValues newValues, MinMaxValues internalValues, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues correctedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.DefaultRangeIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.GetZeroLevelMinMaxValues">
            <summary>设置 RangeUpdateStrategy.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.InternalToNativeMinMaxValues">
            <summary>设置 RangeUpdateStrategy.InternalToNative(MinMaxValues range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.MapGet">
            <summary>设置 RangeUpdateStrategy.get_Map() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.MinMaxFromSeriesGet">
            <summary>设置 RangeUpdateStrategy.get_MinMaxFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.PrepareCorrectedInternalValueMinMaxValuesMinMaxValuesDouble">
            <summary>设置 RangeUpdateStrategy.PrepareCorrectedInternalValue(MinMaxValues correctedValues, MinMaxValues internalValues, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.ProportionalCorrectVisualRangeRangeSnapshotRangeSnapshot">
            <summary>设置 RangeUpdateStrategy.ProportionalCorrectVisualRange(RangeSnapshot wholeRangeNewState, RangeSnapshot visualRangeNewState) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.RefreshInternalValues">
            <summary>设置 RangeUpdateStrategy.RefreshInternalValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.ShowZeroLevelGet">
            <summary>设置 RangeUpdateStrategy.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.SynchronizeVisualRangeBooleanRangeSnapshotRangeSnapshotVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.SynchronizeVisualRange(Boolean needSyncWithWholeRange, RangeSnapshot wholeRangeNewState, RangeSnapshot visualRangeNewState, VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.SynchronizeVisualRangeRangeSnapshotRangeSnapshotBoolean">
            <summary>设置 RangeUpdateStrategy.SynchronizeVisualRange(RangeSnapshot wholeSnapshot, RangeSnapshot visualSnapshot, Boolean needSyncWithWholeRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.UpdateDataRangeVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.UpdateDataRange(VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.UpdateRangeVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.UpdateRange(VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.VisualRangeGet">
            <summary>设置 RangeUpdateStrategy.get_VisualRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.VisualRangeRefinedGet">
            <summary>设置 RangeUpdateStrategy.get_VisualRangeRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.WholeRangeGet">
            <summary>设置 RangeUpdateStrategy.get_WholeRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AllInstances.WholeRangeRefinedGet">
            <summary>设置 RangeUpdateStrategy.get_WholeRangeRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.ApplySideMarginMinMaxValuesDouble">
            <summary>设置 RangeUpdateStrategy.ApplySideMargin(MinMaxValues values, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AutoSideMarginEnableIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.AutoSideMarginEnable(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.AxisGet">
            <summary>设置 RangeUpdateStrategy.get_Axis() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CalcVisualRangeValuesVisualRangeUpdateModeMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcVisualRangeValues(VisualRangeUpdateMode updateMode, MinMaxValues defaultMinMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CalcWholeRangeValues">
            <summary>设置 RangeUpdateStrategy.CalcWholeRangeValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CanShowZeroLevelMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CanShowZeroLevel(MinMaxValues range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CheckZeroLevelMinMaxValuesMinMaxValuesBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CheckZeroLevel(MinMaxValues newValues, MinMaxValues internalValues, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.ConstructorIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeries">
            <summary>设置 RangeUpdateStrategy.RangeUpdateStrategy(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues correctedInternalValues, IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.GetZeroLevelMinMaxValues">
            <summary>设置 RangeUpdateStrategy.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.InternalToNativeMinMaxValues">
            <summary>设置 RangeUpdateStrategy.InternalToNative(MinMaxValues range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.MapGet">
            <summary>设置 RangeUpdateStrategy.get_Map() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.MinMaxFromSeriesGet">
            <summary>设置 RangeUpdateStrategy.get_MinMaxFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.PrepareCorrectedInternalValueMinMaxValuesMinMaxValuesDouble">
            <summary>设置 RangeUpdateStrategy.PrepareCorrectedInternalValue(MinMaxValues correctedValues, MinMaxValues internalValues, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.ProportionalCorrectVisualRangeRangeSnapshotRangeSnapshot">
            <summary>设置 RangeUpdateStrategy.ProportionalCorrectVisualRange(RangeSnapshot wholeRangeNewState, RangeSnapshot visualRangeNewState) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.RefreshInternalValues">
            <summary>设置 RangeUpdateStrategy.RefreshInternalValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.ShowZeroLevelGet">
            <summary>设置 RangeUpdateStrategy.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.StaticConstructor">
            <summary>设置 RangeUpdateStrategy.RangeUpdateStrategy() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.SynchronizeVisualRangeBooleanRangeSnapshotRangeSnapshotVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.SynchronizeVisualRange(Boolean needSyncWithWholeRange, RangeSnapshot wholeRangeNewState, RangeSnapshot visualRangeNewState, VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.SynchronizeVisualRangeRangeSnapshotRangeSnapshotBoolean">
            <summary>设置 RangeUpdateStrategy.SynchronizeVisualRange(RangeSnapshot wholeSnapshot, RangeSnapshot visualSnapshot, Boolean needSyncWithWholeRange) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.UpdateDataRangeVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.UpdateDataRange(VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.UpdateRangeIAxisDataMinMaxValuesMinMaxValuesICollectionOfRefinedSeriesVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.UpdateRange(IAxisData axis, MinMaxValues minMaxInternal, MinMaxValues minMaxRefined, ICollection`1&lt;RefinedSeries&gt; refinedSeries, VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.UpdateRangeVisualRangeUpdateMode">
            <summary>设置 RangeUpdateStrategy.UpdateRange(VisualRangeUpdateMode updateMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.VisualRangeGet">
            <summary>设置 RangeUpdateStrategy.get_VisualRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.VisualRangeRefinedGet">
            <summary>设置 RangeUpdateStrategy.get_VisualRangeRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.WholeRangeGet">
            <summary>设置 RangeUpdateStrategy.get_WholeRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeUpdateStrategy.WholeRangeRefinedGet">
            <summary>设置 RangeUpdateStrategy.get_WholeRangeRefined() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeValue">
            <summary>DevExpress.Charts.Native.RangeValue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangeValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangeValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeValue.EmptyGet">
            <summary>设置 RangeValue.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangeValue.StaticConstructor">
            <summary>设置 RangeValue.RangeValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot">
            <summary>DevExpress.Charts.Native.RangesSnapshot 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.#ctor(DevExpress.Charts.Native.RangesSnapshot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.AxisXGet">
            <summary>设置 RangesSnapshot.get_AxisX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.AxisYGet">
            <summary>设置 RangesSnapshot.get_AxisY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.CorrectSecondaryAxesPositionsListOfIAxisDataBooleanListOfIAxisDataBoolean">
            <summary>设置 RangesSnapshot.CorrectSecondaryAxesPositions(List`1&lt;IAxisData&gt; secondaryAxesX, Boolean correctAxesX, List`1&lt;IAxisData&gt; secondaryAxesY, Boolean correctAxesY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.EqualsObject">
            <summary>设置 RangesSnapshot.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.GetHashCode01">
            <summary>设置 RangesSnapshot.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.XRangeGet">
            <summary>设置 RangesSnapshot.get_XRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AllInstances.YRangeGet">
            <summary>设置 RangesSnapshot.get_YRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AxisXGet">
            <summary>设置 RangesSnapshot.get_AxisX() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.AxisYGet">
            <summary>设置 RangesSnapshot.get_AxisY() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.ConstructorIAxisDataIAxisData">
            <summary>设置 RangesSnapshot.RangesSnapshot(IAxisData axisX, IAxisData axisY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.CorrectSecondaryAxesPositionsIListOfIAxisDataIAxisRangeDataIAxisRangeDataBoolean">
            <summary>设置 RangesSnapshot.CorrectSecondaryAxesPositions(IList`1&lt;IAxisData&gt; secondaryAxes, IAxisRangeData visualRange, IAxisRangeData wholeRange, Boolean reversed) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.CorrectSecondaryAxesPositionsListOfIAxisDataBooleanListOfIAxisDataBoolean">
            <summary>设置 RangesSnapshot.CorrectSecondaryAxesPositions(List`1&lt;IAxisData&gt; secondaryAxesX, Boolean correctAxesX, List`1&lt;IAxisData&gt; secondaryAxesY, Boolean correctAxesY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.EqualsObject">
            <summary>设置 RangesSnapshot.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.GetHashCode">
            <summary>设置 RangesSnapshot.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.XRangeGet">
            <summary>设置 RangesSnapshot.get_XRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRangesSnapshot.YRangeGet">
            <summary>设置 RangesSnapshot.get_YRange() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator">
            <summary>DevExpress.Charts.Native.RateOfChangeCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.#ctor(DevExpress.Charts.Native.RateOfChangeCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.CalculateRoCIListOfRefinedPointInt32Int32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.CalculateRoC(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 currIndex, Int32 usingPointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.CalculatedGet">
            <summary>设置 RateOfChangeCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 RateOfChangeCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.MaxYGet">
            <summary>设置 RateOfChangeCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 RateOfChangeCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.MinYGet">
            <summary>设置 RateOfChangeCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.AllInstances.MinYSetDouble">
            <summary>设置 RateOfChangeCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.CalculateRoCIListOfRefinedPointInt32Int32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.CalculateRoC(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 currIndex, Int32 usingPointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.CalculatedGet">
            <summary>设置 RateOfChangeCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.CalculatedSetBoolean">
            <summary>设置 RateOfChangeCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.Constructor">
            <summary>设置 RateOfChangeCalculator.RateOfChangeCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RateOfChangeCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.MaxYGet">
            <summary>设置 RateOfChangeCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.MaxYSetDouble">
            <summary>设置 RateOfChangeCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.MinYGet">
            <summary>设置 RateOfChangeCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRateOfChangeCalculator.MinYSetDouble">
            <summary>设置 RateOfChangeCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout">
            <summary>DevExpress.Charts.Native.RectanglesLayout 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.#ctor(DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AddOccupiedRectangleGRect2D">
            <summary>设置 RectanglesLayout.AddOccupiedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.AddOccupiedRectangleGRect2D">
            <summary>设置 RectanglesLayout.AddOccupiedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.ArrangeGRect2DRef">
            <summary>设置 RectanglesLayout.Arrange(GRect2D&amp; rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.ArrangeRectangleGRect2DInt32GRect2DGRect2D">
            <summary>设置 RectanglesLayout.ArrangeRectangle(GRect2D rect, Int32 overlappingIndent, GRect2D validRect, GRect2D tempExcludedRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.ColumnsCountGet">
            <summary>设置 RectanglesLayout.get_ColumnsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.GetCellInt32Int32">
            <summary>设置 RectanglesLayout.GetCell(Int32 rowIndex, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.IsAlgorithmEnd">
            <summary>设置 RectanglesLayout.IsAlgorithmEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.IsEmptyRegionByListGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegionByList(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.IsEmptyRegionGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegion(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.IsEmptyRegionGRect2DGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegion(GRect2D rect, GRect2D validRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.RowsCountGet">
            <summary>设置 RectanglesLayout.get_RowsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.RunAlgorithmGRect2D">
            <summary>设置 RectanglesLayout.RunAlgorithm(GRect2D allocationRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.StepToBottomGet">
            <summary>设置 RectanglesLayout.get_StepToBottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.StepToLeftGet">
            <summary>设置 RectanglesLayout.get_StepToLeft() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.StepToRightGet">
            <summary>设置 RectanglesLayout.get_StepToRight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.StepToTopGet">
            <summary>设置 RectanglesLayout.get_StepToTop() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.StepsGet">
            <summary>设置 RectanglesLayout.get_Steps() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.UpdateStepsGRect2D">
            <summary>设置 RectanglesLayout.UpdateSteps(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.UpdateTestContainer">
            <summary>设置 RectanglesLayout.UpdateTestContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.UpdateValidRectGRect2D">
            <summary>设置 RectanglesLayout.UpdateValidRect(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.AllInstances.ValidRectGet">
            <summary>设置 RectanglesLayout.get_ValidRect() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.ArrangeGRect2DRef">
            <summary>设置 RectanglesLayout.Arrange(GRect2D&amp; rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.ArrangeRectangleGRect2DInt32GRect2DGRect2D">
            <summary>设置 RectanglesLayout.ArrangeRectangle(GRect2D rect, Int32 overlappingIndent, GRect2D validRect, GRect2D tempExcludedRect) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.ColumnsCountGet">
            <summary>设置 RectanglesLayout.get_ColumnsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.ConstructorGRect2D">
            <summary>设置 RectanglesLayout.RectanglesLayout(GRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.GetCellInt32Int32">
            <summary>设置 RectanglesLayout.GetCell(Int32 rowIndex, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.IsAlgorithmEnd">
            <summary>设置 RectanglesLayout.IsAlgorithmEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.IsEmptyRegionByListGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegionByList(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.IsEmptyRegionGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegion(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.IsEmptyRegionGRect2DGRect2D">
            <summary>设置 RectanglesLayout.IsEmptyRegion(GRect2D rect, GRect2D validRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.RowsCountGet">
            <summary>设置 RectanglesLayout.get_RowsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.RunAlgorithmGRect2D">
            <summary>设置 RectanglesLayout.RunAlgorithm(GRect2D allocationRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.StepToBottomGet">
            <summary>设置 RectanglesLayout.get_StepToBottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.StepToLeftGet">
            <summary>设置 RectanglesLayout.get_StepToLeft() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.StepToRightGet">
            <summary>设置 RectanglesLayout.get_StepToRight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.StepToTopGet">
            <summary>设置 RectanglesLayout.get_StepToTop() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.StepsGet">
            <summary>设置 RectanglesLayout.get_Steps() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.UpdateStepsGRect2D">
            <summary>设置 RectanglesLayout.UpdateSteps(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.UpdateTestContainer">
            <summary>设置 RectanglesLayout.UpdateTestContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.UpdateValidRectGRect2D">
            <summary>设置 RectanglesLayout.UpdateValidRect(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayout.ValidRectGet">
            <summary>设置 RectanglesLayout.get_ValidRect() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm">
            <summary>DevExpress.Charts.Native.RectanglesLayoutAlgorithm 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.#ctor(DevExpress.Charts.Native.RectanglesLayoutAlgorithm)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AddExcludedRectangleGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.AddExcludedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AddOccupiedRectangleGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.AddOccupiedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.AddExcludedRectangleGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.AddExcludedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.AddOccupiedRectangleGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.AddOccupiedRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.ArrangeRectangleGRect2DGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.ArrangeRectangle(GRect2D rect, GRect2D validRect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.ArrangeRectangleGRect2DGRect2DBooleanGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.ArrangeRectangle(GRect2D rect, GRect2D validRect, Boolean useExcludedRegions, GRect2D tempExcludedRect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.IsEmptyRegionByListGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.IsEmptyRegionByList(GRect2D rect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.AllInstances.IsEmptyRegionGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.IsEmptyRegion(GRect2D rect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.ArrangeRectangleGRect2DGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.ArrangeRectangle(GRect2D rect, GRect2D validRect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.ArrangeRectangleGRect2DGRect2DBooleanGRect2D">
            <summary>设置 RectanglesLayoutAlgorithm.ArrangeRectangle(GRect2D rect, GRect2D validRect, Boolean useExcludedRegions, GRect2D tempExcludedRect) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.ConstructorGRect2DInt32">
            <summary>设置 RectanglesLayoutAlgorithm.RectanglesLayoutAlgorithm(GRect2D bounds, Int32 overlappingIndet) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.ConstructorInt32">
            <summary>设置 RectanglesLayoutAlgorithm.RectanglesLayoutAlgorithm(Int32 overlappingIndet) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.IsEmptyRegionByListGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.IsEmptyRegionByList(GRect2D rect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRectanglesLayoutAlgorithm.IsEmptyRegionGRect2DBoolean">
            <summary>设置 RectanglesLayoutAlgorithm.IsEmptyRegion(GRect2D rect, Boolean useExcludedRegions) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPoint">
            <summary>DevExpress.Charts.Native.RefinedPoint 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.#ctor(DevExpress.Charts.Native.RefinedPoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ArgumentDevExpressChartsNativeIArgumentPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IArgumentPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ArgumentDevExpressChartsNativeIArgumentPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IArgumentPoint.set_Argument(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ArgumentGet">
            <summary>设置 RefinedPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ArgumentScaleGet">
            <summary>设置 RefinedPoint.get_ArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.BarWidthDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.CachedArgumentScaleGet">
            <summary>设置 RefinedPoint.get_CachedArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ChildrenGet">
            <summary>设置 RefinedPoint.get_Children() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.CloseDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Close() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.CloseDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Close(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.FixedOffsetDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_FixedOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.GetMinMaxISeriesView">
            <summary>设置 RefinedPoint.GetMinMax(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.GetSideBySideSeries">
            <summary>设置 RefinedPoint.GetSideBySideSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.GetValueValueLevelInternal">
            <summary>设置 RefinedPoint.GetValue(ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.HighDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_High() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.HighDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_High(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IndexGet">
            <summary>设置 RefinedPoint.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IndexSetInt32">
            <summary>设置 RefinedPoint.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.InteractionGet">
            <summary>设置 RefinedPoint.get_Interaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsEmptyGet">
            <summary>设置 RefinedPoint.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsEmptySetBoolean">
            <summary>设置 RefinedPoint.set_IsEmpty(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsMaxPointDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_IsMaxPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsMinPointDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_IsMinPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsSupplyPointGet">
            <summary>设置 RefinedPoint.get_IsSupplyPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.IsSupplyPointSetBoolean">
            <summary>设置 RefinedPoint.set_IsSupplyPoint(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.LowDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Low() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.LowDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Low(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.MaxDevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.MaxValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.MinDevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.MinValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.NormalizedValueDevExpressChartsNativeIFullStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFullStackedPoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.NormalizedValueDevExpressChartsNativeIFunnelPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFunnelPoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.NormalizedValueDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.OffsetDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.OpenDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Open() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.OpenDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Open(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ResetInteraction">
            <summary>设置 RefinedPoint.ResetInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ResetSeriesGroupsInteraction">
            <summary>设置 RefinedPoint.ResetSeriesGroupsInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.SeriesPointGet">
            <summary>设置 RefinedPoint.get_SeriesPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.SetInteractionIPointInteractionInt32">
            <summary>设置 RefinedPoint.SetInteraction(IPointInteraction data, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.SetSeriesGroupsInteractionIPointInteractionInt32">
            <summary>设置 RefinedPoint.SetSeriesGroupsInteraction(IPointInteraction data, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.SizeDevExpressChartsNativeIXYWPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.TotalMaxValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalMaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.TotalMinValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.TotalValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value1DevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value1DevExpressChartsNativeIRangePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.set_Value1(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value1Get">
            <summary>设置 RefinedPoint.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value2DevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value2DevExpressChartsNativeIRangePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.set_Value2(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value2Get">
            <summary>设置 RefinedPoint.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value3Get">
            <summary>设置 RefinedPoint.get_Value3() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.Value4Get">
            <summary>设置 RefinedPoint.get_Value4() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ValueDevExpressChartsNativeIValuePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IValuePoint.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.ValueDevExpressChartsNativeIValuePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IValuePoint.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.WeightDevExpressChartsNativeIXYWPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.get_Weight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.AllInstances.WeightDevExpressChartsNativeIXYWPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.set_Weight(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ArgumentDevExpressChartsNativeIArgumentPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IArgumentPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ArgumentDevExpressChartsNativeIArgumentPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IArgumentPoint.set_Argument(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ArgumentGet">
            <summary>设置 RefinedPoint.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ArgumentScaleGet">
            <summary>设置 RefinedPoint.get_ArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.BarWidthDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IArgumentPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IBasePoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IFinancialPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IFullStackedPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IFunnelPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IPiePoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IRangePoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.ISideBySidePoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IStackedPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IValuePoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IXYPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Bind(DevExpress.Charts.Native.IXYWPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.CachedArgumentScaleGet">
            <summary>设置 RefinedPoint.get_CachedArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ChildrenGet">
            <summary>设置 RefinedPoint.get_Children() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.CloseDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Close() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.CloseDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Close(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Constructor">
            <summary>设置 RefinedPoint.RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPoint">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPointDouble">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPointDoubleDouble">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point, Double argument, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPointDoubleDoubleDouble">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point, Double argument, Double value1, Double value2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPointDoubleDoubleDoubleDoubleDouble">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point, Double argument, Double open, Double close, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorISeriesPointDoubleIListOfDouble">
            <summary>设置 RefinedPoint.RefinedPoint(ISeriesPoint point, Double argument, IList`1&lt;Double&gt; values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ConstructorRefinedPointDouble">
            <summary>设置 RefinedPoint.RefinedPoint(RefinedPoint refinedPoint, Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.FixedOffsetDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_FixedOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.GetMinMaxISeriesView">
            <summary>设置 RefinedPoint.GetMinMax(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.GetSideBySideSeries">
            <summary>设置 RefinedPoint.GetSideBySideSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.GetValueValueLevelInternal">
            <summary>设置 RefinedPoint.GetValue(ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.HighDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_High() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.HighDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_High(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IndexGet">
            <summary>设置 RefinedPoint.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IndexSetInt32">
            <summary>设置 RefinedPoint.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.InteractionGet">
            <summary>设置 RefinedPoint.get_Interaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsEmptyGet">
            <summary>设置 RefinedPoint.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsEmptySetBoolean">
            <summary>设置 RefinedPoint.set_IsEmpty(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsMaxPointDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_IsMaxPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsMinPointDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_IsMinPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsSupplyPointGet">
            <summary>设置 RefinedPoint.get_IsSupplyPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.IsSupplyPointSetBoolean">
            <summary>设置 RefinedPoint.set_IsSupplyPoint(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.LowDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Low() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.LowDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Low(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.MaxDevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.MaxValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.MinDevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.MinValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.NormalizedValueDevExpressChartsNativeIFullStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFullStackedPoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.NormalizedValueDevExpressChartsNativeIFunnelPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFunnelPoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.NormalizedValueDevExpressChartsNativeIPiePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IPiePoint.get_NormalizedValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.OffsetDevExpressChartsNativeISideBySidePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.ISideBySidePoint.get_Offset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.OpenDevExpressChartsNativeIFinancialPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.get_Open() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.OpenDevExpressChartsNativeIFinancialPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IFinancialPoint.set_Open(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ResetInteraction">
            <summary>设置 RefinedPoint.ResetInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ResetSeriesGroupsInteraction">
            <summary>设置 RefinedPoint.ResetSeriesGroupsInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.SeriesPointGet">
            <summary>设置 RefinedPoint.get_SeriesPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.SetInteractionIPointInteractionInt32">
            <summary>设置 RefinedPoint.SetInteraction(IPointInteraction data, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.SetSeriesGroupsInteractionIPointInteractionInt32">
            <summary>设置 RefinedPoint.SetSeriesGroupsInteraction(IPointInteraction data, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer">
            <summary>DevExpress.Charts.Native.RefinedPoint+PointInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ShimPointInteractionContainer.InvalidContainerGet">
            <summary>设置 PointInteractionContainer.get_InvalidContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.SizeDevExpressChartsNativeIXYWPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.get_Size() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.StaticConstructor">
            <summary>设置 RefinedPoint.RefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.TotalMaxValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalMaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.TotalMinValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.TotalValueDevExpressChartsNativeIStackedPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IStackedPoint.get_TotalValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value1DevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value1DevExpressChartsNativeIRangePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.set_Value1(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value1Get">
            <summary>设置 RefinedPoint.get_Value1() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value2DevExpressChartsNativeIRangePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value2DevExpressChartsNativeIRangePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IRangePoint.set_Value2(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value2Get">
            <summary>设置 RefinedPoint.get_Value2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value3Get">
            <summary>设置 RefinedPoint.get_Value3() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.Value4Get">
            <summary>设置 RefinedPoint.get_Value4() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ValueDevExpressChartsNativeIValuePointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IValuePoint.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.ValueDevExpressChartsNativeIValuePointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IValuePoint.set_Value(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.WeightDevExpressChartsNativeIXYWPointget">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.get_Weight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPoint.WeightDevExpressChartsNativeIXYWPointsetDouble">
            <summary>设置 RefinedPoint.DevExpress.Charts.Native.IXYWPoint.set_Weight(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer">
            <summary>DevExpress.Charts.Native.RefinedPointArgumentComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.#ctor(DevExpress.Charts.Native.RefinedPointArgumentComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.AllInstances.SystemCollectionsGenericIComparerDevExpressChartsNativeRefinedPointCompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointArgumentComparer.System.Collections.Generic.IComparer&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Compare(RefinedPoint x, RefinedPoint y) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.Constructor">
            <summary>设置 RefinedPointArgumentComparer.RefinedPointArgumentComparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointArgumentComparer.SystemCollectionsGenericIComparerDevExpressChartsNativeRefinedPointCompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointArgumentComparer.System.Collections.Generic.IComparer&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Compare(RefinedPoint x, RefinedPoint y) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection">
            <summary>DevExpress.Charts.Native.RefinedPointCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.#ctor(DevExpress.Charts.Native.RefinedPointCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AddRangeICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AddRefinedPoint">
            <summary>设置 RefinedPointCollection.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.AddRangeICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.AddRefinedPoint">
            <summary>设置 RefinedPointCollection.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.ContainsRefinedPoint">
            <summary>设置 RefinedPointCollection.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.IndexOfRefinedPoint">
            <summary>设置 RefinedPointCollection.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.InsertInt32RefinedPoint">
            <summary>设置 RefinedPointCollection.Insert(Int32 index, RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.InsertRangeInt32ICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollection.InsertRange(Int32 index, ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.MoveInt32Int32">
            <summary>设置 RefinedPointCollection.Move(Int32 oldIndex, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.RemoveRangeInt32Int32">
            <summary>设置 RefinedPointCollection.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.AllInstances.SwapInt32Int32">
            <summary>设置 RefinedPointCollection.Swap(Int32 index1, Int32 index2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.ConstructorInt32">
            <summary>设置 RefinedPointCollection.RefinedPointCollection(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.ContainsRefinedPoint">
            <summary>设置 RefinedPointCollection.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.IndexOfRefinedPoint">
            <summary>设置 RefinedPointCollection.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.InsertInt32RefinedPoint">
            <summary>设置 RefinedPointCollection.Insert(Int32 index, RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.InsertRangeInt32ICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollection.InsertRange(Int32 index, ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.MoveInt32Int32">
            <summary>设置 RefinedPointCollection.Move(Int32 oldIndex, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.RemoveRangeInt32Int32">
            <summary>设置 RefinedPointCollection.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollection.SwapInt32Int32">
            <summary>设置 RefinedPointCollection.Swap(Int32 index1, Int32 index2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase">
            <summary>DevExpress.Charts.Native.RefinedPointCollectionBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.#ctor(DevExpress.Charts.Native.RefinedPointCollectionBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.Clear">
            <summary>设置 RefinedPointCollectionBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.CollapsePoints">
            <summary>设置 RefinedPointCollectionBase.CollapsePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.CopyToIBasePointArrayInt32">
            <summary>设置 RefinedPointCollectionBase.CopyTo(IBasePoint[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.CountGet">
            <summary>设置 RefinedPointCollectionBase.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.CountSetInt32">
            <summary>设置 RefinedPointCollectionBase.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ExpandPoints">
            <summary>设置 RefinedPointCollectionBase.ExpandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.GetCapacityForCollapse">
            <summary>设置 RefinedPointCollectionBase.GetCapacityForCollapse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.GetCapacityForExpand">
            <summary>设置 RefinedPointCollectionBase.GetCapacityForExpand() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.GetEnumerator">
            <summary>设置 RefinedPointCollectionBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.IsReadOnlyGet">
            <summary>设置 RefinedPointCollectionBase.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.IsReadOnlySystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointget">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ItemGetInt32">
            <summary>设置 RefinedPointCollectionBase.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ItemSetInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ItemSystemCollectionsGenericIListDevExpressChartsNativeRefinedPointgetInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ItemSystemCollectionsGenericIListDevExpressChartsNativeRefinedPointsetInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.MovePointInt32Int32">
            <summary>设置 RefinedPointCollectionBase.MovePoint(Int32 oldIndex, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.PointsGet">
            <summary>设置 RefinedPointCollectionBase.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.ReallocInt32">
            <summary>设置 RefinedPointCollectionBase.Realloc(Int32 newCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.RemoveRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.Remove(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointAddRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointClear">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointContainsRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointCopyToRefinedPointArrayInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.CopyTo(RefinedPoint[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointRemoveRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Remove(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericIEnumerableDevExpressChartsNativeRefinedPointGetEnumerator">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.RefinedPoint&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointIndexOfRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointInsertInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Insert(Int32 index, RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.AllInstances.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointRemoveAtInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.Clear">
            <summary>设置 RefinedPointCollectionBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.CollapsePoints">
            <summary>设置 RefinedPointCollectionBase.CollapsePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ConstructorInt32">
            <summary>设置 RefinedPointCollectionBase.RefinedPointCollectionBase(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.CopyToIBasePointArrayInt32">
            <summary>设置 RefinedPointCollectionBase.CopyTo(IBasePoint[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.CountGet">
            <summary>设置 RefinedPointCollectionBase.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.CountSetInt32">
            <summary>设置 RefinedPointCollectionBase.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ExpandPoints">
            <summary>设置 RefinedPointCollectionBase.ExpandPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.GetCapacityForCollapse">
            <summary>设置 RefinedPointCollectionBase.GetCapacityForCollapse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.GetCapacityForExpand">
            <summary>设置 RefinedPointCollectionBase.GetCapacityForExpand() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.GetEnumerator">
            <summary>设置 RefinedPointCollectionBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.IsReadOnlyGet">
            <summary>设置 RefinedPointCollectionBase.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.IsReadOnlySystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointget">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ItemGetInt32">
            <summary>设置 RefinedPointCollectionBase.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ItemSetInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ItemSystemCollectionsGenericIListDevExpressChartsNativeRefinedPointgetInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ItemSystemCollectionsGenericIListDevExpressChartsNativeRefinedPointsetInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.MovePointInt32Int32">
            <summary>设置 RefinedPointCollectionBase.MovePoint(Int32 oldIndex, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.PointsGet">
            <summary>设置 RefinedPointCollectionBase.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ReallocInt32">
            <summary>设置 RefinedPointCollectionBase.Realloc(Int32 newCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.RemoveRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.Remove(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator">
            <summary>DevExpress.Charts.Native.RefinedPointCollectionBase+Enumerator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.#ctor(DevExpress.Charts.Native.RefinedPointCollectionBase.Enumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.CurrentSystemCollectionsGenericIEnumeratorDevExpressChartsNativeIBasePointget">
            <summary>设置 Enumerator.System.Collections.Generic.IEnumerator&lt;DevExpress.Charts.Native.IBasePoint&gt;.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.CurrentSystemCollectionsGenericIEnumeratorDevExpressChartsNativeRefinedPointget">
            <summary>设置 Enumerator.System.Collections.Generic.IEnumerator&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 Enumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 Enumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.SystemCollectionsIEnumeratorReset">
            <summary>设置 Enumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.AllInstances.SystemIDisposableDispose">
            <summary>设置 Enumerator.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.Bind(System.Collections.Generic.IEnumerator{DevExpress.Charts.Native.IBasePoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.Bind(System.Collections.Generic.IEnumerator{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.ConstructorRefinedPointArrayInt32">
            <summary>设置 Enumerator.Enumerator(RefinedPoint[] points, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.CurrentSystemCollectionsGenericIEnumeratorDevExpressChartsNativeIBasePointget">
            <summary>设置 Enumerator.System.Collections.Generic.IEnumerator&lt;DevExpress.Charts.Native.IBasePoint&gt;.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.CurrentSystemCollectionsGenericIEnumeratorDevExpressChartsNativeRefinedPointget">
            <summary>设置 Enumerator.System.Collections.Generic.IEnumerator&lt;DevExpress.Charts.Native.RefinedPoint&gt;.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 Enumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 Enumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.SystemCollectionsIEnumeratorReset">
            <summary>设置 Enumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.ShimEnumerator.SystemIDisposableDispose">
            <summary>设置 Enumerator.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointAddRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointClear">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointContainsRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointCopyToRefinedPointArrayInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.CopyTo(RefinedPoint[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericICollectionDevExpressChartsNativeRefinedPointRemoveRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.ICollection&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Remove(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericIEnumerableDevExpressChartsNativeRefinedPointGetEnumerator">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IEnumerable&lt;DevExpress.Charts.Native.RefinedPoint&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointIndexOfRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointInsertInt32RefinedPoint">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.Insert(Int32 index, RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointCollectionBase.SystemCollectionsGenericIListDevExpressChartsNativeRefinedPointRemoveAtInt32">
            <summary>设置 RefinedPointCollectionBase.System.Collections.Generic.IList&lt;DevExpress.Charts.Native.RefinedPoint&gt;.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase">
            <summary>DevExpress.Charts.Native.RefinedPointComparerBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.#ctor(DevExpress.Charts.Native.RefinedPointComparerBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.Constructor">
            <summary>设置 RefinedPointComparerBase.RefinedPointComparerBase() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointComparerBase.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator">
            <summary>DevExpress.Charts.Native.RefinedPointsAggregator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.#ctor(DevExpress.Charts.Native.RefinedPointsAggregator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.AllInstances.ClusterPointsIListOfRefinedPoint">
            <summary>设置 RefinedPointsAggregator.ClusterPoints(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.ClusterPointsIListOfRefinedPoint">
            <summary>设置 RefinedPointsAggregator.ClusterPoints(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsAggregator.ConstructorAxisScaleTypeMap">
            <summary>设置 RefinedPointsAggregator.RefinedPointsAggregator(AxisScaleTypeMap axisXScaleMap) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsArgumentAndIndexComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.#ctor(DevExpress.Charts.Native.RefinedPointsArgumentAndIndexComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.Constructor">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.RefinedPointsArgumentAndIndexComparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentAndIndexComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsArgumentComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.#ctor(DevExpress.Charts.Native.RefinedPointsArgumentComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.Constructor">
            <summary>设置 RefinedPointsArgumentComparer.RefinedPointsArgumentComparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsArgumentComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster">
            <summary>DevExpress.Charts.Native.RefinedPointsCluster 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsCluster.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer">
            <summary>DevExpress.Charts.Native.RefinedPointsRangeValue1Comparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.#ctor(DevExpress.Charts.Native.RefinedPointsRangeValue1Comparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.Constructor">
            <summary>设置 RefinedPointsRangeValue1Comparer.RefinedPointsRangeValue1Comparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue1Comparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer">
            <summary>DevExpress.Charts.Native.RefinedPointsRangeValue2Comparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.#ctor(DevExpress.Charts.Native.RefinedPointsRangeValue2Comparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.Constructor">
            <summary>设置 RefinedPointsRangeValue2Comparer.RefinedPointsRangeValue2Comparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsRangeValue2Comparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsValueComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.#ctor(DevExpress.Charts.Native.RefinedPointsValueComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.Constructor">
            <summary>设置 RefinedPointsValueComparer.RefinedPointsValueComparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsValueComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsWeightComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.#ctor(DevExpress.Charts.Native.RefinedPointsWeightComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.AllInstances.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.Constructor">
            <summary>设置 RefinedPointsWeightComparer.RefinedPointsWeightComparer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedPointsWeightComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.IsSupportedPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeries">
            <summary>DevExpress.Charts.Native.RefinedSeries 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ActiveIndexGet">
            <summary>设置 RefinedSeries.get_ActiveIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ActiveIndexSetInt32">
            <summary>设置 RefinedSeries.set_ActiveIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ActiveIndexGet">
            <summary>设置 RefinedSeries.get_ActiveIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ActiveIndexSetInt32">
            <summary>设置 RefinedSeries.set_ActiveIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ArgumentGroupGet">
            <summary>设置 RefinedSeries.get_ArgumentGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ArgumentScaleTypeGet">
            <summary>设置 RefinedSeries.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.BindToGroupsRefinedSeriesGroupRefinedSeriesGroup">
            <summary>设置 RefinedSeries.BindToGroups(RefinedSeriesGroup argumentGroup, RefinedSeriesGroup valueGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.CalculateVisiblePointIndexesIMinMaxValuesInt32OutInt32Out">
            <summary>设置 RefinedSeries.CalculateVisiblePointIndexes(IMinMaxValues visualRangeValues, Int32&amp; minIndex, Int32&amp; maxIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.DevExpressChartsNativeIRefinedSeriesFindAllPointsWithSameArgumentRefinedPoint">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.DevExpressChartsNativeIRefinedSeriesGetMaxPointDouble">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.GetMaxPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.DevExpressChartsNativeIRefinedSeriesGetMinPointDouble">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.GetMinPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.DevExpressChartsNativeIRefinedSeriesIsSameContainersIRefinedSeries">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.IsSameContainers(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ExplodedFactorDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_ExplodedFactor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.FinalPointsGet">
            <summary>设置 RefinedSeries.get_FinalPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.FinalPointsSortedByArgumentGet">
            <summary>设置 RefinedSeries.get_FinalPointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.GetDrawingPoints">
            <summary>设置 RefinedSeries.GetDrawingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.GetFinalPointByArgumentDoubleInt32Out">
            <summary>设置 RefinedSeries.GetFinalPointByArgument(Double argument, Int32&amp; index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.GetMinAbsArgument">
            <summary>设置 RefinedSeries.GetMinAbsArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.HasPositivePointsGet">
            <summary>设置 RefinedSeries.get_HasPositivePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.HoleRadiusDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_HoleRadius() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.InteractionContainerGet">
            <summary>设置 RefinedSeries.get_InteractionContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.InteractionContainerSetSeriesInteractionContainer">
            <summary>设置 RefinedSeries.set_InteractionContainer(SeriesInteractionContainer value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.InvalidateData">
            <summary>设置 RefinedSeries.InvalidateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsActiveGet">
            <summary>设置 RefinedSeries.get_IsActive() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 RefinedSeries.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsContainsProcessedPointsGet">
            <summary>设置 RefinedSeries.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsExplodedDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_IsExploded() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsFirstInContainerDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_IsFirstInContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.IsPointsAutoGeneratedGet">
            <summary>设置 RefinedSeries.get_IsPointsAutoGenerated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MaxArgumentGet">
            <summary>设置 RefinedSeries.get_MaxArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MaxArgumentPointGet">
            <summary>设置 RefinedSeries.get_MaxArgumentPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MaxVisiblePointIndexDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_MaxVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MaxVisiblePointIndexGet">
            <summary>设置 RefinedSeries.get_MaxVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MinArgumentGet">
            <summary>设置 RefinedSeries.get_MinArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MinArgumentPointGet">
            <summary>设置 RefinedSeries.get_MinArgumentPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MinVisiblePointIndexDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_MinVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.MinVisiblePointIndexGet">
            <summary>设置 RefinedSeries.get_MinVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.NoArgumentScaleTypeGet">
            <summary>设置 RefinedSeries.get_NoArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.NormalizedWeightDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_NormalizedWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.PointsDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.PointsForMapGet">
            <summary>设置 RefinedSeries.get_PointsForMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.PointsGet">
            <summary>设置 RefinedSeries.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.PointsSortedByArgumentGet">
            <summary>设置 RefinedSeries.get_PointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.PointsSortedBySettingsGet">
            <summary>设置 RefinedSeries.get_PointsSortedBySettings() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 RefinedSeries.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 RefinedSeries.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative sortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.RecalculateArgumentScale">
            <summary>设置 RefinedSeries.RecalculateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.SeriesGet">
            <summary>设置 RefinedSeries.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.SeriesViewGet">
            <summary>设置 RefinedSeries.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.SetArgumentScaleScale">
            <summary>设置 RefinedSeries.SetArgumentScale(Scale scale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.SetGroupsInteractionSeriesGroupsInteractionContainerInt32">
            <summary>设置 RefinedSeries.SetGroupsInteraction(SeriesGroupsInteractionContainer data, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.StartOffsetDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_StartOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.StartOffsetInPixelsDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_StartOffsetInPixels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ToString01">
            <summary>设置 RefinedSeries.ToString() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.TotalGroupIndentInPixelsDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_TotalGroupIndentInPixels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdateArgumentScale">
            <summary>设置 RefinedSeries.UpdateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdateData">
            <summary>设置 RefinedSeries.UpdateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdateFilters">
            <summary>设置 RefinedSeries.UpdateFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdatePointsIndices">
            <summary>设置 RefinedSeries.UpdatePointsIndices() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdateRandomPoints">
            <summary>设置 RefinedSeries.UpdateRandomPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UpdateVisiblePointIndexesIMinMaxValues">
            <summary>设置 RefinedSeries.UpdateVisiblePointIndexes(IMinMaxValues visualRangeValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.UseOnlyVisiblePointsGet">
            <summary>设置 RefinedSeries.get_UseOnlyVisiblePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ValueGroupGet">
            <summary>设置 RefinedSeries.get_ValueGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.AllInstances.ValueScaleTypeGet">
            <summary>设置 RefinedSeries.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ArgumentGroupGet">
            <summary>设置 RefinedSeries.get_ArgumentGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ArgumentScaleTypeGet">
            <summary>设置 RefinedSeries.get_ArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.Bind(DevExpress.Charts.Native.INestedDoughnutRefinedSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.Bind(DevExpress.Charts.Native.IRefinedSeries)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.BindToGroupsRefinedSeriesGroupRefinedSeriesGroup">
            <summary>设置 RefinedSeries.BindToGroups(RefinedSeriesGroup argumentGroup, RefinedSeriesGroup valueGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.CalculateVisiblePointIndexesIMinMaxValuesInt32OutInt32Out">
            <summary>设置 RefinedSeries.CalculateVisiblePointIndexes(IMinMaxValues visualRangeValues, Int32&amp; minIndex, Int32&amp; maxIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ConstructorISeriesIRefinedSeriesContainer">
            <summary>设置 RefinedSeries.RefinedSeries(ISeries series, IRefinedSeriesContainer seriesController) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.DevExpressChartsNativeIRefinedSeriesFindAllPointsWithSameArgumentRefinedPoint">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.DevExpressChartsNativeIRefinedSeriesGetMaxPointDouble">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.GetMaxPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.DevExpressChartsNativeIRefinedSeriesGetMinPointDouble">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.GetMinPoint(Double argument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.DevExpressChartsNativeIRefinedSeriesIsSameContainersIRefinedSeries">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.IsSameContainers(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ExplodedFactorDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_ExplodedFactor() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.FinalPointsGet">
            <summary>设置 RefinedSeries.get_FinalPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.FinalPointsSortedByArgumentGet">
            <summary>设置 RefinedSeries.get_FinalPointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.GetDrawingPoints">
            <summary>设置 RefinedSeries.GetDrawingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.GetFinalPointByArgumentDoubleInt32Out">
            <summary>设置 RefinedSeries.GetFinalPointByArgument(Double argument, Int32&amp; index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.GetIndexByArgumentIListOfRefinedPointDoubleBooleanOut">
            <summary>设置 RefinedSeries.GetIndexByArgument(IList`1&lt;RefinedPoint&gt; points, Double argument, Boolean&amp; pointIsFound) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.GetMinAbsArgument">
            <summary>设置 RefinedSeries.GetMinAbsArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.HasPositivePointsGet">
            <summary>设置 RefinedSeries.get_HasPositivePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.HoleRadiusDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_HoleRadius() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.InteractionContainerGet">
            <summary>设置 RefinedSeries.get_InteractionContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.InteractionContainerSetSeriesInteractionContainer">
            <summary>设置 RefinedSeries.set_InteractionContainer(SeriesInteractionContainer value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.InvalidateData">
            <summary>设置 RefinedSeries.InvalidateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsActiveGet">
            <summary>设置 RefinedSeries.get_IsActive() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 RefinedSeries.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsContainsProcessedPointsGet">
            <summary>设置 RefinedSeries.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsExplodedDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_IsExploded() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsFirstInContainerDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_IsFirstInContainer() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.IsPointsAutoGeneratedGet">
            <summary>设置 RefinedSeries.get_IsPointsAutoGenerated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MaxArgumentGet">
            <summary>设置 RefinedSeries.get_MaxArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MaxArgumentPointGet">
            <summary>设置 RefinedSeries.get_MaxArgumentPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MaxVisiblePointIndexDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_MaxVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MaxVisiblePointIndexGet">
            <summary>设置 RefinedSeries.get_MaxVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MinArgumentGet">
            <summary>设置 RefinedSeries.get_MinArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MinArgumentPointGet">
            <summary>设置 RefinedSeries.get_MinArgumentPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MinVisiblePointIndexDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_MinVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.MinVisiblePointIndexGet">
            <summary>设置 RefinedSeries.get_MinVisiblePointIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.NoArgumentScaleTypeGet">
            <summary>设置 RefinedSeries.get_NoArgumentScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.NormalizedWeightDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_NormalizedWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.PointsDevExpressChartsNativeIRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.IRefinedSeries.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.PointsForMapGet">
            <summary>设置 RefinedSeries.get_PointsForMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.PointsGet">
            <summary>设置 RefinedSeries.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.PointsSortedByArgumentGet">
            <summary>设置 RefinedSeries.get_PointsSortedByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.PointsSortedBySettingsGet">
            <summary>设置 RefinedSeries.get_PointsSortedBySettings() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ProcessSortingPointKeyUpdateSeriesPointKeyNativeSeriesPointKeyNativeSortMode">
            <summary>设置 RefinedSeries.ProcessSortingPointKeyUpdate(SeriesPointKeyNative oldSortingKey, SeriesPointKeyNative newSortingKey, SortMode pointsSortingMode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ProcessSortingPointModeUpdateSortModeSortModeSeriesPointKeyNative">
            <summary>设置 RefinedSeries.ProcessSortingPointModeUpdate(SortMode oldSortingMode, SortMode newSortingMode, SeriesPointKeyNative sortingKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.RecalculateArgumentScale">
            <summary>设置 RefinedSeries.RecalculateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.SeriesGet">
            <summary>设置 RefinedSeries.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.SeriesViewGet">
            <summary>设置 RefinedSeries.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.SetArgumentScaleScale">
            <summary>设置 RefinedSeries.SetArgumentScale(Scale scale) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.SetGroupsInteractionSeriesGroupsInteractionContainerInt32">
            <summary>设置 RefinedSeries.SetGroupsInteraction(SeriesGroupsInteractionContainer data, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.StartOffsetDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_StartOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.StartOffsetInPixelsDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_StartOffsetInPixels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ToString">
            <summary>设置 RefinedSeries.ToString() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.TotalGroupIndentInPixelsDevExpressChartsNativeINestedDoughnutRefinedSeriesget">
            <summary>设置 RefinedSeries.DevExpress.Charts.Native.INestedDoughnutRefinedSeries.get_TotalGroupIndentInPixels() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdateArgumentScale">
            <summary>设置 RefinedSeries.UpdateArgumentScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdateData">
            <summary>设置 RefinedSeries.UpdateData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdateFilters">
            <summary>设置 RefinedSeries.UpdateFilters() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdatePointsIndices">
            <summary>设置 RefinedSeries.UpdatePointsIndices() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdateRandomPoints">
            <summary>设置 RefinedSeries.UpdateRandomPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UpdateVisiblePointIndexesIMinMaxValues">
            <summary>设置 RefinedSeries.UpdateVisiblePointIndexes(IMinMaxValues visualRangeValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.UseOnlyVisiblePointsGet">
            <summary>设置 RefinedSeries.get_UseOnlyVisiblePoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ValueGroupGet">
            <summary>设置 RefinedSeries.get_ValueGroup() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeries.ValueScaleTypeGet">
            <summary>设置 RefinedSeries.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroup 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.#ctor(DevExpress.Charts.Native.RefinedSeriesGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AddSeriesRefinedSeriesBoolean">
            <summary>设置 RefinedSeriesGroup.AddSeries(RefinedSeries series, Boolean visible) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.AddSeriesRefinedSeriesBoolean">
            <summary>设置 RefinedSeriesGroup.AddSeries(RefinedSeries series, Boolean visible) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.BindScaleMapToAxis">
            <summary>设置 RefinedSeriesGroup.BindScaleMapToAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.CheckAxisValueContainerMinMaxValuesIAxisValueContainerIScaleMap">
            <summary>设置 RefinedSeriesGroup.CheckAxisValueContainer(MinMaxValues minMaxValues, IAxisValueContainer valueContainer, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.CheckMinDoubleDouble">
            <summary>设置 RefinedSeriesGroup.CheckMin(Double min, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.CreateDateTimeMap">
            <summary>设置 RefinedSeriesGroup.CreateDateTimeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.CreateNumericalMap">
            <summary>设置 RefinedSeriesGroup.CreateNumericalMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.CreateScaleMapRefinedSeries">
            <summary>设置 RefinedSeriesGroup.CreateScaleMap(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.FindMainSeries">
            <summary>设置 RefinedSeriesGroup.FindMainSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetDateTimeMeasureUnit">
            <summary>设置 RefinedSeriesGroup.GetDateTimeMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetMinAbsValueFromAxisElementsIAxisElementContainer">
            <summary>设置 RefinedSeriesGroup.GetMinAbsValueFromAxisElements(IAxisElementContainer elementContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetMinMaxValuesFromAxisElementsIAxisElementContainerIScaleMap">
            <summary>设置 RefinedSeriesGroup.GetMinMaxValuesFromAxisElements(IAxisElementContainer elementContainer, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetMinMaxValuesIAxisData">
            <summary>设置 RefinedSeriesGroup.GetMinMaxValues(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetNumericalMeasureUnit">
            <summary>设置 RefinedSeriesGroup.GetNumericalMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GetRangeIAxisDataAxisScaleTypeMap">
            <summary>设置 RefinedSeriesGroup.GetRange(IAxisData axis, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.GroupKeyGet">
            <summary>设置 RefinedSeriesGroup.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.IsEmptyGet">
            <summary>设置 RefinedSeriesGroup.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.RefinedSeriesGet">
            <summary>设置 RefinedSeriesGroup.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.RemoveAllSeries">
            <summary>设置 RefinedSeriesGroup.RemoveAllSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 RefinedSeriesGroup.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.ScaleMapGet">
            <summary>设置 RefinedSeriesGroup.get_ScaleMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.ShouldRecreateScaleMapRefinedSeries">
            <summary>设置 RefinedSeriesGroup.ShouldRecreateScaleMap(RefinedSeries mainSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.UpdateAxisData">
            <summary>设置 RefinedSeriesGroup.UpdateAxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.UpdateScaleBreaks">
            <summary>设置 RefinedSeriesGroup.UpdateScaleBreaks() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.UpdateScaleMapBoolean">
            <summary>设置 RefinedSeriesGroup.UpdateScaleMap(Boolean forceCreate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.UpdateSideMarginsEnable">
            <summary>设置 RefinedSeriesGroup.UpdateSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.AllInstances.UpdateTransformation">
            <summary>设置 RefinedSeriesGroup.UpdateTransformation() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.BindScaleMapToAxis">
            <summary>设置 RefinedSeriesGroup.BindScaleMapToAxis() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.CheckAxisValueContainerMinMaxValuesIAxisValueContainerIScaleMap">
            <summary>设置 RefinedSeriesGroup.CheckAxisValueContainer(MinMaxValues minMaxValues, IAxisValueContainer valueContainer, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.CheckMinDoubleDouble">
            <summary>设置 RefinedSeriesGroup.CheckMin(Double min, Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.ConstructorRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroup.RefinedSeriesGroup(RefinedSeriesGroupKey groupKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.CreateDateTimeMap">
            <summary>设置 RefinedSeriesGroup.CreateDateTimeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.CreateNumericalMap">
            <summary>设置 RefinedSeriesGroup.CreateNumericalMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.CreateScaleMapRefinedSeries">
            <summary>设置 RefinedSeriesGroup.CreateScaleMap(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.FindMainSeries">
            <summary>设置 RefinedSeriesGroup.FindMainSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetDateTimeMeasureUnit">
            <summary>设置 RefinedSeriesGroup.GetDateTimeMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetMinAbsValueFromAxisElementsIAxisElementContainer">
            <summary>设置 RefinedSeriesGroup.GetMinAbsValueFromAxisElements(IAxisElementContainer elementContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetMinMaxValuesFromAxisElementsIAxisElementContainerIScaleMap">
            <summary>设置 RefinedSeriesGroup.GetMinMaxValuesFromAxisElements(IAxisElementContainer elementContainer, IScaleMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetMinMaxValuesIAxisData">
            <summary>设置 RefinedSeriesGroup.GetMinMaxValues(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetNumericalMeasureUnit">
            <summary>设置 RefinedSeriesGroup.GetNumericalMeasureUnit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GetRangeIAxisDataAxisScaleTypeMap">
            <summary>设置 RefinedSeriesGroup.GetRange(IAxisData axis, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.GroupKeyGet">
            <summary>设置 RefinedSeriesGroup.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.IsEmptyGet">
            <summary>设置 RefinedSeriesGroup.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.RefinedSeriesGet">
            <summary>设置 RefinedSeriesGroup.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.RemoveAllSeries">
            <summary>设置 RefinedSeriesGroup.RemoveAllSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.RemoveSeriesRefinedSeries">
            <summary>设置 RefinedSeriesGroup.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.ScaleMapGet">
            <summary>设置 RefinedSeriesGroup.get_ScaleMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.ShouldRecreateScaleMapRefinedSeries">
            <summary>设置 RefinedSeriesGroup.ShouldRecreateScaleMap(RefinedSeries mainSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.UpdateAxisData">
            <summary>设置 RefinedSeriesGroup.UpdateAxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.UpdateScaleBreaks">
            <summary>设置 RefinedSeriesGroup.UpdateScaleBreaks() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.UpdateScaleMapBoolean">
            <summary>设置 RefinedSeriesGroup.UpdateScaleMap(Boolean forceCreate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.UpdateSideMarginsEnable">
            <summary>设置 RefinedSeriesGroup.UpdateSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroup.UpdateTransformation">
            <summary>设置 RefinedSeriesGroup.UpdateTransformation() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupByArgument 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.#ctor(DevExpress.Charts.Native.RefinedSeriesGroupByArgument)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.CalcSideMarginsEnable">
            <summary>设置 RefinedSeriesGroupByArgument.CalcSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.CalculateFilteredIndexes">
            <summary>设置 RefinedSeriesGroupByArgument.CalculateFilteredIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.CreateQualitativeMap">
            <summary>设置 RefinedSeriesGroupByArgument.CreateQualitativeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.FilterInt32RefinedSeriesMinMaxValues">
            <summary>设置 RefinedSeriesGroupByArgument.Filter(Int32 i, RefinedSeries series, MinMaxValues filter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.FindFirstPointRefinedSeriesMinMaxValuesInt32Int32">
            <summary>设置 RefinedSeriesGroupByArgument.FindFirstPoint(RefinedSeries series, MinMaxValues filter, Int32 start, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetMinAbsValue">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetMinMaxByFilteredPointsIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxByFilteredPoints(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetMinMaxRefined">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetMinMaxValuesFromSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxValuesFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetMinMaxValuesFromSeriesIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxValuesFromSeries(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.GetScaleTypeRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetScaleType(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.HasFullStackedSeriesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.HasFullStackedSeries(List`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.IsAutoModeSideMarginMode">
            <summary>设置 RefinedSeriesGroupByArgument.IsAutoMode(SideMarginMode mode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.IsFullStackedSeriesISeriesView">
            <summary>设置 RefinedSeriesGroupByArgument.IsFullStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.UpdateAxisData">
            <summary>设置 RefinedSeriesGroupByArgument.UpdateAxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.AllInstances.UpdateSideMarginsEnable">
            <summary>设置 RefinedSeriesGroupByArgument.UpdateSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.CalcSideMarginsEnable">
            <summary>设置 RefinedSeriesGroupByArgument.CalcSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.CalculateFilteredIndexes">
            <summary>设置 RefinedSeriesGroupByArgument.CalculateFilteredIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.ConstructorRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroupByArgument.RefinedSeriesGroupByArgument(RefinedSeriesGroupKey groupKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.CreateQualitativeMap">
            <summary>设置 RefinedSeriesGroupByArgument.CreateQualitativeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.FilterInt32RefinedSeriesMinMaxValues">
            <summary>设置 RefinedSeriesGroupByArgument.Filter(Int32 i, RefinedSeries series, MinMaxValues filter) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.FindFirstPointRefinedSeriesMinMaxValuesInt32Int32">
            <summary>设置 RefinedSeriesGroupByArgument.FindFirstPoint(RefinedSeries series, MinMaxValues filter, Int32 start, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetMinAbsValue">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetMinMaxByFilteredPointsIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxByFilteredPoints(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetMinMaxRefined">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetMinMaxValuesFromSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxValuesFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetMinMaxValuesFromSeriesIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetMinMaxValuesFromSeries(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.GetScaleTypeRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.GetScaleType(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.HasFullStackedSeriesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.HasFullStackedSeries(List`1&lt;RefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.IsAutoModeSideMarginMode">
            <summary>设置 RefinedSeriesGroupByArgument.IsAutoMode(SideMarginMode mode) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.IsFullStackedSeriesISeriesView">
            <summary>设置 RefinedSeriesGroupByArgument.IsFullStackedSeries(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.UpdateAxisData">
            <summary>设置 RefinedSeriesGroupByArgument.UpdateAxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument.UpdateSideMarginsEnable">
            <summary>设置 RefinedSeriesGroupByArgument.UpdateSideMarginsEnable() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByArgument._CreateQualitativeMapb__0RefinedSeriesRefinedSeries">
            <summary>设置 RefinedSeriesGroupByArgument.&lt;CreateQualitativeMap&gt;b__0(RefinedSeries x, RefinedSeries y) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupByValue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.#ctor(DevExpress.Charts.Native.RefinedSeriesGroupByValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AddIndicatorIAffectsAxisRange">
            <summary>设置 RefinedSeriesGroupByValue.AddIndicator(IAffectsAxisRange indicator) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.AddIndicatorIAffectsAxisRange">
            <summary>设置 RefinedSeriesGroupByValue.AddIndicator(IAffectsAxisRange indicator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.ClearIndicators">
            <summary>设置 RefinedSeriesGroupByValue.ClearIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.CreateQualitativeMap">
            <summary>设置 RefinedSeriesGroupByValue.CreateQualitativeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.GetMinAbsValue">
            <summary>设置 RefinedSeriesGroupByValue.GetMinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.GetMinMaxRefined">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.GetMinMaxValuesFromSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxValuesFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.GetMinMaxValuesFromSeriesIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxValuesFromSeries(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.AllInstances.GetScaleTypeRefinedSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetScaleType(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.ClearIndicators">
            <summary>设置 RefinedSeriesGroupByValue.ClearIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.ConstructorRefinedSeriesGroupKeyIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupByValue.RefinedSeriesGroupByValue(RefinedSeriesGroupKey groupKey, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.CreateQualitativeMap">
            <summary>设置 RefinedSeriesGroupByValue.CreateQualitativeMap() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.GetMinAbsValue">
            <summary>设置 RefinedSeriesGroupByValue.GetMinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.GetMinMaxRefined">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxRefined() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.GetMinMaxValuesFromSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxValuesFromSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.GetMinMaxValuesFromSeriesIMinMaxValuesListOfRefinedSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetMinMaxValuesFromSeries(IMinMaxValues rangeForFiltering, List`1&lt;RefinedSeries&gt; seriesForFiltering) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupByValue.GetScaleTypeRefinedSeries">
            <summary>设置 RefinedSeriesGroupByValue.GetScaleType(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupController 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.#ctor(DevExpress.Charts.Native.RefinedSeriesGroupController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.CalculateFilteredIndexes">
            <summary>设置 RefinedSeriesGroupController.CalculateFilteredIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.ClearGroupsIEnumerableOfIAxisData">
            <summary>设置 RefinedSeriesGroupController.ClearGroups(IEnumerable`1&lt;IAxisData&gt; axes) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.ClearSeparatePaneIndicators">
            <summary>设置 RefinedSeriesGroupController.ClearSeparatePaneIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.CreateFakeGroupIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.CreateFakeGroup(IAxisData axisData, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.FindRefinedSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.FindRefinedSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.GetArgumentGroupKeyRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetArgumentGroupKey(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.GetArgumentGroupRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetArgumentGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.GetGroupRefinedSeriesGroupKeyIMinMaxValuesCalculatorBoolean">
            <summary>设置 RefinedSeriesGroupController.GetGroup(RefinedSeriesGroupKey groupKey, IMinMaxValuesCalculator minMaxCalculator, Boolean isArgumentGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.GetValueGroupKeyRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetValueGroupKey(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.GetValueGroupRefinedSeriesIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.GetValueGroup(RefinedSeries series, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.InsertGroupIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.InsertGroup(IAxisData axis, IMinMaxValuesCalculator calculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RefinedSeriesGroupsGet">
            <summary>设置 RefinedSeriesGroupController.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RemoveAllSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveAllSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RemoveFromSeriesGroupRefinedSeriesGroupRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveFromSeriesGroup(RefinedSeriesGroup seriesGroup, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RemoveFromSeriesGroupsRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveFromSeriesGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RemoveGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.RemoveGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.RemoveSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.RemoveSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.UpdateAxisDataIEnumerableOfIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.UpdateAxisData(IEnumerable`1&lt;IAxisData&gt; axes, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.AllInstances.UpdateQualitativeScaleMap">
            <summary>设置 RefinedSeriesGroupController.UpdateQualitativeScaleMap() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.CalculateFilteredIndexes">
            <summary>设置 RefinedSeriesGroupController.CalculateFilteredIndexes() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.ClearGroupsIEnumerableOfIAxisData">
            <summary>设置 RefinedSeriesGroupController.ClearGroups(IEnumerable`1&lt;IAxisData&gt; axes) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.ClearSeparatePaneIndicators">
            <summary>设置 RefinedSeriesGroupController.ClearSeparatePaneIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.Constructor">
            <summary>设置 RefinedSeriesGroupController.RefinedSeriesGroupController() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.CreateFakeGroupIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.CreateFakeGroup(IAxisData axisData, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.FindRefinedSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.FindRefinedSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.GetArgumentGroupKeyRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetArgumentGroupKey(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.GetArgumentGroupRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetArgumentGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.GetGroupRefinedSeriesGroupKeyIMinMaxValuesCalculatorBoolean">
            <summary>设置 RefinedSeriesGroupController.GetGroup(RefinedSeriesGroupKey groupKey, IMinMaxValuesCalculator minMaxCalculator, Boolean isArgumentGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.GetValueGroupKeyRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.GetValueGroupKey(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.GetValueGroupRefinedSeriesIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.GetValueGroup(RefinedSeries series, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.InsertGroupIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.InsertGroup(IAxisData axis, IMinMaxValuesCalculator calculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RefinedSeriesGroupsGet">
            <summary>设置 RefinedSeriesGroupController.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RemoveAllSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveAllSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RemoveFromSeriesGroupRefinedSeriesGroupRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveFromSeriesGroup(RefinedSeriesGroup seriesGroup, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RemoveFromSeriesGroupsRefinedSeries">
            <summary>设置 RefinedSeriesGroupController.RemoveFromSeriesGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RemoveGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.RemoveGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.RemoveSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesGroupController.RemoveSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.UpdateAxisDataIEnumerableOfIAxisDataIMinMaxValuesCalculator">
            <summary>设置 RefinedSeriesGroupController.UpdateAxisData(IEnumerable`1&lt;IAxisData&gt; axes, IMinMaxValuesCalculator minMaxCalculator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupController.UpdateQualitativeScaleMap">
            <summary>设置 RefinedSeriesGroupController.UpdateQualitativeScaleMap() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupKey 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.#ctor(DevExpress.Charts.Native.RefinedSeriesGroupKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances.AxisDataGet">
            <summary>设置 RefinedSeriesGroupKey.get_AxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances.EqualsObject">
            <summary>设置 RefinedSeriesGroupKey.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances.EqualsRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroupKey.Equals(RefinedSeriesGroupKey key) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances.GetHashCode01">
            <summary>设置 RefinedSeriesGroupKey.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AllInstances.IsSeriesGroupKeyGet">
            <summary>设置 RefinedSeriesGroupKey.get_IsSeriesGroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.AxisDataGet">
            <summary>设置 RefinedSeriesGroupKey.get_AxisData() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.ConstructorIAxisData">
            <summary>设置 RefinedSeriesGroupKey.RefinedSeriesGroupKey(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.ConstructorRefinedSeriesBoolean">
            <summary>设置 RefinedSeriesGroupKey.RefinedSeriesGroupKey(RefinedSeries series, Boolean isArgumentKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.EqualityOpRefinedSeriesGroupKeyRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroupKey.op_Equality(RefinedSeriesGroupKey a, RefinedSeriesGroupKey b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.EqualsObject">
            <summary>设置 RefinedSeriesGroupKey.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.EqualsRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroupKey.Equals(RefinedSeriesGroupKey key) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.GetHashCode">
            <summary>设置 RefinedSeriesGroupKey.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.InequalityOpRefinedSeriesGroupKeyRefinedSeriesGroupKey">
            <summary>设置 RefinedSeriesGroupKey.op_Inequality(RefinedSeriesGroupKey a, RefinedSeriesGroupKey b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesGroupKey.IsSeriesGroupKeyGet">
            <summary>设置 RefinedSeriesGroupKey.get_IsSeriesGroupKey() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator">
            <summary>DevExpress.Charts.Native.RefinedSeriesIncompatibilityCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.#ctor(DevExpress.Charts.Native.RefinedSeriesIncompatibilityCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.CanCalculateGet">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.get_CanCalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.CheckIncompatibleViewTypeISeriesBooleanCompatibleViewType">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.GetAxisXkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisXkey(IXYSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.GetAxisYkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisYkey(IXYSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.GetViewISeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetView(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.InitializeISeriesISeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.Initialize(ISeries baseSeries, ISeriesView baseView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.IsCompatibleRefinedSeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.IsCompatible(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.AllInstances.IsVisibleAndCompatibleRefinedSeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.IsVisibleAndCompatible(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.CanCalculateGet">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.get_CanCalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewTypeISeriesBooleanCompatibleViewType">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.ConstructorSeriesIncompatibilityStatistics">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.RefinedSeriesIncompatibilityCalculator(SeriesIncompatibilityStatistics statistics) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.GetAxisXkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisXkey(IXYSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.GetAxisYkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisYkey(IXYSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.GetViewISeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetView(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.InitializeISeriesISeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.Initialize(ISeries baseSeries, ISeriesView baseView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.IsCompatibleRefinedSeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.IsCompatible(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesIncompatibilityCalculator.IsVisibleAndCompatibleRefinedSeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.IsVisibleAndCompatible(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository">
            <summary>DevExpress.Charts.Native.RefinedSeriesRepository 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.#ctor(DevExpress.Charts.Native.RefinedSeriesRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AddToActiveRefinedSeriesBooleanBoolean">
            <summary>设置 RefinedSeriesRepository.AddToActive(RefinedSeries series, Boolean isVisibleAndCompatible, Boolean shouldBeDrawn) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.AddToActiveRefinedSeriesBooleanBoolean">
            <summary>设置 RefinedSeriesRepository.AddToActive(RefinedSeries series, Boolean isVisibleAndCompatible, Boolean shouldBeDrawn) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.CleanRefinedSeries">
            <summary>设置 RefinedSeriesRepository.CleanRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.ClearActiveRefinedSeries">
            <summary>设置 RefinedSeriesRepository.ClearActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.ClearRefinedSeries">
            <summary>设置 RefinedSeriesRepository.ClearRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.DevExpressChartsNativeIRefinedSeriesContainerHasSameContainersIRefinedSeriesIRefinedSeries">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.DevExpressChartsNativeIRefinedSeriesContainerIsFirstInContainerRefinedSeries">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.IsFirstInContainer(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.FindRefinedSeriesFuncOfRefinedSeriesBoolean">
            <summary>设置 RefinedSeriesRepository.FindRefinedSeries(Func`2&lt;RefinedSeries,Boolean&gt; predicat) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.FindRefinedSeriesISeriesBase">
            <summary>设置 RefinedSeriesRepository.FindRefinedSeries(ISeriesBase series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.GetActiveRefinedSeries">
            <summary>设置 RefinedSeriesRepository.GetActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.GetInteractionManager">
            <summary>设置 RefinedSeriesRepository.GetInteractionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.GetRefinedSeries">
            <summary>设置 RefinedSeriesRepository.GetRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.GetSeriesForLegend">
            <summary>设置 RefinedSeriesRepository.GetSeriesForLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.GroupControllerGet">
            <summary>设置 RefinedSeriesRepository.get_GroupController() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.InsertSeriesInt32ICollectionOfISeries">
            <summary>设置 RefinedSeriesRepository.InsertSeries(Int32 newIndex, ICollection`1&lt;ISeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.InsertSeriesInt32ISeries">
            <summary>设置 RefinedSeriesRepository.InsertSeries(Int32 newIndex, ISeries newItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.IsContainsProcessedPointsDevExpressChartsNativeIRefinedSeriesContainerget">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.IsContainsProcessedPointsGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.IsContainsProcessedSeriesGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.IsDesignModeDevExpressChartsNativeIRefinedSeriesContainerget">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.get_IsDesignMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.MoveRefinedSeriesInt32Int32">
            <summary>设置 RefinedSeriesRepository.MoveRefinedSeries(Int32 newIndex, Int32 oldIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RefineSeriesISeries">
            <summary>设置 RefinedSeriesRepository.RefineSeries(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RefinedSeriesGet">
            <summary>设置 RefinedSeriesRepository.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RemoveFromSeriesGroupsRefinedSeries">
            <summary>设置 RefinedSeriesRepository.RemoveFromSeriesGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RemoveSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesRepository.RemoveSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RemoveSeriesICollectionOfISeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(ICollection`1&lt;ISeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RemoveSeriesISeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.SwapRefinedSeriesInt32Int32">
            <summary>设置 RefinedSeriesRepository.SwapRefinedSeries(Int32 newIndex, Int32 oldIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.AllInstances.UpdateRefinedSeriesInt32ISeriesISeries">
            <summary>设置 RefinedSeriesRepository.UpdateRefinedSeries(Int32 oldIndex, ISeries oldItem, ISeries newItem) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.Bind(DevExpress.Charts.Native.IRefinedSeriesContainer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.CleanRefinedSeries">
            <summary>设置 RefinedSeriesRepository.CleanRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.ClearActiveRefinedSeries">
            <summary>设置 RefinedSeriesRepository.ClearActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.ClearRefinedSeries">
            <summary>设置 RefinedSeriesRepository.ClearRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.ConstructorIChartDataContainer">
            <summary>设置 RefinedSeriesRepository.RefinedSeriesRepository(IChartDataContainer dataContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.DevExpressChartsNativeIRefinedSeriesContainerHasSameContainersIRefinedSeriesIRefinedSeries">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.DevExpressChartsNativeIRefinedSeriesContainerIsFirstInContainerRefinedSeries">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.IsFirstInContainer(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.FindRefinedSeriesFuncOfRefinedSeriesBoolean">
            <summary>设置 RefinedSeriesRepository.FindRefinedSeries(Func`2&lt;RefinedSeries,Boolean&gt; predicat) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.FindRefinedSeriesISeriesBase">
            <summary>设置 RefinedSeriesRepository.FindRefinedSeries(ISeriesBase series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.GetActiveRefinedSeries">
            <summary>设置 RefinedSeriesRepository.GetActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.GetInteractionManager">
            <summary>设置 RefinedSeriesRepository.GetInteractionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.GetRefinedSeries">
            <summary>设置 RefinedSeriesRepository.GetRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.GetSeriesForLegend">
            <summary>设置 RefinedSeriesRepository.GetSeriesForLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.GroupControllerGet">
            <summary>设置 RefinedSeriesRepository.get_GroupController() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.InsertSeriesInt32ICollectionOfISeries">
            <summary>设置 RefinedSeriesRepository.InsertSeries(Int32 newIndex, ICollection`1&lt;ISeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.InsertSeriesInt32ISeries">
            <summary>设置 RefinedSeriesRepository.InsertSeries(Int32 newIndex, ISeries newItem) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.IsContainsProcessedPointsDevExpressChartsNativeIRefinedSeriesContainerget">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.IsContainsProcessedPointsGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.IsContainsProcessedSeriesGet">
            <summary>设置 RefinedSeriesRepository.get_IsContainsProcessedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.IsDesignModeDevExpressChartsNativeIRefinedSeriesContainerget">
            <summary>设置 RefinedSeriesRepository.DevExpress.Charts.Native.IRefinedSeriesContainer.get_IsDesignMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.MoveRefinedSeriesInt32Int32">
            <summary>设置 RefinedSeriesRepository.MoveRefinedSeries(Int32 newIndex, Int32 oldIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RefineSeriesISeries">
            <summary>设置 RefinedSeriesRepository.RefineSeries(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RefinedSeriesGet">
            <summary>设置 RefinedSeriesRepository.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RemoveFromSeriesGroupsRefinedSeries">
            <summary>设置 RefinedSeriesRepository.RemoveFromSeriesGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RemoveSeriesGroupIAxisData">
            <summary>设置 RefinedSeriesRepository.RemoveSeriesGroup(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RemoveSeriesICollectionOfISeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(ICollection`1&lt;ISeries&gt; seriesList) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RemoveSeriesISeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.RemoveSeriesRefinedSeries">
            <summary>设置 RefinedSeriesRepository.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.SwapRefinedSeriesInt32Int32">
            <summary>设置 RefinedSeriesRepository.SwapRefinedSeries(Int32 newIndex, Int32 oldIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefinedSeriesRepository.UpdateRefinedSeriesInt32ISeriesISeries">
            <summary>设置 RefinedSeriesRepository.UpdateRefinedSeries(Int32 oldIndex, ISeries oldItem, ISeries newItem) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo">
            <summary>DevExpress.Charts.Native.RefreshDataUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.#ctor(DevExpress.Charts.Native.RefreshDataUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRefreshDataUpdateInfo.ConstructorObject">
            <summary>设置 RefreshDataUpdateInfo.RefreshDataUpdateInfo(Object sender) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator">
            <summary>DevExpress.Charts.Native.RegressionCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.#ctor(DevExpress.Charts.Native.RegressionCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.AllInstances.CalculateKAndBIRefinedSeriesValueLevelInternal">
            <summary>设置 RegressionCalculator.CalculateKAndB(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.CalculateKAndBIRefinedSeriesValueLevelInternal">
            <summary>设置 RegressionCalculator.CalculateKAndB(IRefinedSeries series, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionCalculator.Constructor">
            <summary>设置 RegressionCalculator.RegressionCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator">
            <summary>DevExpress.Charts.Native.RegressionLineCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.#ctor(DevExpress.Charts.Native.RegressionLineCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.AllInstances.CalculateIRefinedSeriesDoubleDoubleValueLevelInternal">
            <summary>设置 RegressionLineCalculator.Calculate(IRefinedSeries series, Double x1, Double x2, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.CalculateIRefinedSeriesDoubleDoubleValueLevelInternal">
            <summary>设置 RegressionLineCalculator.Calculate(IRefinedSeries series, Double x1, Double x2, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRegressionLineCalculator.Constructor">
            <summary>设置 RegressionLineCalculator.RegressionLineCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator">
            <summary>DevExpress.Charts.Native.RelativeStrengthIndexCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.#ctor(DevExpress.Charts.Native.RelativeStrengthIndexCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.CalcNextEmaDoubleDoubleDouble">
            <summary>设置 RelativeStrengthIndexCalculator.CalcNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RelativeStrengthIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.CalculatedGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 RelativeStrengthIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RelativeStrengthIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.MaxYGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 RelativeStrengthIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.MinYGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.AllInstances.MinYSetDouble">
            <summary>设置 RelativeStrengthIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.CalcNextEmaDoubleDoubleDouble">
            <summary>设置 RelativeStrengthIndexCalculator.CalcNextEma(Double value, Double preEma, Double smoothingFactor) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RelativeStrengthIndexCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.CalculatedGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.CalculatedSetBoolean">
            <summary>设置 RelativeStrengthIndexCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.Constructor">
            <summary>设置 RelativeStrengthIndexCalculator.RelativeStrengthIndexCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 RelativeStrengthIndexCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.MaxYGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.MaxYSetDouble">
            <summary>设置 RelativeStrengthIndexCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.MinYGet">
            <summary>设置 RelativeStrengthIndexCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRelativeStrengthIndexCalculator.MinYSetDouble">
            <summary>设置 RelativeStrengthIndexCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate">
            <summary>DevExpress.Charts.Native.ReprocessPointsUpdate 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.#ctor(DevExpress.Charts.Native.ReprocessPointsUpdate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.AllInstances.SeriesGet">
            <summary>设置 ReprocessPointsUpdate.get_Series() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.ConstructorISeries">
            <summary>设置 ReprocessPointsUpdate.ReprocessPointsUpdate(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimReprocessPointsUpdate.SeriesGet">
            <summary>设置 ReprocessPointsUpdate.get_Series() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn">
            <summary>DevExpress.Charts.Native.ResolveOverlappingByColumn 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.#ctor(DevExpress.Charts.Native.ResolveOverlappingByColumn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.AllInstances.ArrangeGroupListOfIPieLabelLayoutGRealRect2DInt32">
            <summary>设置 ResolveOverlappingByColumn.ArrangeGroup(List`1&lt;IPieLabelLayout&gt; labels, GRealRect2D bounds, Int32 resolveOverlappingMinIndent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.AllInstances.ArrangeLabelsIListOfIPieLabelLayoutGRealRect2DInt32">
            <summary>设置 ResolveOverlappingByColumn.ArrangeLabels(IList`1&lt;IPieLabelLayout&gt; labels, GRealRect2D bounds, Int32 resolveOverlappingMinIndent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.AllInstances.CalcFocusesGRealRect2D">
            <summary>设置 ResolveOverlappingByColumn.CalcFocuses(GRealRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.AllInstances.GroupLabelsByColumnsIListOfIPieLabelLayoutListOfIPieLabelLayoutListOfIPieLabelLayout">
            <summary>设置 ResolveOverlappingByColumn.GroupLabelsByColumns(IList`1&lt;IPieLabelLayout&gt; labels, List`1&lt;IPieLabelLayout&gt; left, List`1&lt;IPieLabelLayout&gt; right) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.ArrangeGroupListOfIPieLabelLayoutGRealRect2DInt32">
            <summary>设置 ResolveOverlappingByColumn.ArrangeGroup(List`1&lt;IPieLabelLayout&gt; labels, GRealRect2D bounds, Int32 resolveOverlappingMinIndent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.ArrangeLabelsIListOfIPieLabelLayoutGRealRect2DInt32">
            <summary>设置 ResolveOverlappingByColumn.ArrangeLabels(IList`1&lt;IPieLabelLayout&gt; labels, GRealRect2D bounds, Int32 resolveOverlappingMinIndent) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.CalcFocusesGRealRect2D">
            <summary>设置 ResolveOverlappingByColumn.CalcFocuses(GRealRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.Constructor">
            <summary>设置 ResolveOverlappingByColumn.ResolveOverlappingByColumn() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByColumn.GroupLabelsByColumnsIListOfIPieLabelLayoutListOfIPieLabelLayoutListOfIPieLabelLayout">
            <summary>设置 ResolveOverlappingByColumn.GroupLabelsByColumns(IList`1&lt;IPieLabelLayout&gt; labels, List`1&lt;IPieLabelLayout&gt; left, List`1&lt;IPieLabelLayout&gt; right) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse">
            <summary>DevExpress.Charts.Native.ResolveOverlappingByEllipse 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.#ctor(DevExpress.Charts.Native.ResolveOverlappingByEllipse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.AllInstances.ArrangeLabelsIListOfIPieLabelLayoutGRealEllipseInt32PointsSweepDirectionGRealRect2D">
            <summary>设置 ResolveOverlappingByEllipse.ArrangeLabels(IList`1&lt;IPieLabelLayout&gt; labels, GRealEllipse ellipse, Int32 resolveOverlappingMinIndent, PointsSweepDirection direction, GRealRect2D diagramBounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.AllInstances.CalcAngleGRealPoint2DGRealPoint2D">
            <summary>设置 ResolveOverlappingByEllipse.CalcAngle(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.AllInstances.FindPointIListOfGRealPoint2DGRealRect2DGRealPoint2DBooleanPointsSweepDirection">
            <summary>设置 ResolveOverlappingByEllipse.FindPoint(IList`1&lt;GRealPoint2D&gt; points, GRealRect2D bounds, GRealPoint2D center, Boolean forward, PointsSweepDirection direction) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.AllInstances.IsAngleInRangeDoubleDoubleDouble">
            <summary>设置 ResolveOverlappingByEllipse.IsAngleInRange(Double angle, Double angle1, Double angle2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.ArrangeLabelsIListOfIPieLabelLayoutGRealEllipseInt32PointsSweepDirectionGRealRect2D">
            <summary>设置 ResolveOverlappingByEllipse.ArrangeLabels(IList`1&lt;IPieLabelLayout&gt; labels, GRealEllipse ellipse, Int32 resolveOverlappingMinIndent, PointsSweepDirection direction, GRealRect2D diagramBounds) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.CalcAngleGRealPoint2DGRealPoint2D">
            <summary>设置 ResolveOverlappingByEllipse.CalcAngle(GRealPoint2D p1, GRealPoint2D p2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.Constructor">
            <summary>设置 ResolveOverlappingByEllipse.ResolveOverlappingByEllipse() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.FindPointIListOfGRealPoint2DGRealRect2DGRealPoint2DBooleanPointsSweepDirection">
            <summary>设置 ResolveOverlappingByEllipse.FindPoint(IList`1&lt;GRealPoint2D&gt; points, GRealRect2D bounds, GRealPoint2D center, Boolean forward, PointsSweepDirection direction) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimResolveOverlappingByEllipse.IsAngleInRangeDoubleDoubleDouble">
            <summary>设置 ResolveOverlappingByEllipse.IsAngleInRange(Double angle, Double angle1, Double angle2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRow">
            <summary>DevExpress.Charts.Native.Row 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRow.#ctor(DevExpress.Charts.Native.Row)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances.BoundsGet">
            <summary>设置 Row.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances.CompareToObject">
            <summary>设置 Row.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances.FindCellInt32Int32Out">
            <summary>设置 Row.FindCell(Int32 x, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances.ItemsGet">
            <summary>设置 Row.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.AllInstances.SeparateByVerticalInt32Int32">
            <summary>设置 Row.SeparateByVertical(Int32 separator, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRow.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.BoundsGet">
            <summary>设置 Row.get_Bounds() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.CompareToObject">
            <summary>设置 Row.CompareTo(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.ConstructorGRect2D">
            <summary>设置 Row.Row(GRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.ConstructorGRect2DListOfCell">
            <summary>设置 Row.Row(GRect2D bounds, List`1&lt;Cell&gt; items) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.FindCellInt32Int32Out">
            <summary>设置 Row.FindCell(Int32 x, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.ItemsGet">
            <summary>设置 Row.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRow.SeparateByVerticalInt32Int32">
            <summary>设置 Row.SeparateByVertical(Int32 separator, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRows">
            <summary>DevExpress.Charts.Native.Rows 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRows.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRows.#ctor(DevExpress.Charts.Native.Rows)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AddRectangleGRect2D">
            <summary>设置 Rows.AddRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.AddRectangleGRect2D">
            <summary>设置 Rows.AddRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.ColumnsCountGet">
            <summary>设置 Rows.get_ColumnsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.CountGet">
            <summary>设置 Rows.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.DeleteRectangleGRect2D">
            <summary>设置 Rows.DeleteRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.FindCellInt32Int32Int32OutInt32Out">
            <summary>设置 Rows.FindCell(Int32 x, Int32 y, Int32&amp; rowIndex, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.FindIntersectionCellsGRect2D">
            <summary>设置 Rows.FindIntersectionCells(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.FindNearCellInt32Int32Int32OutInt32Out">
            <summary>设置 Rows.FindNearCell(Int32 x, Int32 y, Int32&amp; rowIndex, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.FindRowInt32Int32Out">
            <summary>设置 Rows.FindRow(Int32 y, Int32&amp; rowIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.GetCellInt32Int32">
            <summary>设置 Rows.GetCell(Int32 rowIndex, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.IsEmptyRegionGRect2D">
            <summary>设置 Rows.IsEmptyRegion(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.SeparateByHorizontalInt32">
            <summary>设置 Rows.SeparateByHorizontal(Int32 separator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.AllInstances.SeparateByVerticalInt32">
            <summary>设置 Rows.SeparateByVertical(Int32 separator) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRows.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimRows.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.ColumnsCountGet">
            <summary>设置 Rows.get_ColumnsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.ConstructorGRect2D">
            <summary>设置 Rows.Rows(GRect2D bounds) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.CountGet">
            <summary>设置 Rows.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.DeleteRectangleGRect2D">
            <summary>设置 Rows.DeleteRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.FindCellInt32Int32Int32OutInt32Out">
            <summary>设置 Rows.FindCell(Int32 x, Int32 y, Int32&amp; rowIndex, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.FindIntersectionCellsGRect2D">
            <summary>设置 Rows.FindIntersectionCells(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.FindNearCellInt32Int32Int32OutInt32Out">
            <summary>设置 Rows.FindNearCell(Int32 x, Int32 y, Int32&amp; rowIndex, Int32&amp; columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.FindRowInt32Int32Out">
            <summary>设置 Rows.FindRow(Int32 y, Int32&amp; rowIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.GetCellInt32Int32">
            <summary>设置 Rows.GetCell(Int32 rowIndex, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.IsEmptyRegionGRect2D">
            <summary>设置 Rows.IsEmptyRegion(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.SeparateByHorizontalInt32">
            <summary>设置 Rows.SeparateByHorizontal(Int32 separator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimRows.SeparateByVerticalInt32">
            <summary>设置 Rows.SeparateByVertical(Int32 separator) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure">
            <summary>DevExpress.Charts.Native.SeriesBindingProcedure 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.#ctor(DevExpress.Charts.Native.SeriesBindingProcedure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AddPointsIEnumerableOfISeriesPoint">
            <summary>设置 SeriesBindingProcedure.AddPoints(IEnumerable`1&lt;ISeriesPoint&gt; newPoints) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.AddPointsIEnumerableOfISeriesPoint">
            <summary>设置 SeriesBindingProcedure.AddPoints(IEnumerable`1&lt;ISeriesPoint&gt; newPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.ColorDataMemberGet">
            <summary>设置 SeriesBindingProcedure.get_ColorDataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.Complete">
            <summary>设置 SeriesBindingProcedure.Complete() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.CreateBindingPoints">
            <summary>设置 SeriesBindingProcedure.CreateBindingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.PointsGet">
            <summary>设置 SeriesBindingProcedure.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.SeriesGet">
            <summary>设置 SeriesBindingProcedure.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.ToolTipHintDataMemberGet">
            <summary>设置 SeriesBindingProcedure.get_ToolTipHintDataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.ValueDataMembersGet">
            <summary>设置 SeriesBindingProcedure.get_ValueDataMembers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.AllInstances.ValueScaleTypeGet">
            <summary>设置 SeriesBindingProcedure.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.ColorDataMemberGet">
            <summary>设置 SeriesBindingProcedure.get_ColorDataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.Complete">
            <summary>设置 SeriesBindingProcedure.Complete() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.ConstructorISeriesDataContextBaseObjectString">
            <summary>设置 SeriesBindingProcedure.SeriesBindingProcedure(ISeries series, DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.CreateBindingPoints">
            <summary>设置 SeriesBindingProcedure.CreateBindingPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.PointsGet">
            <summary>设置 SeriesBindingProcedure.get_Points() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.SeriesGet">
            <summary>设置 SeriesBindingProcedure.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.ToolTipHintDataMemberGet">
            <summary>设置 SeriesBindingProcedure.get_ToolTipHintDataMember() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.ValueDataMembersGet">
            <summary>设置 SeriesBindingProcedure.get_ValueDataMembers() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingProcedure.ValueScaleTypeGet">
            <summary>设置 SeriesBindingProcedure.get_ValueScaleType() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate">
            <summary>DevExpress.Charts.Native.SeriesBindingUpdate 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.#ctor(DevExpress.Charts.Native.SeriesBindingUpdate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.AllInstances.SenderGet">
            <summary>设置 SeriesBindingUpdate.get_Sender() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.ConstructorISeries">
            <summary>设置 SeriesBindingUpdate.SeriesBindingUpdate(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesBindingUpdate.SenderGet">
            <summary>设置 SeriesBindingUpdate.get_Sender() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesCollectionBatchUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.#ctor(DevExpress.Charts.Native.SeriesCollectionBatchUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionBatchUpdateInfo.ConstructorObjectChartCollectionOperationICollectionOfISeriesInt32ICollectionOfISeriesInt32">
            <summary>设置 SeriesCollectionBatchUpdateInfo.SeriesCollectionBatchUpdateInfo(Object sender, ChartCollectionOperation operation, ICollection`1&lt;ISeries&gt; oldItem, Int32 oldIndex, ICollection`1&lt;ISeries&gt; newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesCollectionUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.#ctor(DevExpress.Charts.Native.SeriesCollectionUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesCollectionUpdateInfo.ConstructorObjectChartCollectionOperationISeriesInt32ISeriesInt32">
            <summary>设置 SeriesCollectionUpdateInfo.SeriesCollectionUpdateInfo(Object sender, ChartCollectionOperation operation, ISeries oldItem, Int32 oldIndex, ISeries newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex">
            <summary>DevExpress.Charts.Native.SeriesComparerByActiveIndex 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.#ctor(DevExpress.Charts.Native.SeriesComparerByActiveIndex)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.AllInstances.CompareRefinedSeriesRefinedSeries">
            <summary>设置 SeriesComparerByActiveIndex.Compare(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.CompareRefinedSeriesRefinedSeries">
            <summary>设置 SeriesComparerByActiveIndex.Compare(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesComparerByActiveIndex.Constructor">
            <summary>设置 SeriesComparerByActiveIndex.SeriesComparerByActiveIndex() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesContainer">
            <summary>DevExpress.Charts.Native.SeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.#ctor(DevExpress.Charts.Native.SeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances.ContainsRefinedSeries">
            <summary>设置 SeriesContainer.Contains(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances.IsEmptyGet">
            <summary>设置 SeriesContainer.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances.SeriesGet">
            <summary>设置 SeriesContainer.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances.SeriesViewGet">
            <summary>设置 SeriesContainer.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.AllInstances.UpdateRefinedPointRefinedSeriesRefinedPointRefinedPoint">
            <summary>设置 SeriesContainer.UpdateRefinedPoint(RefinedSeries refinedSeries, RefinedPoint oldPoint, RefinedPoint newPoint) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.ConstructorISeriesView">
            <summary>设置 SeriesContainer.SeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.ContainsRefinedSeries">
            <summary>设置 SeriesContainer.Contains(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.IsEmptyGet">
            <summary>设置 SeriesContainer.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.SeriesGet">
            <summary>设置 SeriesContainer.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.SeriesViewGet">
            <summary>设置 SeriesContainer.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesContainer.UpdateRefinedPointRefinedSeriesRefinedPointRefinedPoint">
            <summary>设置 SeriesContainer.UpdateRefinedPoint(RefinedSeries refinedSeries, RefinedPoint oldPoint, RefinedPoint newPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesController">
            <summary>DevExpress.Charts.Native.SeriesController 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.#ctor(DevExpress.Charts.Native.SeriesController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ActiveRefinedSeriesGet">
            <summary>设置 SeriesController.get_ActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AddIndicatorsInRefinedSeriesGroupIXYSeriesView">
            <summary>设置 SeriesController.AddIndicatorsInRefinedSeriesGroup(IXYSeriesView xyView) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ActiveRefinedSeriesGet">
            <summary>设置 SeriesController.get_ActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.AddIndicatorsInRefinedSeriesGroupIXYSeriesView">
            <summary>设置 SeriesController.AddIndicatorsInRefinedSeriesGroup(IXYSeriesView xyView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.BatchUpdateAxisAxisCollectionBatchUpdateInfo">
            <summary>设置 SeriesController.BatchUpdateAxis(AxisCollectionBatchUpdateInfo batchUpdateAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.BatchUpdateRefinedSeriesListSeriesCollectionBatchUpdateInfo">
            <summary>设置 SeriesController.BatchUpdateRefinedSeriesList(SeriesCollectionBatchUpdateInfo batchSeriesUpdate) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.CalculateIndicators">
            <summary>设置 SeriesController.CalculateIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.CommitTransaction">
            <summary>设置 SeriesController.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.CreateIncompatibilityCalculatorSeriesIncompatibilityStatistics">
            <summary>设置 SeriesController.CreateIncompatibilityCalculator(SeriesIncompatibilityStatistics incompatibilityStatistics) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.EnsureSeriesGroups">
            <summary>设置 SeriesController.EnsureSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.GetAllAxesIXYDiagram">
            <summary>设置 SeriesController.GetAllAxes(IXYDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.GetAxisRangeIAxisData">
            <summary>设置 SeriesController.GetAxisRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.GetBaseSeries">
            <summary>设置 SeriesController.GetBaseSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.GetSeriesByAxisIAxisData">
            <summary>设置 SeriesController.GetSeriesByAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.InteractionManagerGet">
            <summary>设置 SeriesController.get_InteractionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 SeriesController.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.IsContainsProcessedPointsGet">
            <summary>设置 SeriesController.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.IsContainsProcessedSeriesGet">
            <summary>设置 SeriesController.get_IsContainsProcessedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.IsLastUpdateInDesignModeGet">
            <summary>设置 SeriesController.get_IsLastUpdateInDesignMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.IsLastUpdateInDesignModeSetBoolean">
            <summary>设置 SeriesController.set_IsLastUpdateInDesignMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.OpenTransactionBoolean">
            <summary>设置 SeriesController.OpenTransaction(Boolean loading) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessDiagramPropertyUpdatePropertyUpdateInfoOfIDiagram">
            <summary>设置 SeriesController.ProcessDiagramPropertyUpdate(PropertyUpdateInfo`1&lt;IDiagram&gt; updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessLightUpdateLightUpdateInfo">
            <summary>设置 SeriesController.ProcessLightUpdate(LightUpdateInfo updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessPointsListOfRefinedSeriesGroupListOfRefinedSeries">
            <summary>设置 SeriesController.ProcessPoints(List`1&lt;RefinedSeriesGroup&gt; scaleMapChangedGroups, List`1&lt;RefinedSeries&gt; activityChangedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessPrimaryAxisUpdateIAxisData">
            <summary>设置 SeriesController.ProcessPrimaryAxisUpdate(IAxisData oldAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessUpdateChartUpdateInfoBase">
            <summary>设置 SeriesController.ProcessUpdate(ChartUpdateInfoBase updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ProcessUpdateChartUpdateInfoBaseBoolean">
            <summary>设置 SeriesController.ProcessUpdate(ChartUpdateInfoBase updateInfo, Boolean loading) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.RecreateQualitativeScaleMaps">
            <summary>设置 SeriesController.RecreateQualitativeScaleMaps() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.RefineSeriesISeriesSeriesController">
            <summary>设置 SeriesController.RefineSeries(ISeries series, SeriesController seriesController) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.RefinedSeriesGet">
            <summary>设置 SeriesController.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.RefinedSeriesGroupsGet">
            <summary>设置 SeriesController.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ReprocessPointsISeries">
            <summary>设置 SeriesController.ReprocessPoints(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.ResetAxisRangesIAxisData">
            <summary>设置 SeriesController.ResetAxisRanges(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.SeriesForLegendGet">
            <summary>设置 SeriesController.get_SeriesForLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.SeriesIncompatibilityStatisticsGet">
            <summary>设置 SeriesController.get_SeriesIncompatibilityStatistics() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.TryConvertRangeValuesIAxisRangeDataAxisScaleTypeMap">
            <summary>设置 SeriesController.TryConvertRangeValues(IAxisRangeData rangeData, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.TryUpdateGroupForSeriesRefinedSeriesBoolean">
            <summary>设置 SeriesController.TryUpdateGroupForSeries(RefinedSeries series, Boolean shouldBeDrawn) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateActiveRefinedSeries">
            <summary>设置 SeriesController.UpdateActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateAxisAxisCollectionUpdateInfo">
            <summary>设置 SeriesController.UpdateAxis(AxisCollectionUpdateInfo secondaryAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateAxisIAxisDataChartCollectionOperation">
            <summary>设置 SeriesController.UpdateAxis(IAxisData axis, ChartCollectionOperation operation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateAxisPropertyUpdateInfoOfIAxisData">
            <summary>设置 SeriesController.UpdateAxis(PropertyUpdateInfo`1&lt;IAxisData&gt; axisUpdateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateRefinedSeriesListSeriesCollectionUpdateInfo">
            <summary>设置 SeriesController.UpdateRefinedSeriesList(SeriesCollectionUpdateInfo updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.AllInstances.UpdateScaleMapIAxisData">
            <summary>设置 SeriesController.UpdateScaleMap(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.BatchUpdateAxisAxisCollectionBatchUpdateInfo">
            <summary>设置 SeriesController.BatchUpdateAxis(AxisCollectionBatchUpdateInfo batchUpdateAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.BatchUpdateRefinedSeriesListSeriesCollectionBatchUpdateInfo">
            <summary>设置 SeriesController.BatchUpdateRefinedSeriesList(SeriesCollectionBatchUpdateInfo batchSeriesUpdate) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.CalculateIndicators">
            <summary>设置 SeriesController.CalculateIndicators() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.CommitTransaction">
            <summary>设置 SeriesController.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ConstructorIChartDataContainer">
            <summary>设置 SeriesController.SeriesController(IChartDataContainer dataContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ConstructorIChartDataContainerCompatibleViewTypeBooleanIDiagram">
            <summary>设置 SeriesController.SeriesController(IChartDataContainer dataContainer, CompatibleViewType compatibleViewFormDiagram, Boolean isDiagram3D, IDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.CreateIncompatibilityCalculatorSeriesIncompatibilityStatistics">
            <summary>设置 SeriesController.CreateIncompatibilityCalculator(SeriesIncompatibilityStatistics incompatibilityStatistics) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.EnsureSeriesGroups">
            <summary>设置 SeriesController.EnsureSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.GetAllAxesIXYDiagram">
            <summary>设置 SeriesController.GetAllAxes(IXYDiagram diagram) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.GetAxisRangeIAxisData">
            <summary>设置 SeriesController.GetAxisRange(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.GetBaseSeries">
            <summary>设置 SeriesController.GetBaseSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.GetSeriesByAxisIAxisData">
            <summary>设置 SeriesController.GetSeriesByAxis(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.InteractionManagerGet">
            <summary>设置 SeriesController.get_InteractionManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.IsContainsProcessedNotEmptyPointsGet">
            <summary>设置 SeriesController.get_IsContainsProcessedNotEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.IsContainsProcessedPointsGet">
            <summary>设置 SeriesController.get_IsContainsProcessedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.IsContainsProcessedSeriesGet">
            <summary>设置 SeriesController.get_IsContainsProcessedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.IsLastUpdateInDesignModeGet">
            <summary>设置 SeriesController.get_IsLastUpdateInDesignMode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.IsLastUpdateInDesignModeSetBoolean">
            <summary>设置 SeriesController.set_IsLastUpdateInDesignMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.OpenTransactionBoolean">
            <summary>设置 SeriesController.OpenTransaction(Boolean loading) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessDiagramPropertyUpdatePropertyUpdateInfoOfIDiagram">
            <summary>设置 SeriesController.ProcessDiagramPropertyUpdate(PropertyUpdateInfo`1&lt;IDiagram&gt; updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessLightUpdateLightUpdateInfo">
            <summary>设置 SeriesController.ProcessLightUpdate(LightUpdateInfo updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessPointsListOfRefinedSeriesGroupListOfRefinedSeries">
            <summary>设置 SeriesController.ProcessPoints(List`1&lt;RefinedSeriesGroup&gt; scaleMapChangedGroups, List`1&lt;RefinedSeries&gt; activityChangedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessPrimaryAxisUpdateIAxisData">
            <summary>设置 SeriesController.ProcessPrimaryAxisUpdate(IAxisData oldAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessUpdateChartUpdateInfoBase">
            <summary>设置 SeriesController.ProcessUpdate(ChartUpdateInfoBase updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ProcessUpdateChartUpdateInfoBaseBoolean">
            <summary>设置 SeriesController.ProcessUpdate(ChartUpdateInfoBase updateInfo, Boolean loading) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.RecreateQualitativeScaleMaps">
            <summary>设置 SeriesController.RecreateQualitativeScaleMaps() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.RefineSeriesISeriesSeriesController">
            <summary>设置 SeriesController.RefineSeries(ISeries series, SeriesController seriesController) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.RefinedSeriesGet">
            <summary>设置 SeriesController.get_RefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.RefinedSeriesGroupsGet">
            <summary>设置 SeriesController.get_RefinedSeriesGroups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ReprocessPointsISeries">
            <summary>设置 SeriesController.ReprocessPoints(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ResetAxisRangesIAxisData">
            <summary>设置 SeriesController.ResetAxisRanges(IAxisData axisData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.SeriesForLegendGet">
            <summary>设置 SeriesController.get_SeriesForLegend() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.SeriesIncompatibilityStatisticsGet">
            <summary>设置 SeriesController.get_SeriesIncompatibilityStatistics() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction">
            <summary>DevExpress.Charts.Native.SeriesController+SeriesControllerTransaction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.#ctor(DevExpress.Charts.Native.SeriesController.SeriesControllerTransaction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.AllInstances.Commit">
            <summary>设置 SeriesControllerTransaction.Commit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.AllInstances.ProcessChartUpdateInfoBase">
            <summary>设置 SeriesControllerTransaction.Process(ChartUpdateInfoBase updateInfo) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.Commit">
            <summary>设置 SeriesControllerTransaction.Commit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.ConstructorSeriesControllerBoolean">
            <summary>设置 SeriesControllerTransaction.SeriesControllerTransaction(SeriesController seriesController, Boolean loading) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.ShimSeriesControllerTransaction.ProcessChartUpdateInfoBase">
            <summary>设置 SeriesControllerTransaction.Process(ChartUpdateInfoBase updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.TryConvertRangeValuesIAxisRangeDataAxisScaleTypeMap">
            <summary>设置 SeriesController.TryConvertRangeValues(IAxisRangeData rangeData, AxisScaleTypeMap map) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.TryUpdateGroupForSeriesRefinedSeriesBoolean">
            <summary>设置 SeriesController.TryUpdateGroupForSeries(RefinedSeries series, Boolean shouldBeDrawn) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateActiveRefinedSeries">
            <summary>设置 SeriesController.UpdateActiveRefinedSeries() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateAxisAxisCollectionUpdateInfo">
            <summary>设置 SeriesController.UpdateAxis(AxisCollectionUpdateInfo secondaryAxis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateAxisIAxisDataChartCollectionOperation">
            <summary>设置 SeriesController.UpdateAxis(IAxisData axis, ChartCollectionOperation operation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateAxisPropertyUpdateInfoOfIAxisData">
            <summary>设置 SeriesController.UpdateAxis(PropertyUpdateInfo`1&lt;IAxisData&gt; axisUpdateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateRefinedSeriesListSeriesCollectionUpdateInfo">
            <summary>设置 SeriesController.UpdateRefinedSeriesList(SeriesCollectionUpdateInfo updateInfo) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesController.UpdateScaleMapIAxisData">
            <summary>设置 SeriesController.UpdateScaleMap(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry">
            <summary>DevExpress.Charts.Native.SeriesGeometry 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.#ctor(DevExpress.Charts.Native.SeriesGeometry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.CreateConstantStripIGeometryStripCreatorDoubleIListOfDouble">
            <summary>设置 SeriesGeometry.CreateConstantStrip(IGeometryStripCreator stripCreator, Double constant, IList`1&lt;Double&gt; arguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.GeometryGet">
            <summary>设置 SeriesGeometry.get_Geometry() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.SeriesGet">
            <summary>设置 SeriesGeometry.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.SetGeometryIListOfIGeometryStripIListOfDouble">
            <summary>设置 SeriesGeometry.SetGeometry(IList`1&lt;IGeometryStrip&gt; geometry, IList`1&lt;Double&gt; arguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.StackedGeometryGet">
            <summary>设置 SeriesGeometry.get_StackedGeometry() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.AllInstances.SubtractStripsIListOfLineStripDouble">
            <summary>设置 SeriesGeometry.SubtractStrips(IList`1&lt;LineStrip&gt; strips, Double borderValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.ConstructorStackedGeometryISeries">
            <summary>设置 SeriesGeometry.SeriesGeometry(StackedGeometry stackedGeometry, ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.CreateConstantStripIGeometryStripCreatorDoubleIListOfDouble">
            <summary>设置 SeriesGeometry.CreateConstantStrip(IGeometryStripCreator stripCreator, Double constant, IList`1&lt;Double&gt; arguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.GeometryGet">
            <summary>设置 SeriesGeometry.get_Geometry() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.SeriesGet">
            <summary>设置 SeriesGeometry.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.SetGeometryIListOfIGeometryStripIListOfDouble">
            <summary>设置 SeriesGeometry.SetGeometry(IList`1&lt;IGeometryStrip&gt; geometry, IList`1&lt;Double&gt; arguments) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.StackedGeometryGet">
            <summary>设置 SeriesGeometry.get_StackedGeometry() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGeometry.SubtractStripsIListOfLineStripDouble">
            <summary>设置 SeriesGeometry.SubtractStrips(IList`1&lt;LineStrip&gt; strips, Double borderValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer">
            <summary>DevExpress.Charts.Native.SeriesGroupsInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.#ctor(DevExpress.Charts.Native.SeriesGroupsInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.AddSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.GetAbsMinValue">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.GetSeriesGroupIndexRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.GetSeriesGroupIndex(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.IsSeriesInGroupsRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.IsSeriesInGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.MaxGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.MinGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.Recalculate">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.ConstructorISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.SeriesGroupsInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 SeriesGroupsInteractionContainer.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.GetAbsMinValue">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.GetSeriesGroupIndexRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.GetSeriesGroupIndex(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.IsSeriesInGroupsRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.IsSeriesInGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.MaxGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.MinGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.Recalculate">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesGroupsInteractionUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.#ctor(DevExpress.Charts.Native.SeriesGroupsInteractionUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsInteractionUpdateInfo.ConstructorObject">
            <summary>设置 SeriesGroupsInteractionUpdateInfo.SeriesGroupsInteractionUpdateInfo(Object sender) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager">
            <summary>DevExpress.Charts.Native.SeriesGroupsManager 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.#ctor(DevExpress.Charts.Native.SeriesGroupsManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances.GetGroupIndexBySeriesRefinedSeries">
            <summary>设置 SeriesGroupsManager.GetGroupIndexBySeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances.GetGroupIndexObject">
            <summary>设置 SeriesGroupsManager.GetGroupIndex(Object groupKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances.GroupsCountGet">
            <summary>设置 SeriesGroupsManager.get_GroupsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances.IsSeriesInGroupsRefinedSeries">
            <summary>设置 SeriesGroupsManager.IsSeriesInGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.AllInstances.UpdateGroups">
            <summary>设置 SeriesGroupsManager.UpdateGroups() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.ConstructorListOfRefinedSeries">
            <summary>设置 SeriesGroupsManager.SeriesGroupsManager(List`1&lt;RefinedSeries&gt; series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.GetGroupIndexBySeriesRefinedSeries">
            <summary>设置 SeriesGroupsManager.GetGroupIndexBySeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.GetGroupIndexObject">
            <summary>设置 SeriesGroupsManager.GetGroupIndex(Object groupKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.GroupsCountGet">
            <summary>设置 SeriesGroupsManager.get_GroupsCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.IsSeriesInGroupsRefinedSeries">
            <summary>设置 SeriesGroupsManager.IsSeriesInGroups(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesGroupsManager.UpdateGroups">
            <summary>设置 SeriesGroupsManager.UpdateGroups() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityCalculatorBase`2 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.#ctor(DevExpress.Charts.Native.SeriesIncompatibilityCalculatorBase{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AddTemplateViewT0ScaleScale">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.AddTemplateView(!0 view, Scale argumentScaleType, Scale valueScaleType) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances.AddTemplateViewT0ScaleScale">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.AddTemplateView(!0 view, Scale argumentScaleType, Scale valueScaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances.GetAxisXMasterScaleTypeRefinedSeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisXMasterScaleType(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances.IsCompatibleRefinedSeriesBooleanCompatibleViewTypeISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsCompatible(RefinedSeries refinedSeries, Boolean is3DView, CompatibleViewType diagramClass, ISeries baseSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances.IsVisibleAndCompatibleRefinedSeriesBooleanCompatibleViewTypeISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsVisibleAndCompatible(RefinedSeries refinedSeries, Boolean is3DView, CompatibleViewType diagramClass, ISeries baseSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.AllInstances.IsVisibleISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsVisible(ISeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.Constructor">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.SeriesIncompatibilityCalculatorBase`2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.ConstructorSeriesIncompatibilityStatistics">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.SeriesIncompatibilityCalculatorBase`2(SeriesIncompatibilityStatistics statistics) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.GetAxisXMasterScaleTypeRefinedSeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisXMasterScaleType(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.IsCompatibleRefinedSeriesBooleanCompatibleViewTypeISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsCompatible(RefinedSeries refinedSeries, Boolean is3DView, CompatibleViewType diagramClass, ISeries baseSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.IsVisibleAndCompatibleRefinedSeriesBooleanCompatibleViewTypeISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsVisibleAndCompatible(RefinedSeries refinedSeries, Boolean is3DView, CompatibleViewType diagramClass, ISeries baseSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityCalculatorBase`2.IsVisibleISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.IsVisible(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.#ctor(DevExpress.Charts.Native.SeriesIncompatibilityInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.AddIncompatibilitySeriesIncompatibilityTypeISeries">
            <summary>设置 SeriesIncompatibilityInfo.AddIncompatibility(SeriesIncompatibilityType type, ISeries masterSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.AllInstances.AddIncompatibilitySeriesIncompatibilityTypeISeries">
            <summary>设置 SeriesIncompatibilityInfo.AddIncompatibility(SeriesIncompatibilityType type, ISeries masterSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.SeriesIncompatibilityType,DevExpress.Charts.Native.ISeries}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.SeriesIncompatibilityType,DevExpress.Charts.Native.ISeries}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{DevExpress.Charts.Native.SeriesIncompatibilityType,DevExpress.Charts.Native.ISeries}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.Generic.IDictionary{DevExpress.Charts.Native.SeriesIncompatibilityType,DevExpress.Charts.Native.ISeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Collections.Generic.IReadOnlyDictionary{DevExpress.Charts.Native.SeriesIncompatibilityType,DevExpress.Charts.Native.ISeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityInfo.Constructor">
            <summary>设置 SeriesIncompatibilityInfo.SeriesIncompatibilityInfo() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityStatistics 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.#ctor(DevExpress.Charts.Native.SeriesIncompatibilityStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AddISeriesSeriesIncompatibilityTypeISeries">
            <summary>设置 SeriesIncompatibilityStatistics.Add(ISeries series, SeriesIncompatibilityType type, ISeries masterSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AllInstances.AddISeriesSeriesIncompatibilityTypeISeries">
            <summary>设置 SeriesIncompatibilityStatistics.Add(ISeries series, SeriesIncompatibilityType type, ISeries masterSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AllInstances.Clear">
            <summary>设置 SeriesIncompatibilityStatistics.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AllInstances.IsSeriesIncompatibleISeries">
            <summary>设置 SeriesIncompatibilityStatistics.IsSeriesIncompatible(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.AllInstances.ItemGetISeries">
            <summary>设置 SeriesIncompatibilityStatistics.get_Item(ISeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.Clear">
            <summary>设置 SeriesIncompatibilityStatistics.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.Constructor">
            <summary>设置 SeriesIncompatibilityStatistics.SeriesIncompatibilityStatistics() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.IsSeriesIncompatibleISeries">
            <summary>设置 SeriesIncompatibilityStatistics.IsSeriesIncompatible(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesIncompatibilityStatistics.ItemGetISeries">
            <summary>设置 SeriesIncompatibilityStatistics.get_Item(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer">
            <summary>DevExpress.Charts.Native.SeriesInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.#ctor(DevExpress.Charts.Native.SeriesInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances.GetSeriesIndexRefinedSeries">
            <summary>设置 SeriesInteractionContainer.GetSeriesIndex(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.AllInstances.SwapSeriesRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.SwapSeries(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.ConstructorISeriesView">
            <summary>设置 SeriesInteractionContainer.SeriesInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.GetSeriesIndexRefinedSeries">
            <summary>设置 SeriesInteractionContainer.GetSeriesIndex(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesInteractionContainer.SwapSeriesRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.SwapSeries(RefinedSeries series1, RefinedSeries series2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider">
            <summary>DevExpress.Charts.Native.SeriesPatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.#ctor(DevExpress.Charts.Native.SeriesPatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.AllInstances.CheckContextObject">
            <summary>设置 SeriesPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.AllInstances.GetValue">
            <summary>设置 SeriesPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.AllInstances.SeriesGet">
            <summary>设置 SeriesPatternDataProvider.get_Series() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.CheckContextObject">
            <summary>设置 SeriesPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.ConstructorPatternConstants">
            <summary>设置 SeriesPatternDataProvider.SeriesPatternDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.GetValue">
            <summary>设置 SeriesPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPatternDataProvider.SeriesGet">
            <summary>设置 SeriesPatternDataProvider.get_Series() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesPointCollectionBatchUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.#ctor(DevExpress.Charts.Native.SeriesPointCollectionBatchUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.AllInstances.SeriesGet">
            <summary>设置 SeriesPointCollectionBatchUpdateInfo.get_Series() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.ConstructorObjectChartCollectionOperationISeriesICollectionOfISeriesPointInt32ICollectionOfISeriesPointInt32">
            <summary>设置 SeriesPointCollectionBatchUpdateInfo.SeriesPointCollectionBatchUpdateInfo(Object sender, ChartCollectionOperation operation, ISeries series, ICollection`1&lt;ISeriesPoint&gt; oldItem, Int32 oldIndex, ICollection`1&lt;ISeriesPoint&gt; newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.CreateInsertInfoObjectISeriesICollectionOfISeriesPointInt32">
            <summary>设置 SeriesPointCollectionBatchUpdateInfo.CreateInsertInfo(Object owner, ISeries series, ICollection`1&lt;ISeriesPoint&gt; newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionBatchUpdateInfo.SeriesGet">
            <summary>设置 SeriesPointCollectionBatchUpdateInfo.get_Series() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesPointCollectionUpdateInfo 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.#ctor(DevExpress.Charts.Native.SeriesPointCollectionUpdateInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.AllInstances.SeriesGet">
            <summary>设置 SeriesPointCollectionUpdateInfo.get_Series() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.ConstructorObjectChartCollectionOperationISeriesISeriesPointInt32ISeriesPointInt32">
            <summary>设置 SeriesPointCollectionUpdateInfo.SeriesPointCollectionUpdateInfo(Object sender, ChartCollectionOperation operation, ISeries series, ISeriesPoint oldItem, Int32 oldIndex, ISeriesPoint newItem, Int32 newIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointCollectionUpdateInfo.SeriesGet">
            <summary>设置 SeriesPointCollectionUpdateInfo.get_Series() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer">
            <summary>DevExpress.Charts.Native.SeriesPointSettingsComparer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.#ctor(DevExpress.Charts.Native.SeriesPointSettingsComparer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances.CompareRefinedPointRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances.GetDateTimeValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetDateTimeValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances.GetQualitativeValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetQualitativeValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances.GetScale">
            <summary>设置 SeriesPointSettingsComparer.GetScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.AllInstances.GetValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.Bind(System.Collections.IComparer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.Bind(System.Collections.Generic.IComparer{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.ConstructorBooleanSeriesPointKeyNativeScaleScale">
            <summary>设置 SeriesPointSettingsComparer.SeriesPointSettingsComparer(Boolean isAsceding, SeriesPointKeyNative sortingKey, Scale valueScaleType, Scale argumentScaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.GetDateTimeValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetDateTimeValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.GetQualitativeValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetQualitativeValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.GetScale">
            <summary>设置 SeriesPointSettingsComparer.GetScale() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSeriesPointSettingsComparer.GetValueRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.GetValue(RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup">
            <summary>DevExpress.Charts.Native.SideBySideGroup 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.#ctor(DevExpress.Charts.Native.SideBySideGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AddPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideGroup.AddPoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances.AddPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideGroup.AddPoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances.IsEmptyGet">
            <summary>设置 SideBySideGroup.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances.RemovePointRefinedPoint">
            <summary>设置 SideBySideGroup.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroup.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.AllInstances.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.ConstructorRefinedSeries">
            <summary>设置 SideBySideGroup.SideBySideGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.IsEmptyGet">
            <summary>设置 SideBySideGroup.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.RemovePointRefinedPoint">
            <summary>设置 SideBySideGroup.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroup.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroup.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase">
            <summary>DevExpress.Charts.Native.SideBySideGroupBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.#ctor(DevExpress.Charts.Native.SideBySideGroupBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AddSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.AddSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.AddSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.AddSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.BarDistanceGet">
            <summary>设置 SideBySideGroupBase.get_BarDistance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.BarDistanceSetDouble">
            <summary>设置 SideBySideGroupBase.set_BarDistance(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.BarWidthGet">
            <summary>设置 SideBySideGroupBase.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.BarWidthSetDouble">
            <summary>设置 SideBySideGroupBase.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.FixedOffsetGet">
            <summary>设置 SideBySideGroupBase.get_FixedOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.FixedOffsetSetInt32">
            <summary>设置 SideBySideGroupBase.set_FixedOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.GroupKeyGet">
            <summary>设置 SideBySideGroupBase.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.IsCompatibleRefinedSeries">
            <summary>设置 SideBySideGroupBase.IsCompatible(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.IsEmptyGet">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.AllInstances.SeriesListGet">
            <summary>设置 SideBySideGroupBase.get_SeriesList() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BarDistanceGet">
            <summary>设置 SideBySideGroupBase.get_BarDistance() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BarDistanceSetDouble">
            <summary>设置 SideBySideGroupBase.set_BarDistance(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BarWidthGet">
            <summary>设置 SideBySideGroupBase.get_BarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BarWidthSetDouble">
            <summary>设置 SideBySideGroupBase.set_BarWidth(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.ConstructorRefinedSeries">
            <summary>设置 SideBySideGroupBase.SideBySideGroupBase(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.FixedOffsetGet">
            <summary>设置 SideBySideGroupBase.get_FixedOffset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.FixedOffsetSetInt32">
            <summary>设置 SideBySideGroupBase.set_FixedOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.GroupKeyGet">
            <summary>设置 SideBySideGroupBase.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.IsCompatibleRefinedSeries">
            <summary>设置 SideBySideGroupBase.IsCompatible(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.IsEmptyGet">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideGroupBase.SeriesListGet">
            <summary>设置 SideBySideGroupBase.get_SeriesList() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase">
            <summary>DevExpress.Charts.Native.SideBySideInteractionBase 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.#ctor(DevExpress.Charts.Native.SideBySideInteractionBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AddSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.AddSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.AddSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.AddSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.ArgumentGet">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.EqualBarWidthGet">
            <summary>设置 SideBySideInteractionBase.get_EqualBarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.EqualBarWidthSetBoolean">
            <summary>设置 SideBySideInteractionBase.set_EqualBarWidth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.FindSideBySideStackedGroupRefinedSeries">
            <summary>设置 SideBySideInteractionBase.FindSideBySideStackedGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.GetBarDistanceInt32">
            <summary>设置 SideBySideInteractionBase.GetBarDistance(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.GetBarWidthInt32">
            <summary>设置 SideBySideInteractionBase.GetBarWidth(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.GetFixedOffsetInt32">
            <summary>设置 SideBySideInteractionBase.GetFixedOffset(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.GetGroupIndexRefinedSeries">
            <summary>设置 SideBySideInteractionBase.GetGroupIndex(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.GroupsGet">
            <summary>设置 SideBySideInteractionBase.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.InsertPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.InsertPoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.Invalidate">
            <summary>设置 SideBySideInteractionBase.Invalidate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.IsEmptyGet">
            <summary>设置 SideBySideInteractionBase.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.Recalculate">
            <summary>设置 SideBySideInteractionBase.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.SeriesGet">
            <summary>设置 SideBySideInteractionBase.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.AllInstances.UpdateInteractionKeys">
            <summary>设置 SideBySideInteractionBase.UpdateInteractionKeys() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.ArgumentDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.ArgumentGet">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.ConstructorBoolean">
            <summary>设置 SideBySideInteractionBase.SideBySideInteractionBase(Boolean equalBarWidth) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.CountDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.DevExpressChartsNativeIPointInteractionGetMaxValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.DevExpressChartsNativeIPointInteractionGetMinAbsValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.DevExpressChartsNativeIPointInteractionGetMinValueISeriesView">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.EqualBarWidthGet">
            <summary>设置 SideBySideInteractionBase.get_EqualBarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.EqualBarWidthSetBoolean">
            <summary>设置 SideBySideInteractionBase.set_EqualBarWidth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.FindSideBySideStackedGroupRefinedSeries">
            <summary>设置 SideBySideInteractionBase.FindSideBySideStackedGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.GetBarDistanceInt32">
            <summary>设置 SideBySideInteractionBase.GetBarDistance(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.GetBarWidthInt32">
            <summary>设置 SideBySideInteractionBase.GetBarWidth(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.GetFixedOffsetInt32">
            <summary>设置 SideBySideInteractionBase.GetFixedOffset(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.GetGroupIndexRefinedSeries">
            <summary>设置 SideBySideInteractionBase.GetGroupIndex(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.GroupsGet">
            <summary>设置 SideBySideInteractionBase.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.InsertPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.InsertPoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.Invalidate">
            <summary>设置 SideBySideInteractionBase.Invalidate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.IsEmptyDevExpressChartsNativeIPointInteractionget">
            <summary>设置 SideBySideInteractionBase.DevExpress.Charts.Native.IPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.IsEmptyGet">
            <summary>设置 SideBySideInteractionBase.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.Recalculate">
            <summary>设置 SideBySideInteractionBase.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.SeriesGet">
            <summary>设置 SideBySideInteractionBase.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionBase.UpdateInteractionKeys">
            <summary>设置 SideBySideInteractionBase.UpdateInteractionKeys() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer">
            <summary>DevExpress.Charts.Native.SideBySideInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.#ctor(DevExpress.Charts.Native.SideBySideInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.EqualBarWidthGet">
            <summary>设置 SideBySideInteractionContainer.get_EqualBarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.GetAbsMinValue">
            <summary>设置 SideBySideInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPointBoolean">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint, Boolean changeInteractionLayout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.InsertRefinedPointsRefinedSeriesBoolean">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(RefinedSeries refinedSeries, Boolean changeInteractionLayout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.MaxGet">
            <summary>设置 SideBySideInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.MinGet">
            <summary>设置 SideBySideInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.Recalculate">
            <summary>设置 SideBySideInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.AllInstances.SideBySideBarSeriesViewGet">
            <summary>设置 SideBySideInteractionContainer.get_SideBySideBarSeriesView() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.ConstructorISeriesView">
            <summary>设置 SideBySideInteractionContainer.SideBySideInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.EqualBarWidthGet">
            <summary>设置 SideBySideInteractionContainer.get_EqualBarWidth() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.GetAbsMinValue">
            <summary>设置 SideBySideInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPointBoolean">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint, Boolean changeInteractionLayout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.InsertRefinedPointsRefinedSeriesBoolean">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(RefinedSeries refinedSeries, Boolean changeInteractionLayout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.MaxGet">
            <summary>设置 SideBySideInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.MinGet">
            <summary>设置 SideBySideInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.Recalculate">
            <summary>设置 SideBySideInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideInteractionContainer.SideBySideBarSeriesViewGet">
            <summary>设置 SideBySideInteractionContainer.get_SideBySideBarSeriesView() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction">
            <summary>DevExpress.Charts.Native.SideBySidePointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.#ctor(DevExpress.Charts.Native.SideBySidePointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.AllInstances.ArgumentGet">
            <summary>设置 SideBySidePointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.AllInstances.CreateGroupRefinedSeries">
            <summary>设置 SideBySidePointInteraction.CreateGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.AllInstances.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.AllInstances.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.RemovePoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.ArgumentGet">
            <summary>设置 SideBySidePointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.ConstructorDoubleBoolean">
            <summary>设置 SideBySidePointInteraction.SideBySidePointInteraction(Double argument, Boolean equalBarWidth) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.CreateGroupRefinedSeries">
            <summary>设置 SideBySidePointInteraction.CreateGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySidePointInteraction.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.RemovePoint(RefinedSeries series, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup">
            <summary>DevExpress.Charts.Native.SideBySideSeriesGroup 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.#ctor(DevExpress.Charts.Native.SideBySideSeriesGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.AllInstances.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideSeriesGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.ConstructorRefinedSeries">
            <summary>设置 SideBySideSeriesGroup.SideBySideSeriesGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesGroup.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideSeriesGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction">
            <summary>DevExpress.Charts.Native.SideBySideSeriesInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.#ctor(DevExpress.Charts.Native.SideBySideSeriesInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.AllInstances.CreateGroupRefinedSeries">
            <summary>设置 SideBySideSeriesInteraction.CreateGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.Constructor">
            <summary>设置 SideBySideSeriesInteraction.SideBySideSeriesInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideBySideSeriesInteraction.CreateGroupRefinedSeries">
            <summary>设置 SideBySideSeriesInteraction.CreateGroup(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator">
            <summary>DevExpress.Charts.Native.SideMarginCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.#ctor(DevExpress.Charts.Native.SideMarginCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalcAxisXSideMagrinIEnumerableOfIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalcAxisXSideMagrin(IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalcAxisXSideMarginForBubbleIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalcAxisXSideMarginForBubble(IRefinedSeries series, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalcSideMarginMinMaxValuesIEnumerableOfIRefinedSeriesBooleanBoolean">
            <summary>设置 SideMarginCalculator.CalcSideMargin(MinMaxValues internalValues, IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Boolean autoCorrectMin, Boolean autoCorrectMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalculateDefaultArgumentAxisSideMarginDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateDefaultArgumentAxisSideMargin(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalculateDefaultValueAxisSideMarginDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateDefaultValueAxisSideMargin(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalculateSideMarginByRangeDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateSideMarginByRange(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalculateSideMarginBySeriesDoubleDoubleIEnumerableOfIRefinedSeries">
            <summary>设置 SideMarginCalculator.CalculateSideMarginBySeries(Double min, Double max, IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.CalculateSideMarginByViewIEnumerableOfIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateSideMarginByView(IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.GetBarWidthCorrectionIRefinedSeries">
            <summary>设置 SideMarginCalculator.GetBarWidthCorrection(IRefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.GetScaleBreakesRangesDoubleDouble">
            <summary>设置 SideMarginCalculator.GetScaleBreakesRanges(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.GetZeroLevelMinMaxValues">
            <summary>设置 SideMarginCalculator.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.IsOverflowMinMaxValuesDouble">
            <summary>设置 SideMarginCalculator.IsOverflow(MinMaxValues internalValues, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.ScaleTypeGet">
            <summary>设置 SideMarginCalculator.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.AllInstances.ShowZeroLevelGet">
            <summary>设置 SideMarginCalculator.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalcAxisXSideMagrinIEnumerableOfIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalcAxisXSideMagrin(IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalcAxisXSideMarginForBubbleIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalcAxisXSideMarginForBubble(IRefinedSeries series, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalcSideMarginIAxisDataMinMaxValuesBooleanBooleanIEnumerableOfIRefinedSeries">
            <summary>设置 SideMarginCalculator.CalcSideMargin(IAxisData axis, MinMaxValues internalValues, Boolean autoCorrectMin, Boolean autoCorrectMax, IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalcSideMarginMinMaxValuesIEnumerableOfIRefinedSeriesBooleanBoolean">
            <summary>设置 SideMarginCalculator.CalcSideMargin(MinMaxValues internalValues, IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Boolean autoCorrectMin, Boolean autoCorrectMax) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalculateDefaultArgumentAxisSideMarginDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateDefaultArgumentAxisSideMargin(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalculateDefaultValueAxisSideMarginDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateDefaultValueAxisSideMargin(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalculateSideMarginByRangeDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateSideMarginByRange(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalculateSideMarginBySeriesDoubleDoubleIEnumerableOfIRefinedSeries">
            <summary>设置 SideMarginCalculator.CalculateSideMarginBySeries(Double min, Double max, IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.CalculateSideMarginByViewIEnumerableOfIRefinedSeriesDoubleDouble">
            <summary>设置 SideMarginCalculator.CalculateSideMarginByView(IEnumerable`1&lt;IRefinedSeries&gt; refinedSeries, Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.ConstructorIAxisData">
            <summary>设置 SideMarginCalculator.SideMarginCalculator(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.GetBarWidthCorrectionIRefinedSeries">
            <summary>设置 SideMarginCalculator.GetBarWidthCorrection(IRefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.GetScaleBreakesRangesDoubleDouble">
            <summary>设置 SideMarginCalculator.GetScaleBreakesRanges(Double min, Double max) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.GetZeroLevelMinMaxValues">
            <summary>设置 SideMarginCalculator.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.IsOverflowMinMaxValuesDouble">
            <summary>设置 SideMarginCalculator.IsOverflow(MinMaxValues internalValues, Double sideMargin) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.ScaleTypeGet">
            <summary>设置 SideMarginCalculator.get_ScaleType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginCalculator.ShowZeroLevelGet">
            <summary>设置 SideMarginCalculator.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator">
            <summary>DevExpress.Charts.Native.SideMarginLogarithmicCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.#ctor(DevExpress.Charts.Native.SideMarginLogarithmicCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances.CalcOverflowedSideMarginDoubleDoubleDoubleTransformation">
            <summary>设置 SideMarginLogarithmicCalculator.CalcOverflowedSideMargin(Double min, Double max, Double sideMargin, Transformation transformation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances.CalcSideMarginMinMaxValues">
            <summary>设置 SideMarginLogarithmicCalculator.CalcSideMargin(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances.GetZeroLevelMinMaxValues">
            <summary>设置 SideMarginLogarithmicCalculator.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances.IsOverflowDoubleDoubleDoubleTransformation">
            <summary>设置 SideMarginLogarithmicCalculator.IsOverflow(Double min, Double max, Double sideMargin, Transformation transformation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.AllInstances.ShowZeroLevelGet">
            <summary>设置 SideMarginLogarithmicCalculator.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.CalcOverflowedSideMarginDoubleDoubleDoubleTransformation">
            <summary>设置 SideMarginLogarithmicCalculator.CalcOverflowedSideMargin(Double min, Double max, Double sideMargin, Transformation transformation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.CalcSideMarginIAxisDataMinMaxValues">
            <summary>设置 SideMarginLogarithmicCalculator.CalcSideMargin(IAxisData axis, MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.CalcSideMarginMinMaxValues">
            <summary>设置 SideMarginLogarithmicCalculator.CalcSideMargin(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.ConstructorIAxisData">
            <summary>设置 SideMarginLogarithmicCalculator.SideMarginLogarithmicCalculator(IAxisData axis) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.GetZeroLevelMinMaxValues">
            <summary>设置 SideMarginLogarithmicCalculator.GetZeroLevel(MinMaxValues internalValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.IsOverflowDoubleDoubleDoubleTransformation">
            <summary>设置 SideMarginLogarithmicCalculator.IsOverflow(Double min, Double max, Double sideMargin, Transformation transformation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSideMarginLogarithmicCalculator.ShowZeroLevelGet">
            <summary>设置 SideMarginLogarithmicCalculator.get_ShowZeroLevel() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure">
            <summary>DevExpress.Charts.Native.SimpleChartBindingProcedure 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.#ctor(DevExpress.Charts.Native.SimpleChartBindingProcedure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.AllInstances.PerformPointBindingISeriesTemplateObjectObjectIListOfStringStringISeries">
            <summary>设置 SimpleChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.ConstructorDataContextBaseObjectString">
            <summary>设置 SimpleChartBindingProcedure.SimpleChartBindingProcedure(DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleChartBindingProcedure.PerformPointBindingISeriesTemplateObjectObjectIListOfStringStringISeries">
            <summary>设置 SimpleChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper">
            <summary>DevExpress.Charts.Native.SimpleDiagramAutoLayoutHelper 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.#ctor(DevExpress.Charts.Native.SimpleDiagramAutoLayoutHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.CalculateDimensionInt32Int32Int32">
            <summary>设置 SimpleDiagramAutoLayoutHelper.CalculateDimension(Int32 width, Int32 height, Int32 seriesCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.CalculateDimensionInt32Int32Int32Int32Int32">
            <summary>设置 SimpleDiagramAutoLayoutHelper.CalculateDimension(Int32 width, Int32 height, Int32 seriesCount, Int32 maxDimension, Int32 minDimension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramAutoLayoutHelper.Constructor">
            <summary>设置 SimpleDiagramAutoLayoutHelper.SimpleDiagramAutoLayoutHelper() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout">
            <summary>DevExpress.Charts.Native.SimpleDiagramLayout 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.#ctor(DevExpress.Charts.Native.SimpleDiagramLayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.AllInstances.CalculateInt32Int32">
            <summary>设置 SimpleDiagramLayout.Calculate(Int32 dimension, Int32 domainCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.AllInstances.FillRowInt32Int32Int32">
            <summary>设置 SimpleDiagramLayout.FillRow(Int32 count, Int32 position, Int32 height) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.CalculateISimpleDiagramGRect2DInt32">
            <summary>设置 SimpleDiagramLayout.Calculate(ISimpleDiagram diagram, GRect2D bounds, Int32 domainCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.CalculateInt32Int32">
            <summary>设置 SimpleDiagramLayout.Calculate(Int32 dimension, Int32 domainCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.FillRowInt32Int32Int32">
            <summary>设置 SimpleDiagramLayout.FillRow(Int32 count, Int32 position, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.PassRectangleGRect2D">
            <summary>设置 SimpleDiagramLayout.PassRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramLayout.RotateRectangleGRect2D">
            <summary>设置 SimpleDiagramLayout.RotateRectangle(GRect2D rect) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping">
            <summary>DevExpress.Charts.Native.SimpleDiagramResolveOverlapping 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.#ctor(DevExpress.Charts.Native.SimpleDiagramResolveOverlapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.ArrangeByColumnIListOfIPieLabelLayoutGRealRect2DInt32">
            <summary>设置 SimpleDiagramResolveOverlapping.ArrangeByColumn(IList`1&lt;IPieLabelLayout&gt; labels, GRealRect2D bounds, Int32 resolveOverlappingMinIndent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.ArrangeByEllipseIListOfIPieLabelLayoutGRealEllipseInt32PointsSweepDirectionGRealRect2D">
            <summary>设置 SimpleDiagramResolveOverlapping.ArrangeByEllipse(IList`1&lt;IPieLabelLayout&gt; labels, GRealEllipse ellipse, Int32 resolveOverlappingMinIndent, PointsSweepDirection direction, GRealRect2D diagramBounds) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleDiagramResolveOverlapping.Constructor">
            <summary>设置 SimpleDiagramResolveOverlapping.SimpleDiagramResolveOverlapping() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.SimpleMovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.#ctor(DevExpress.Charts.Native.SimpleMovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.AllInstances.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 SimpleMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 SimpleMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleMovingAverageCalculator.Constructor">
            <summary>设置 SimpleMovingAverageCalculator.SimpleMovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction">
            <summary>DevExpress.Charts.Native.SimplePointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.#ctor(DevExpress.Charts.Native.SimplePointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AddPointRefinedPoint">
            <summary>设置 SimplePointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.AddPointRefinedPoint">
            <summary>设置 SimplePointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.Clear">
            <summary>设置 SimplePointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.CountGet">
            <summary>设置 SimplePointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.GetMaxValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.GetMinAbsValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.GetMinValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.GetNotEmptyPointCount">
            <summary>设置 SimplePointInteraction.GetNotEmptyPointCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.MaxValueGet">
            <summary>设置 SimplePointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.MinValueGet">
            <summary>设置 SimplePointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.NegativeValuesSumGet">
            <summary>设置 SimplePointInteraction.get_NegativeValuesSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.PositiveValuesSumGet">
            <summary>设置 SimplePointInteraction.get_PositiveValuesSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.AllInstances.RemovePointRefinedPoint">
            <summary>设置 SimplePointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.Clear">
            <summary>设置 SimplePointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.Constructor">
            <summary>设置 SimplePointInteraction.SimplePointInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.CountGet">
            <summary>设置 SimplePointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.GetMaxValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.GetMinValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.GetNotEmptyPointCount">
            <summary>设置 SimplePointInteraction.GetNotEmptyPointCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.MaxValueGet">
            <summary>设置 SimplePointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.MinValueGet">
            <summary>设置 SimplePointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.NegativeValuesSumGet">
            <summary>设置 SimplePointInteraction.get_NegativeValuesSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.PositiveValuesSumGet">
            <summary>设置 SimplePointInteraction.get_PositiveValuesSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointInteraction.RemovePointRefinedPoint">
            <summary>设置 SimplePointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider">
            <summary>DevExpress.Charts.Native.SimplePointPatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.#ctor(DevExpress.Charts.Native.SimplePointPatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances.CheckContextObject">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances.GetPercentValue">
            <summary>设置 SimplePointPatternDataProvider.GetPercentValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances.GetValue">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances.GetValueFormRefinedPoint">
            <summary>设置 SimplePointPatternDataProvider.GetValueFormRefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.AllInstances.RefinedPointGet">
            <summary>设置 SimplePointPatternDataProvider.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.CheckContextObject">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.ConstructorPatternConstants">
            <summary>设置 SimplePointPatternDataProvider.SimplePointPatternDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.GetPercentValue">
            <summary>设置 SimplePointPatternDataProvider.GetPercentValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.GetValue">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.GetValueFormRefinedPoint">
            <summary>设置 SimplePointPatternDataProvider.GetValueFormRefinedPoint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimplePointPatternDataProvider.RefinedPointGet">
            <summary>设置 SimplePointPatternDataProvider.get_RefinedPoint() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure">
            <summary>DevExpress.Charts.Native.SimpleSeriesBindingProcedure 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.#ctor(DevExpress.Charts.Native.SimpleSeriesBindingProcedure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.AllInstances.PerformPointBindingObjectObject">
            <summary>设置 SimpleSeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.ConstructorISeriesDataContextBaseObjectString">
            <summary>设置 SimpleSeriesBindingProcedure.SimpleSeriesBindingProcedure(ISeries series, DataContextBase dataContext, Object dataSource, String dataMember) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesBindingProcedure.PerformPointBindingObjectObject">
            <summary>设置 SimpleSeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer">
            <summary>DevExpress.Charts.Native.SimpleSeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.#ctor(DevExpress.Charts.Native.SimpleSeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances.InteractionGet">
            <summary>设置 SimpleSeriesContainer.get_Interaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.ConstructorISeriesView">
            <summary>设置 SimpleSeriesContainer.SimpleSeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.InteractionGet">
            <summary>设置 SimpleSeriesContainer.get_Interaction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSimpleSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer">
            <summary>DevExpress.Charts.Native.SingleSeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.#ctor(DevExpress.Charts.Native.SingleSeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.AllInstances.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.AllInstances.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.AllInstances.SetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.SetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.ConstructorISeriesView">
            <summary>设置 SingleSeriesContainer.SingleSeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSingleSeriesContainer.SetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.SetRefinedSeries(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection">
            <summary>DevExpress.Charts.Native.SortedRefinedPointCollection 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.#ctor(DevExpress.Charts.Native.SortedRefinedPointCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AddRangeICollectionOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AddRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.AddRangeICollectionOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.AddRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Add(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.BinarySearchRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.BinarySearch(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.BinarySearchRefinedPointComparerOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.BinarySearch(RefinedPoint item, Comparer`1&lt;RefinedPoint&gt; comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.ContainsRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.IndexOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.InitializeRefinedPointCollectionBase">
            <summary>设置 SortedRefinedPointCollection.Initialize(RefinedPointCollectionBase pointsCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.SetComparerRefinedPointComparerBase">
            <summary>设置 SortedRefinedPointCollection.SetComparer(RefinedPointComparerBase comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.Sort">
            <summary>设置 SortedRefinedPointCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.SortRefinedPointComparerBase">
            <summary>设置 SortedRefinedPointCollection.Sort(RefinedPointComparerBase comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.AllInstances.UpdateRefinedPointRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Update(RefinedPoint oldItem, RefinedPoint newItem) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.BinarySearchRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.BinarySearch(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.BinarySearchRefinedPointComparerOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.BinarySearch(RefinedPoint item, Comparer`1&lt;RefinedPoint&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.ConstructorInt32RefinedPointComparerBase">
            <summary>设置 SortedRefinedPointCollection.SortedRefinedPointCollection(Int32 capacity, RefinedPointComparerBase comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.ContainsRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Contains(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.IndexOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.IndexOf(RefinedPoint item) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.InitializeRefinedPointCollectionBase">
            <summary>设置 SortedRefinedPointCollection.Initialize(RefinedPointCollectionBase pointsCollection) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.SetComparerRefinedPointComparerBase">
            <summary>设置 SortedRefinedPointCollection.SetComparer(RefinedPointComparerBase comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.Sort">
            <summary>设置 SortedRefinedPointCollection.Sort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.SortRefinedPointComparerBase">
            <summary>设置 SortedRefinedPointCollection.Sort(RefinedPointComparerBase comparer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortedRefinedPointCollection.UpdateRefinedPointRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Update(RefinedPoint oldItem, RefinedPoint newItem) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSortingUtils">
            <summary>DevExpress.Charts.Native.SortingUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortingUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortingUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSortingUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortingUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSortingUtils.CompareDoublesDoubleDouble">
            <summary>设置 SortingUtils.CompareDoubles(Double number1, Double number2) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.SplineAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.ClosedGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.ConstructorDouble">
            <summary>设置 SplineAreaGeometryStripCreator.SplineAreaGeometryStripCreator(Double lineTension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.CreateStrip">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.#ctor(DevExpress.Charts.Native.SplineGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 SplineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 SplineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 SplineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.ClosedGet">
            <summary>设置 SplineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.ConstructorDoubleITransformationITransformation">
            <summary>设置 SplineGeometryStripCreator.SplineGeometryStripCreator(Double lineTension, ITransformation transformationX, ITransformation transformationY) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.CreateStrip">
            <summary>设置 SplineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 SplineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineStackedAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.SplineStackedAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineStackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineStackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.AllInstances.CalculateStackedInteractionContainer">
            <summary>设置 SplineStackedAreaGeometryStripCreator.Calculate(StackedInteractionContainer interactionContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.AllInstances.GetStripsRefinedSeries">
            <summary>设置 SplineStackedAreaGeometryStripCreator.GetStrips(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.CalculateStackedInteractionContainer">
            <summary>设置 SplineStackedAreaGeometryStripCreator.Calculate(StackedInteractionContainer interactionContainer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.ConstructorDouble">
            <summary>设置 SplineStackedAreaGeometryStripCreator.SplineStackedAreaGeometryStripCreator(Double lineTension) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.GetStripsRefinedSeries">
            <summary>设置 SplineStackedAreaGeometryStripCreator.GetStrips(RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.IsSameVerticalGRealPoint2DGRealPoint2D">
            <summary>设置 SplineStackedAreaGeometryStripCreator.IsSameVertical(GRealPoint2D point1, GRealPoint2D point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSplineStackedAreaGeometryStripCreator.ShouldSplitByVerticalLineStripGRealPoint2D">
            <summary>设置 SplineStackedAreaGeometryStripCreator.ShouldSplitByVertical(LineStrip lineStrip, GRealPoint2D newPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StackedAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.StackedAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 StackedAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.ClosedGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.Constructor">
            <summary>设置 StackedAreaGeometryStripCreator.StackedAreaGeometryStripCreator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.CreateStrip">
            <summary>设置 StackedAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedGeometry">
            <summary>DevExpress.Charts.Native.StackedGeometry 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.#ctor(DevExpress.Charts.Native.StackedGeometry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AddISeries">
            <summary>设置 StackedGeometry.Add(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.AddISeries">
            <summary>设置 StackedGeometry.Add(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.BorderStripGet">
            <summary>设置 StackedGeometry.get_BorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.BorderStripSetLineStrip">
            <summary>设置 StackedGeometry.set_BorderStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.FindSeriesGeometryISeries">
            <summary>设置 StackedGeometry.FindSeriesGeometry(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.ModifyBorderStripRangeStrip">
            <summary>设置 StackedGeometry.ModifyBorderStrip(RangeStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.TopValueGet">
            <summary>设置 StackedGeometry.get_TopValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.AllInstances.UpdateBottomSegmentRangeStrip">
            <summary>设置 StackedGeometry.UpdateBottomSegment(RangeStrip strip) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.BorderStripGet">
            <summary>设置 StackedGeometry.get_BorderStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.BorderStripSetLineStrip">
            <summary>设置 StackedGeometry.set_BorderStrip(LineStrip value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.ConstructorDouble">
            <summary>设置 StackedGeometry.StackedGeometry(Double topValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.FindSeriesGeometryISeries">
            <summary>设置 StackedGeometry.FindSeriesGeometry(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.ModifyBorderStripRangeStrip">
            <summary>设置 StackedGeometry.ModifyBorderStrip(RangeStrip strip) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.TopValueGet">
            <summary>设置 StackedGeometry.get_TopValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGeometry.UpdateBottomSegmentRangeStrip">
            <summary>设置 StackedGeometry.UpdateBottomSegment(RangeStrip strip) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey">
            <summary>DevExpress.Charts.Native.StackedGroupKey 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.#ctor(DevExpress.Charts.Native.StackedGroupKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.AllInstances.GroupKeyGet">
            <summary>设置 StackedGroupKey.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.AllInstances.GroupKeySetObject">
            <summary>设置 StackedGroupKey.set_GroupKey(Object value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.Generic.IReadOnlyCollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.Bind(System.Collections.Generic.IReadOnlyList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.ConstructorObject">
            <summary>设置 StackedGroupKey.StackedGroupKey(Object groupKey) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.GroupKeyGet">
            <summary>设置 StackedGroupKey.get_GroupKey() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedGroupKey.GroupKeySetObject">
            <summary>设置 StackedGroupKey.set_GroupKey(Object value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer">
            <summary>DevExpress.Charts.Native.StackedInteractionContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.#ctor(DevExpress.Charts.Native.StackedInteractionContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AddNewPointInteractionInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.AddNewPointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AddSupplyInteractionInt32StackedPointInteractionStackedPointInteraction">
            <summary>设置 StackedInteractionContainer.AddSupplyInteraction(Int32 index, StackedPointInteraction interaction, StackedPointInteraction supplyValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AddSupplyInteractions">
            <summary>设置 StackedInteractionContainer.AddSupplyInteractions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AddSupplyPoints">
            <summary>设置 StackedInteractionContainer.AddSupplyPoints() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.AddNewPointInteractionInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.AddNewPointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.AddSupplyInteractionInt32StackedPointInteractionStackedPointInteraction">
            <summary>设置 StackedInteractionContainer.AddSupplyInteraction(Int32 index, StackedPointInteraction interaction, StackedPointInteraction supplyValues) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.AddSupplyInteractions">
            <summary>设置 StackedInteractionContainer.AddSupplyInteractions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.AddSupplyPoints">
            <summary>设置 StackedInteractionContainer.AddSupplyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.ClearSupplyPoints">
            <summary>设置 StackedInteractionContainer.ClearSupplyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.FindInteractionIndexByArgumentInt32Double">
            <summary>设置 StackedInteractionContainer.FindInteractionIndexByArgument(Int32 startInteractionIndex, Double exceptedArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.GetAbsMinValue">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.GetStackedPointsForDrawingRefinedSeries">
            <summary>设置 StackedInteractionContainer.GetStackedPointsForDrawing(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.InsertRefinedPointInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.IsContinuousViewGet">
            <summary>设置 StackedInteractionContainer.get_IsContinuousView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.IsEqualInteractionsStackedPointInteractionStackedPointInteraction">
            <summary>设置 StackedInteractionContainer.IsEqualInteractions(StackedPointInteraction interaction1, StackedPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.MaxGet">
            <summary>设置 StackedInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.MinGet">
            <summary>设置 StackedInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.Recalculate">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.RecalculateSupplyPoints">
            <summary>设置 StackedInteractionContainer.RecalculateSupplyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.Resort">
            <summary>设置 StackedInteractionContainer.Resort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.SortedInteractionsByArgumentGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.SortedInteractionsByMaxValueGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByMaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.AllInstances.SortedInteractionsByMinValueGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByMinValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.ClearSupplyPoints">
            <summary>设置 StackedInteractionContainer.ClearSupplyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.ConstructorISeriesView">
            <summary>设置 StackedInteractionContainer.StackedInteractionContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.ConstructorISeriesViewBoolean">
            <summary>设置 StackedInteractionContainer.StackedInteractionContainer(ISeriesView view, Boolean isContinuousView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.FindInteractionIndexByArgumentInt32Double">
            <summary>设置 StackedInteractionContainer.FindInteractionIndexByArgument(Int32 startInteractionIndex, Double exceptedArgument) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.GetAbsMinValue">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.GetStackedPointsForDrawingRefinedSeries">
            <summary>设置 StackedInteractionContainer.GetStackedPointsForDrawing(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.InsertRefinedPointInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.IsContinuousViewGet">
            <summary>设置 StackedInteractionContainer.get_IsContinuousView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.IsEqualInteractionsStackedPointInteractionStackedPointInteraction">
            <summary>设置 StackedInteractionContainer.IsEqualInteractions(StackedPointInteraction interaction1, StackedPointInteraction interaction2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.MaxGet">
            <summary>设置 StackedInteractionContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.MinGet">
            <summary>设置 StackedInteractionContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.Recalculate">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.RecalculateSupplyPoints">
            <summary>设置 StackedInteractionContainer.RecalculateSupplyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.Resort">
            <summary>设置 StackedInteractionContainer.Resort() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.SortedInteractionsByArgumentGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.SortedInteractionsByMaxValueGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByMaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedInteractionContainer.SortedInteractionsByMinValueGet">
            <summary>设置 StackedInteractionContainer.get_SortedInteractionsByMinValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StackedLineGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.#ctor(DevExpress.Charts.Native.StackedLineGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 StackedLineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 StackedLineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 StackedLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.ClosedGet">
            <summary>设置 StackedLineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.Constructor">
            <summary>设置 StackedLineGeometryStripCreator.StackedLineGeometryStripCreator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.CreateStrip">
            <summary>设置 StackedLineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StackedLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction">
            <summary>DevExpress.Charts.Native.StackedPointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.#ctor(DevExpress.Charts.Native.StackedPointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.ArgumentGet">
            <summary>设置 StackedPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.CalculateAllSeriesNonPositive">
            <summary>设置 StackedPointInteraction.CalculateAllSeriesNonPositive() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.CountGet">
            <summary>设置 StackedPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetMaxValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetMinAbsValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetMinValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetSeriesPointValueRefinedPoint">
            <summary>设置 StackedPointInteraction.GetSeriesPointValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetStackedPointMaxValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.GetStackedPointMinValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.HasEmptyPointsGet">
            <summary>设置 StackedPointInteraction.get_HasEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.InsertPointInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.InsertPoint(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.InsertSeriesRefinedSeriesInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.InsertSeries(RefinedSeries series, Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.IsEmptyGet">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.IsSupplyInteractionGet">
            <summary>设置 StackedPointInteraction.get_IsSupplyInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.IsSupplyInteractionSetBoolean">
            <summary>设置 StackedPointInteraction.set_IsSupplyInteraction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.ItemGetInt32">
            <summary>设置 StackedPointInteraction.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.ItemSetInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.MaxValueGet">
            <summary>设置 StackedPointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.MinAbsValueGet">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.MinValueGet">
            <summary>设置 StackedPointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.NegativeSumGet">
            <summary>设置 StackedPointInteraction.get_NegativeSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.PositiveSumGet">
            <summary>设置 StackedPointInteraction.get_PositiveSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.Recalculate">
            <summary>设置 StackedPointInteraction.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.RemovePointInt32">
            <summary>设置 StackedPointInteraction.RemovePoint(Int32 seriesIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.RemoveSeriesInt32">
            <summary>设置 StackedPointInteraction.RemoveSeries(Int32 seriesIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.SeriesGet">
            <summary>设置 StackedPointInteraction.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.AllInstances.SeriesViewGet">
            <summary>设置 StackedPointInteraction.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.ArgumentGet">
            <summary>设置 StackedPointInteraction.get_Argument() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.CalculateAllSeriesNonPositive">
            <summary>设置 StackedPointInteraction.CalculateAllSeriesNonPositive() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.ConstructorListOfRefinedSeriesInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.StackedPointInteraction(List`1&lt;RefinedSeries&gt; series, Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.CountGet">
            <summary>设置 StackedPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetMaxValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetMinValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetSeriesPointValueRefinedPoint">
            <summary>设置 StackedPointInteraction.GetSeriesPointValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetStackedPointMaxValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.GetStackedPointMinValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.HasEmptyPointsGet">
            <summary>设置 StackedPointInteraction.get_HasEmptyPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.InsertPointInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.InsertPoint(Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.InsertSeriesRefinedSeriesInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.InsertSeries(RefinedSeries series, Int32 seriesIndex, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.IsEmptyGet">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.IsSupplyInteractionGet">
            <summary>设置 StackedPointInteraction.get_IsSupplyInteraction() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.IsSupplyInteractionSetBoolean">
            <summary>设置 StackedPointInteraction.set_IsSupplyInteraction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.ItemGetInt32">
            <summary>设置 StackedPointInteraction.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.ItemSetInt32RefinedPoint">
            <summary>设置 StackedPointInteraction.set_Item(Int32 index, RefinedPoint value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.MaxValueGet">
            <summary>设置 StackedPointInteraction.get_MaxValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.MinAbsValueGet">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.MinValueGet">
            <summary>设置 StackedPointInteraction.get_MinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.NegativeSumGet">
            <summary>设置 StackedPointInteraction.get_NegativeSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.PositiveSumGet">
            <summary>设置 StackedPointInteraction.get_PositiveSum() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.Recalculate">
            <summary>设置 StackedPointInteraction.Recalculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.RemovePointInt32">
            <summary>设置 StackedPointInteraction.RemovePoint(Int32 seriesIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.RemoveSeriesInt32">
            <summary>设置 StackedPointInteraction.RemoveSeries(Int32 seriesIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.SeriesGet">
            <summary>设置 StackedPointInteraction.get_Series() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStackedPointInteraction.SeriesViewGet">
            <summary>设置 StackedPointInteraction.get_SeriesView() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator">
            <summary>DevExpress.Charts.Native.StandardDeviationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.#ctor(DevExpress.Charts.Native.StandardDeviationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 StandardDeviationCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.CalculateNextSmaDoubleDoubleInt32Double">
            <summary>设置 StandardDeviationCalculator.CalculateNextSma(Double value, Double preSma, Int32 actualPointsCount, Double firstInPeriodValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.CalculateStandardDeviationIListOfRefinedPointInt32ValueLevelInternalDoubleInt32">
            <summary>设置 StandardDeviationCalculator.CalculateStandardDeviation(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 actualPointsCount, ValueLevelInternal valueLevel, Double sma, Int32 currentRefinedPointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.CalculatedGet">
            <summary>设置 StandardDeviationCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 StandardDeviationCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 StandardDeviationCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.MaxYGet">
            <summary>设置 StandardDeviationCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 StandardDeviationCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.MinYGet">
            <summary>设置 StandardDeviationCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.AllInstances.MinYSetDouble">
            <summary>设置 StandardDeviationCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 StandardDeviationCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.CalculateNextSmaDoubleDoubleInt32Double">
            <summary>设置 StandardDeviationCalculator.CalculateNextSma(Double value, Double preSma, Int32 actualPointsCount, Double firstInPeriodValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.CalculateStandardDeviationIListOfRefinedPointInt32ValueLevelInternalDoubleInt32">
            <summary>设置 StandardDeviationCalculator.CalculateStandardDeviation(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 actualPointsCount, ValueLevelInternal valueLevel, Double sma, Int32 currentRefinedPointIndex) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.CalculatedGet">
            <summary>设置 StandardDeviationCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.CalculatedSetBoolean">
            <summary>设置 StandardDeviationCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.Constructor">
            <summary>设置 StandardDeviationCalculator.StandardDeviationCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 StandardDeviationCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.MaxYGet">
            <summary>设置 StandardDeviationCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.MaxYSetDouble">
            <summary>设置 StandardDeviationCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.MinYGet">
            <summary>设置 StandardDeviationCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStandardDeviationCalculator.MinYSetDouble">
            <summary>设置 StandardDeviationCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStep">
            <summary>DevExpress.Charts.Native.Step 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStep.#ctor(DevExpress.Charts.Native.Step)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AddPrimaryTestPositionGPoint2D">
            <summary>设置 Step.AddPrimaryTestPosition(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AddSecondaryTestPositionGPoint2D">
            <summary>设置 Step.AddSecondaryTestPosition(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.AddPrimaryTestPositionGPoint2D">
            <summary>设置 Step.AddPrimaryTestPosition(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.AddSecondaryTestPositionGPoint2D">
            <summary>设置 Step.AddSecondaryTestPosition(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.AllocationRectGet">
            <summary>设置 Step.get_AllocationRect() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.CalcDistanceToAllocationRectGPoint2D">
            <summary>设置 Step.CalcDistanceToAllocationRect(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.IsEndGet">
            <summary>设置 Step.get_IsEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.IsTestingEnd">
            <summary>设置 Step.IsTestingEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.IsUpdateEndDouble">
            <summary>设置 Step.IsUpdateEnd(Double distance) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.LayoutGet">
            <summary>设置 Step.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.Next">
            <summary>设置 Step.Next() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.PositionGet">
            <summary>设置 Step.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.TestPositionsGet">
            <summary>设置 Step.get_TestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllInstances.Update">
            <summary>设置 Step.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.AllocationRectGet">
            <summary>设置 Step.get_AllocationRect() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStep.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStep.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.CalcDistanceToAllocationRectGPoint2D">
            <summary>设置 Step.CalcDistanceToAllocationRect(GPoint2D position) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.ConstructorInt32GRect2DRectanglesLayout">
            <summary>设置 Step.Step(Int32 position, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.IsEndGet">
            <summary>设置 Step.get_IsEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.IsTestingEnd">
            <summary>设置 Step.IsTestingEnd() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.IsUpdateEndDouble">
            <summary>设置 Step.IsUpdateEnd(Double distance) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.LayoutGet">
            <summary>设置 Step.get_Layout() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.Next">
            <summary>设置 Step.Next() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.PositionGet">
            <summary>设置 Step.get_Position() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.TestPositionsGet">
            <summary>设置 Step.get_TestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStep.Update">
            <summary>设置 Step.Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StepAreaGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.#ctor(DevExpress.Charts.Native.StepAreaGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 StepAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 StepAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 StepAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.ClosedGet">
            <summary>设置 StepAreaGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.ConstructorBoolean">
            <summary>设置 StepAreaGeometryStripCreator.StepAreaGeometryStripCreator(Boolean invertedStep) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.CreateStrip">
            <summary>设置 StepAreaGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StepAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StepLineGeometryStripCreator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.#ctor(DevExpress.Charts.Native.StepLineGeometryStripCreator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances.ClosedGet">
            <summary>设置 StepLineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances.CreateStrip">
            <summary>设置 StepLineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances.FilteringPointsSupportedGet">
            <summary>设置 StepLineGeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.AllInstances.ShouldAddEmptyStripGet">
            <summary>设置 StepLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.ClosedGet">
            <summary>设置 StepLineGeometryStripCreator.get_Closed() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.ConstructorBoolean">
            <summary>设置 StepLineGeometryStripCreator.StepLineGeometryStripCreator(Boolean invertedStep) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.CreateStrip">
            <summary>设置 StepLineGeometryStripCreator.CreateStrip() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 StepLineGeometryStripCreator.get_FilteringPointsSupported() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StepLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToBottom">
            <summary>DevExpress.Charts.Native.StepToBottom 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToBottom.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToBottom.#ctor(DevExpress.Charts.Native.StepToBottom)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToBottom.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.AllInstances.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToBottom.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.AllInstances.CalcNearPositionCell">
            <summary>设置 StepToBottom.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.AllInstances.IncrementGet">
            <summary>设置 StepToBottom.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.AllInstances.IsEndPositionInt32">
            <summary>设置 StepToBottom.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToBottom.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToBottom.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToBottom.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.CalcNearPositionCell">
            <summary>设置 StepToBottom.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 StepToBottom.StepToBottom(Int32 position, Int32 startColumnIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.IncrementGet">
            <summary>设置 StepToBottom.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToBottom.IsEndPositionInt32">
            <summary>设置 StepToBottom.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToRight">
            <summary>DevExpress.Charts.Native.StepToRight 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToRight.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToRight.#ctor(DevExpress.Charts.Native.StepToRight)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToRight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.AllInstances.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToRight.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.AllInstances.CalcNearPositionCell">
            <summary>设置 StepToRight.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.AllInstances.IncrementGet">
            <summary>设置 StepToRight.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.AllInstances.IsEndPositionInt32">
            <summary>设置 StepToRight.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToRight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToRight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToRight.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.CalcNearPositionCell">
            <summary>设置 StepToRight.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 StepToRight.StepToRight(Int32 position, Int32 startRowIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.IncrementGet">
            <summary>设置 StepToRight.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToRight.IsEndPositionInt32">
            <summary>设置 StepToRight.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToTop">
            <summary>DevExpress.Charts.Native.StepToTop 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToTop.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToTop.#ctor(DevExpress.Charts.Native.StepToTop)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToTop.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.AllInstances.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToTop.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.AllInstances.CalcNearPositionCell">
            <summary>设置 StepToTop.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.AllInstances.IncrementGet">
            <summary>设置 StepToTop.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.AllInstances.IsEndPositionInt32">
            <summary>设置 StepToTop.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToTop.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToTop.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToTop.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.CalcNearPositionCell">
            <summary>设置 StepToTop.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 StepToTop.StepToTop(Int32 position, Int32 startColumnIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.IncrementGet">
            <summary>设置 StepToTop.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToTop.IsEndPositionInt32">
            <summary>设置 StepToTop.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToleft">
            <summary>DevExpress.Charts.Native.StepToleft 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToleft.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToleft.#ctor(DevExpress.Charts.Native.StepToleft)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStepToleft.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.AllInstances.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToleft.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.AllInstances.CalcNearPositionCell">
            <summary>设置 StepToleft.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.AllInstances.IncrementGet">
            <summary>设置 StepToleft.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.AllInstances.IsEndPositionInt32">
            <summary>设置 StepToleft.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToleft.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStepToleft.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToleft.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.CalcNearPositionCell">
            <summary>设置 StepToleft.CalcNearPosition(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 StepToleft.StepToleft(Int32 position, Int32 startRowIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.IncrementGet">
            <summary>设置 StepToleft.get_Increment() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStepToleft.IsEndPositionInt32">
            <summary>设置 StepToleft.IsEndPosition(Int32 position) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStripRange">
            <summary>DevExpress.Charts.Native.StripRange 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStripRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStripRange.#ctor(DevExpress.Charts.Native.StripRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimStripRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.AllInstances.BottomGet">
            <summary>设置 StripRange.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.AllInstances.TopGet">
            <summary>设置 StripRange.get_Top() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStripRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimStripRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.BottomGet">
            <summary>设置 StripRange.get_Bottom() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.ConstructorGRealPoint2DGRealPoint2D">
            <summary>设置 StripRange.StripRange(GRealPoint2D top, GRealPoint2D bottom) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimStripRange.TopGet">
            <summary>设置 StripRange.get_Top() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator">
            <summary>DevExpress.Charts.Native.SumAggregationCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.#ctor(DevExpress.Charts.Native.SumAggregationCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.AllInstances.CalculateIListOfRefinedPoint">
            <summary>设置 SumAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 SumAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimSumAggregationCalculator.Constructor">
            <summary>设置 SumAggregationCalculator.SumAggregationCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTestPosition">
            <summary>DevExpress.Charts.Native.TestPosition 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTestPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTestPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTestPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTestPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTestPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTestPosition.CompareByDistanceTestPositionTestPosition">
            <summary>设置 TestPosition.CompareByDistance(TestPosition x, TestPosition y) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipBubbleValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipBubbleValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.AllInstances.GetWeightTextISeriesPointISeriesString">
            <summary>设置 ToolTipBubbleValueToStringConverter.GetWeightText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipBubbleValueToStringConverter.ToolTipBubbleValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.GetWeightTextISeriesPointISeriesString">
            <summary>设置 ToolTipBubbleValueToStringConverter.GetWeightText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipBubbleValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipFinancialValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipFinancialValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.GetCloseValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetCloseValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.GetHighValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetHighValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.GetLowValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetLowValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.GetOpenValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetOpenValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipFinancialValueToStringConverter.ToolTipFinancialValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.ConstructorISeriesBooleanBoolean">
            <summary>设置 ToolTipFinancialValueToStringConverter.ToolTipFinancialValueToStringConverter(ISeries series, Boolean showOpen, Boolean showClose) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.GetCloseValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetCloseValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.GetHighValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetHighValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.GetLowValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetLowValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.GetOpenValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipFinancialValueToStringConverter.GetOpenValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFinancialValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipFullStackedValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipFullStackedValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipFullStackedValueToStringConverter.ToolTipFullStackedValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipFullStackedValueToStringConverter.ConstructorISeriesBoolean">
            <summary>设置 ToolTipFullStackedValueToStringConverter.ToolTipFullStackedValueToStringConverter(ISeries series, Boolean showStackedGroup) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils">
            <summary>DevExpress.Charts.Native.ToolTipPatternUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.PrepareFragmentStringStringOutStringOut">
            <summary>设置 ToolTipPatternUtils.PrepareFragment(String fragment, String&amp; pattern, String&amp; format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.SplitStringStringCharChar">
            <summary>设置 ToolTipPatternUtils.SplitString(String splitingString, Char leftSeparator, Char rightSeparator) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPatternUtils.StaticConstructor">
            <summary>设置 ToolTipPatternUtils.ToolTipPatternUtils() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipPercentValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipPercentValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipPercentValueToStringConverter.ToolTipPercentValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.ConstructorISeriesBoolean">
            <summary>设置 ToolTipPercentValueToStringConverter.ToolTipPercentValueToStringConverter(ISeries series, Boolean showStackedGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPercentValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipPointDataToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipPointDataToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.AllowAllPatternValuesGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowAllPatternValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.AllowArgumentGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.AllowValueGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.ConvertToStringObjectString">
            <summary>设置 ToolTipPointDataToStringConverter.ConvertToString(Object value, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.DefaulPointPatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaulPointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.DefaultArgumentPatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaultArgumentPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetActualMeasureUnitIDateTimeScaleOptions">
            <summary>设置 ToolTipPointDataToStringConverter.GetActualMeasureUnit(IDateTimeScaleOptions scaleOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetArgumentTextISeriesPointISeriesString">
            <summary>设置 ToolTipPointDataToStringConverter.GetArgumentText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetDefaultArgumentFormat">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultArgumentFormat() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetDefaultFormatScale">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultFormat(Scale scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetDefaultValueFormat">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultValueFormat() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetFormatStringDateTimeMeasureUnitNative">
            <summary>设置 ToolTipPointDataToStringConverter.GetFormatString(DateTimeMeasureUnitNative dateTimeMeasureUnitNative) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetGroupedPointPatternBooleanBoolean">
            <summary>设置 ToolTipPointDataToStringConverter.GetGroupedPointPattern(Boolean allowArgument, Boolean allowValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetHintText">
            <summary>设置 ToolTipPointDataToStringConverter.GetHintText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetPointValuesISeriesPointISeries">
            <summary>设置 ToolTipPointDataToStringConverter.GetPointValues(ISeriesPoint point, ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GetValueTextInt32ISeriesPointISeriesString">
            <summary>设置 ToolTipPointDataToStringConverter.GetValueText(Int32 valueIndex, ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.HintGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_Hint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.HintSetObject">
            <summary>设置 ToolTipPointDataToStringConverter.set_Hint(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.ShowCloseGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_ShowClose() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllInstances.ShowOpenGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_ShowOpen() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllowAllPatternValuesGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowAllPatternValues() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllowArgumentGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowArgument() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.AllowValueGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_AllowValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipPointDataToStringConverter.ToolTipPointDataToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ConstructorISeriesBoolean">
            <summary>设置 ToolTipPointDataToStringConverter.ToolTipPointDataToStringConverter(ISeries series, Boolean showStackedGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ConstructorISeriesBooleanBooleanBoolean">
            <summary>设置 ToolTipPointDataToStringConverter.ToolTipPointDataToStringConverter(ISeries series, Boolean showOpen, Boolean showClose, Boolean showStackedGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ConstructorISeriesBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 ToolTipPointDataToStringConverter.ToolTipPointDataToStringConverter(ISeries series, Boolean showOpen, Boolean showClose, Boolean showStackedGroup, Boolean allowArgument, Boolean allowValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ConvertToStringObjectString">
            <summary>设置 ToolTipPointDataToStringConverter.ConvertToString(Object value, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.DefaulPointPatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaulPointPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.DefaultArgumentPatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaultArgumentPattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetActualMeasureUnitIDateTimeScaleOptions">
            <summary>设置 ToolTipPointDataToStringConverter.GetActualMeasureUnit(IDateTimeScaleOptions scaleOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetArgumentTextISeriesPointISeriesString">
            <summary>设置 ToolTipPointDataToStringConverter.GetArgumentText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetDefaultArgumentFormat">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultArgumentFormat() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetDefaultFormatScale">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultFormat(Scale scaleType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetDefaultValueFormat">
            <summary>设置 ToolTipPointDataToStringConverter.GetDefaultValueFormat() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetFormatStringDateTimeMeasureUnitNative">
            <summary>设置 ToolTipPointDataToStringConverter.GetFormatString(DateTimeMeasureUnitNative dateTimeMeasureUnitNative) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetGroupedPointPatternBooleanBoolean">
            <summary>设置 ToolTipPointDataToStringConverter.GetGroupedPointPattern(Boolean allowArgument, Boolean allowValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetHintText">
            <summary>设置 ToolTipPointDataToStringConverter.GetHintText() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetPointValuesISeriesPointISeries">
            <summary>设置 ToolTipPointDataToStringConverter.GetPointValues(ISeriesPoint point, ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GetValueTextInt32ISeriesPointISeriesString">
            <summary>设置 ToolTipPointDataToStringConverter.GetValueText(Int32 valueIndex, ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.HintGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_Hint() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.HintSetObject">
            <summary>设置 ToolTipPointDataToStringConverter.set_Hint(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ShowCloseGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_ShowClose() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipPointDataToStringConverter.ShowOpenGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_ShowOpen() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipRangeValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipRangeValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.AllInstances.GetValue1TextISeriesPointISeriesString">
            <summary>设置 ToolTipRangeValueToStringConverter.GetValue1Text(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.AllInstances.GetValue2TextISeriesPointISeriesString">
            <summary>设置 ToolTipRangeValueToStringConverter.GetValue2Text(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipRangeValueToStringConverter.ToolTipRangeValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.GetValue1TextISeriesPointISeriesString">
            <summary>设置 ToolTipRangeValueToStringConverter.GetValue1Text(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.GetValue2TextISeriesPointISeriesString">
            <summary>设置 ToolTipRangeValueToStringConverter.GetValue2Text(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipRangeValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipSimpleDiagramValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipSimpleDiagramValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipSimpleDiagramValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipSimpleDiagramValueToStringConverter.ToolTipSimpleDiagramValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.#ctor(DevExpress.Charts.Native.ToolTipValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.AllInstances.DefaultValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.AllInstances.GetValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipValueToStringConverter.GetValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.AllInstances.GroupedPointValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.ConstructorISeries">
            <summary>设置 ToolTipValueToStringConverter.ToolTipValueToStringConverter(ISeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.ConstructorISeriesBoolean">
            <summary>设置 ToolTipValueToStringConverter.ToolTipValueToStringConverter(ISeries series, Boolean showStackedGroup) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.ConstructorISeriesBooleanBoolean">
            <summary>设置 ToolTipValueToStringConverter.ToolTipValueToStringConverter(ISeries series, Boolean allowArgument, Boolean allowValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_DefaultValuePattern() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.GetValueTextISeriesPointISeriesString">
            <summary>设置 ToolTipValueToStringConverter.GetValueText(ISeriesPoint point, ISeries series, String format) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimToolTipValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_GroupedPointValuePattern() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior">
            <summary>DevExpress.Charts.Native.TopNFilterBehavior 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.#ctor(DevExpress.Charts.Native.TopNFilterBehavior)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.AllInstances.CalculateMinPointIndexIListOfRefinedPoint">
            <summary>设置 TopNFilterBehavior.CalculateMinPointIndex(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.AllInstances.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 TopNFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.CalculateMinPointIndexIListOfRefinedPoint">
            <summary>设置 TopNFilterBehavior.CalculateMinPointIndex(IList`1&lt;RefinedPoint&gt; points) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.Constructor">
            <summary>设置 TopNFilterBehavior.TopNFilterBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTopNFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 TopNFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTransformation">
            <summary>DevExpress.Charts.Native.Transformation 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTransformation.#ctor(DevExpress.Charts.Native.Transformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.CompleteUpdate">
            <summary>设置 Transformation.CompleteUpdate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.Reset">
            <summary>设置 Transformation.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.TransformForwardDoubleArray">
            <summary>设置 Transformation.TransformForward(Double[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.TransformForwardIListOfDouble">
            <summary>设置 Transformation.TransformForward(IList`1&lt;Double&gt; values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.UpdateDoubleArray">
            <summary>设置 Transformation.Update(Double[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.AllInstances.UpdateIAxisValueContainer">
            <summary>设置 Transformation.Update(IAxisValueContainer container) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTransformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTransformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTransformation.Bind(DevExpress.Charts.Native.ITransformation)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.CompleteUpdate">
            <summary>设置 Transformation.CompleteUpdate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.Constructor">
            <summary>设置 Transformation.Transformation() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.Reset">
            <summary>设置 Transformation.Reset() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.TransformForwardDoubleArray">
            <summary>设置 Transformation.TransformForward(Double[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.TransformForwardIAxisRangeDataITransformation">
            <summary>设置 Transformation.TransformForward(IAxisRangeData rangeData, ITransformation transformation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.TransformForwardIListOfDouble">
            <summary>设置 Transformation.TransformForward(IList`1&lt;Double&gt; values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.UpdateDoubleArray">
            <summary>设置 Transformation.Update(Double[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTransformation.UpdateIAxisValueContainer">
            <summary>设置 Transformation.Update(IAxisValueContainer container) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator">
            <summary>DevExpress.Charts.Native.TrendLineCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.#ctor(DevExpress.Charts.Native.TrendLineCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.AllInstances.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalBooleanDouble">
            <summary>设置 TrendLineCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Boolean extrapolateToInfinity, Double axisXMaxValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.CalculateIRefinedSeriesAxisScaleTypeMapCultureInfoObjectValueLevelInternalObjectValueLevelInternalBooleanDouble">
            <summary>设置 TrendLineCalculator.Calculate(IRefinedSeries seriesInfo, AxisScaleTypeMap axisXScaleTypeMap, CultureInfo cultureInfo, Object argument1, ValueLevelInternal valueLevel1, Object argument2, ValueLevelInternal valueLevel2, Boolean extrapolateToInfinity, Double axisXMaxValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTrendLineCalculator.Constructor">
            <summary>设置 TrendLineCalculator.TrendLineCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.TriangularMovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.#ctor(DevExpress.Charts.Native.TriangularMovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.AllInstances.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TriangularMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TriangularMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTriangularMovingAverageCalculator.Constructor">
            <summary>设置 TriangularMovingAverageCalculator.TriangularMovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.TripleExponentialMovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.#ctor(DevExpress.Charts.Native.TripleExponentialMovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.AllInstances.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageCalculator.Constructor">
            <summary>设置 TripleExponentialMovingAverageCalculator.TripleExponentialMovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator">
            <summary>DevExpress.Charts.Native.TripleExponentialMovingAverageTrixCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.#ctor(DevExpress.Charts.Native.TripleExponentialMovingAverageTrixCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.CalcTrixDoubleDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.CalcTrix(Double tma, Double tmaPre) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.Calculate(IRefinedSeries refinedSeries, Int32 smoothingPointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.CalculatedGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 smoothingPointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.MaxYGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.MinYGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.AllInstances.MinYSetDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.CalcTrixDoubleDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.CalcTrix(Double tma, Double tmaPre) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.CalculateIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.Calculate(IRefinedSeries refinedSeries, Int32 smoothingPointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.CalculatedGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.CalculatedSetBoolean">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.Constructor">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.TripleExponentialMovingAverageTrixCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.IsParametersCorrectIRefinedSeriesInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 smoothingPointCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.MaxYGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.MaxYSetDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.MinYGet">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTripleExponentialMovingAverageTrixCalculator.MinYSetDouble">
            <summary>设置 TripleExponentialMovingAverageTrixCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTypeConversion">
            <summary>DevExpress.Charts.Native.TypeConversion 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypeConversion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypeConversion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypeConversion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypeConversion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypeConversion.ConvertToCompatibleValueObjectType">
            <summary>设置 TypeConversion.ConvertToCompatibleValue(Object value, Type type) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator">
            <summary>DevExpress.Charts.Native.TypicalPriceCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.#ctor(DevExpress.Charts.Native.TypicalPriceCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.AllInstances.CalculateIRefinedSeries">
            <summary>设置 TypicalPriceCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.AllInstances.CalculatedGet">
            <summary>设置 TypicalPriceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 TypicalPriceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.AllInstances.IsParameterCorrectIRefinedSeries">
            <summary>设置 TypicalPriceCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.CalculateIRefinedSeries">
            <summary>设置 TypicalPriceCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.CalculatedGet">
            <summary>设置 TypicalPriceCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.CalculatedSetBoolean">
            <summary>设置 TypicalPriceCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.Constructor">
            <summary>设置 TypicalPriceCalculator.TypicalPriceCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimTypicalPriceCalculator.IsParameterCorrectIRefinedSeries">
            <summary>设置 TypicalPriceCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2">
            <summary>DevExpress.Charts.Native.UnitContainer`2 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.#ctor(DevExpress.Charts.Native.UnitContainer{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AlignmentUnitCountGet">
            <summary>设置 UnitContainer`2.get_AlignmentUnitCount() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.AlignmentUnitCountGet">
            <summary>设置 UnitContainer`2.get_AlignmentUnitCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.GetAlignmentUnitAtInt32">
            <summary>设置 UnitContainer`2.GetAlignmentUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.GetMeasureUnitAtInt32">
            <summary>设置 UnitContainer`2.GetMeasureUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.GetUnitAtOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Native.UnitContainer{`0,`1},System.Int32,``0})">
            <summary>设置 UnitContainer`2.GetUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.MeasureUnitCountGet">
            <summary>设置 UnitContainer`2.get_MeasureUnitCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.SelectAlignmentUnitDoubleDouble">
            <summary>设置 UnitContainer`2.SelectAlignmentUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.SelectMeasureUnitDoubleDouble">
            <summary>设置 UnitContainer`2.SelectMeasureUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.SelectUnitOf1DoubleDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Native.UnitContainer{`0,`1},System.Double,System.Double,``0})">
            <summary>设置 UnitContainer`2.SelectUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.SelectUnitOf1IListOfM0DoubleDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DevExpress.Charts.Native.UnitContainer{`0,`1},System.Collections.Generic.IList{``0},System.Double,System.Double,``0})">
            <summary>设置 UnitContainer`2.SelectUnit(IList`1&lt;!!0&gt; list, Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.AllInstances.UpdateActiveUnitsIEnumerableOfUnitContainerMeasureItemOfT0T1IEnumerableOfUnitContainerAlignmentItemOfT0T1">
            <summary>设置 UnitContainer`2.UpdateActiveUnits(IEnumerable`1&lt;MeasureItem&lt;!0,!1&gt;&gt; measureItems, IEnumerable`1&lt;AlignmentItem&lt;!0,!1&gt;&gt; alignmentItems) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.Constructor">
            <summary>设置 UnitContainer`2.UnitContainer`2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.GetAlignmentUnitAtInt32">
            <summary>设置 UnitContainer`2.GetAlignmentUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.GetMeasureUnitAtInt32">
            <summary>设置 UnitContainer`2.GetMeasureUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.GetUnitAtOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 UnitContainer`2.GetUnitAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.MeasureUnitCountGet">
            <summary>设置 UnitContainer`2.get_MeasureUnitCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.SelectAlignmentUnitDoubleDouble">
            <summary>设置 UnitContainer`2.SelectAlignmentUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.SelectMeasureUnitDoubleDouble">
            <summary>设置 UnitContainer`2.SelectMeasureUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.SelectUnitOf1DoubleDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,System.Double,``0})">
            <summary>设置 UnitContainer`2.SelectUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.SelectUnitOf1IListOfM0DoubleDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Double,System.Double,``0})">
            <summary>设置 UnitContainer`2.SelectUnit(IList`1&lt;!!0&gt; list, Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem">
            <summary>DevExpress.Charts.Native.UnitContainer`2+AlignmentItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.#ctor(DevExpress.Charts.Native.UnitContainer{`0,`1}.AlignmentItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimAlignmentItem.ConstructorDoubleT1">
            <summary>设置 AlignmentItem.AlignmentItem(Double threshold, !1 unit) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem">
            <summary>DevExpress.Charts.Native.UnitContainer`2+MeasureItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.#ctor(DevExpress.Charts.Native.UnitContainer{`0,`1}.MeasureItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimMeasureItem.ConstructorDoubleT0">
            <summary>设置 MeasureItem.MeasureItem(Double threshold, !0 unit) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem">
            <summary>DevExpress.Charts.Native.UnitContainer`2+ThresholdItem 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.#ctor(DevExpress.Charts.Native.UnitContainer{`0,`1}.ThresholdItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.AllInstances.ThresholdGet">
            <summary>设置 ThresholdItem.get_Threshold() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.ConstructorDouble">
            <summary>设置 ThresholdItem.ThresholdItem(Double threshold) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimThresholdItem.ThresholdGet">
            <summary>设置 ThresholdItem.get_Threshold() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1">
            <summary>DevExpress.Charts.Native.UnitContainer`2+UnitItem`1 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.#ctor(DevExpress.Charts.Native.UnitContainer{`0,`1}.UnitItem{`2})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.AllInstances.UnitGet">
            <summary>设置 UnitItem`1.get_Unit() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.ConstructorDoubleT2">
            <summary>设置 UnitItem`1.UnitItem`1(Double threshold, !2 unit) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.ShimUnitItem`1.UnitGet">
            <summary>设置 UnitItem`1.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitContainer`2.UpdateActiveUnitsIEnumerableOfUnitContainerMeasureItemOfT0T1IEnumerableOfUnitContainerAlignmentItemOfT0T1">
            <summary>设置 UnitContainer`2.UpdateActiveUnits(IEnumerable`1&lt;MeasureItem&lt;!0,!1&gt;&gt; measureItems, IEnumerable`1&lt;AlignmentItem&lt;!0,!1&gt;&gt; alignmentItems) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2">
            <summary>DevExpress.Charts.Native.UnitSelector`2 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.#ctor(DevExpress.Charts.Native.UnitSelector{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.AllInstances.SelectActiveMeasureUnits">
            <summary>设置 UnitSelector`2.SelectActiveMeasureUnits() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.AllInstances.SelectAlignmentDoubleDouble">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.AllInstances.SelectMeasureUnitDoubleDouble">
            <summary>设置 UnitSelector`2.SelectMeasureUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.Constructor">
            <summary>设置 UnitSelector`2.UnitSelector`2() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.SelectActiveMeasureUnits">
            <summary>设置 UnitSelector`2.SelectActiveMeasureUnits() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.SelectAlignmentDoubleDouble">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.SelectMeasureUnitDoubleDouble">
            <summary>设置 UnitSelector`2.SelectMeasureUnit(Double value, Double previousValue) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment">
            <summary>DevExpress.Charts.Native.UnitSelector`2+GridAlignment 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimUnitSelector`2.ShimGridAlignment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior">
            <summary>DevExpress.Charts.Native.ValueThresholdFilterBehavior 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.#ctor(DevExpress.Charts.Native.ValueThresholdFilterBehavior)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AddToOthersPointsRefinedPoint">
            <summary>设置 ValueThresholdFilterBehavior.AddToOthersPoints(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances.AddToOthersPointsRefinedPoint">
            <summary>设置 ValueThresholdFilterBehavior.AddToOthersPoints(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances.CalculateIListOfRefinedPointDouble">
            <summary>设置 ValueThresholdFilterBehavior.Calculate(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances.FilteredPointsGet">
            <summary>设置 ValueThresholdFilterBehavior.get_FilteredPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances.GetValueRefinedPoint">
            <summary>设置 ValueThresholdFilterBehavior.GetValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.AllInstances.OthersPointsGet">
            <summary>设置 ValueThresholdFilterBehavior.get_OthersPoints() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.CalculateIListOfRefinedPointDouble">
            <summary>设置 ValueThresholdFilterBehavior.Calculate(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.Constructor">
            <summary>设置 ValueThresholdFilterBehavior.ValueThresholdFilterBehavior() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.FilteredPointsGet">
            <summary>设置 ValueThresholdFilterBehavior.get_FilteredPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.GetValueRefinedPoint">
            <summary>设置 ValueThresholdFilterBehavior.GetValue(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueThresholdFilterBehavior.OthersPointsGet">
            <summary>设置 ValueThresholdFilterBehavior.get_OthersPoints() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter">
            <summary>DevExpress.Charts.Native.ValueToStringConverter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.#ctor(DevExpress.Charts.Native.ValueToStringConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.AllInstances.ConvertToObjectArray">
            <summary>设置 ValueToStringConverter.ConvertTo(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.AllInstances.GetValueObjectArray">
            <summary>设置 ValueToStringConverter.GetValue(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.AllInstances.GetValueTextObject">
            <summary>设置 ValueToStringConverter.GetValueText(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.AllInstances.NumericOptionsGet">
            <summary>设置 ValueToStringConverter.get_NumericOptions() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.ConstructorINumericOptionsIDateTimeOptions">
            <summary>设置 ValueToStringConverter.ValueToStringConverter(INumericOptions numericOptions, IDateTimeOptions dateTimeOptions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.ConvertToObjectArray">
            <summary>设置 ValueToStringConverter.ConvertTo(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.GetValueObjectArray">
            <summary>设置 ValueToStringConverter.GetValue(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.GetValueTextObject">
            <summary>设置 ValueToStringConverter.GetValueText(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValueToStringConverter.NumericOptionsGet">
            <summary>设置 ValueToStringConverter.get_NumericOptions() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider">
            <summary>DevExpress.Charts.Native.ValuesSourcePatternDataProvider 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.#ctor(DevExpress.Charts.Native.ValuesSourcePatternDataProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.AllInstances.CheckContextObject">
            <summary>设置 ValuesSourcePatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.AllInstances.GetValue">
            <summary>设置 ValuesSourcePatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.CheckContextObject">
            <summary>设置 ValuesSourcePatternDataProvider.CheckContext(Object value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.ConstructorPatternConstants">
            <summary>设置 ValuesSourcePatternDataProvider.ValuesSourcePatternDataProvider(PatternConstants patternConstant) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimValuesSourcePatternDataProvider.GetValue">
            <summary>设置 ValuesSourcePatternDataProvider.GetValue() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVerticalStep">
            <summary>DevExpress.Charts.Native.VerticalStep 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVerticalStep.#ctor(DevExpress.Charts.Native.VerticalStep)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVerticalStep.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.AllInstances.StartColumnIndexGet">
            <summary>设置 VerticalStep.get_StartColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.AllInstances.UpdatePrimaryTestPositions">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.AllInstances.UpdateSecondaryTestPositions">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVerticalStep.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVerticalStep.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.ConstructorInt32Int32GRect2DRectanglesLayout">
            <summary>设置 VerticalStep.VerticalStep(Int32 position, Int32 startColumnIndex, GRect2D rect, RectanglesLayout layout) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.StartColumnIndexGet">
            <summary>设置 VerticalStep.get_StartColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.UpdatePrimaryTestPositions">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVerticalStep.UpdateSecondaryTestPositions">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator">
            <summary>DevExpress.Charts.Native.VisibilityCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.#ctor(DevExpress.Charts.Native.VisibilityCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.ApplyVisibilityBooleanArrayListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.ApplyVisibility(Boolean[] visibility, List`1&lt;ISupportVisibilityControlElement&gt; elements) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.CalculateLayoutListOfISupportVisibilityControlElementListOfVisibilityLayoutRegion">
            <summary>设置 VisibilityCalculator.CalculateLayout(List`1&lt;ISupportVisibilityControlElement&gt; chartElements, List`1&lt;VisibilityLayoutRegion&gt; regions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.CalculateVisibilityGRealSize2DListOfISupportVisibilityControlElementListOfBooleanArray">
            <summary>设置 VisibilityCalculator.CalculateVisibility(GRealSize2D layoutSize, List`1&lt;ISupportVisibilityControlElement&gt; elements, List`1&lt;Boolean[]&gt; visibility) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.CreateVisibilityMaskInt32">
            <summary>设置 VisibilityCalculator.CreateVisibilityMask(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.DecreaseLayoutSizeGRealSize2DGRealRect2DVisibilityElementOrientation">
            <summary>设置 VisibilityCalculator.DecreaseLayoutSize(GRealSize2D layoutSize, GRealRect2D elementBounds, VisibilityElementOrientation elementOrientation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.GetChangedElementsBooleanArrayListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.GetChangedElements(Boolean[] visibility, List`1&lt;ISupportVisibilityControlElement&gt; elements) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.IsValidSizeGRealSize2DGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.IsValidSize(GRealSize2D initialLayoutSize, GRealSize2D layoutSize, GRealSize2D newLayoutSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.SetVisibilityListOfBooleanArrayInt32Boolean">
            <summary>设置 VisibilityCalculator.SetVisibility(List`1&lt;Boolean[]&gt; visibility, Int32 index, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.AllInstances.StoreVisibilityDictionaryOfObjectBooleanListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.StoreVisibility(Dictionary`2&lt;Object,Boolean&gt; startVisibility, List`1&lt;ISupportVisibilityControlElement&gt; list) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.ApplyVisibilityBooleanArrayListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.ApplyVisibility(Boolean[] visibility, List`1&lt;ISupportVisibilityControlElement&gt; elements) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.CalculateLayoutListOfISupportVisibilityControlElementListOfVisibilityLayoutRegion">
            <summary>设置 VisibilityCalculator.CalculateLayout(List`1&lt;ISupportVisibilityControlElement&gt; chartElements, List`1&lt;VisibilityLayoutRegion&gt; regions) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.CalculateVisibilityGRealSize2DListOfISupportVisibilityControlElementListOfBooleanArray">
            <summary>设置 VisibilityCalculator.CalculateVisibility(GRealSize2D layoutSize, List`1&lt;ISupportVisibilityControlElement&gt; elements, List`1&lt;Boolean[]&gt; visibility) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.ConstructorGRealSize2D">
            <summary>设置 VisibilityCalculator.VisibilityCalculator(GRealSize2D minimumSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.CreateVisibilityMaskInt32">
            <summary>设置 VisibilityCalculator.CreateVisibilityMask(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.DecreaseLayoutSizeGRealSize2DGRealRect2DVisibilityElementOrientation">
            <summary>设置 VisibilityCalculator.DecreaseLayoutSize(GRealSize2D layoutSize, GRealRect2D elementBounds, VisibilityElementOrientation elementOrientation) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.DecreaseSizeByHeightGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.DecreaseSizeByHeight(GRealSize2D initialSize, GRealSize2D size) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.DecreaseSizeByWidthAndHeightGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.DecreaseSizeByWidthAndHeight(GRealSize2D initialSize, GRealSize2D size) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.DecreaseSizeByWidthGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.DecreaseSizeByWidth(GRealSize2D initialSize, GRealSize2D size) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.DecreaseSizeProportionalGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.DecreaseSizeProportional(GRealSize2D initialSize, GRealSize2D size) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.GetChangedElementsBooleanArrayListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.GetChangedElements(Boolean[] visibility, List`1&lt;ISupportVisibilityControlElement&gt; elements) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.IsValidSizeDoubleDoubleDouble">
            <summary>设置 VisibilityCalculator.IsValidSize(Double newSize, Double size, Double minimumSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.IsValidSizeGRealSize2DGRealSize2DGRealSize2D">
            <summary>设置 VisibilityCalculator.IsValidSize(GRealSize2D initialLayoutSize, GRealSize2D layoutSize, GRealSize2D newLayoutSize) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.SetVisibilityListOfBooleanArrayInt32Boolean">
            <summary>设置 VisibilityCalculator.SetVisibility(List`1&lt;Boolean[]&gt; visibility, Int32 index, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityCalculator.StoreVisibilityDictionaryOfObjectBooleanListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityCalculator.StoreVisibility(Dictionary`2&lt;Object,Boolean&gt; startVisibility, List`1&lt;ISupportVisibilityControlElement&gt; list) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion">
            <summary>DevExpress.Charts.Native.VisibilityLayoutRegion 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.#ctor(DevExpress.Charts.Native.VisibilityLayoutRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.AllInstances.ElementsGet">
            <summary>设置 VisibilityLayoutRegion.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.AllInstances.ElementsToRemoveGet">
            <summary>设置 VisibilityLayoutRegion.get_ElementsToRemove() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.AllInstances.SizeGet">
            <summary>设置 VisibilityLayoutRegion.get_Size() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.ConstructorGRealSize2DListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityLayoutRegion.VisibilityLayoutRegion(GRealSize2D size, List`1&lt;ISupportVisibilityControlElement&gt; elements) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.ConstructorGRealSize2DListOfISupportVisibilityControlElementListOfISupportVisibilityControlElement">
            <summary>设置 VisibilityLayoutRegion.VisibilityLayoutRegion(GRealSize2D size, List`1&lt;ISupportVisibilityControlElement&gt; elements, List`1&lt;ISupportVisibilityControlElement&gt; elementsToRemove) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.ElementsGet">
            <summary>设置 VisibilityLayoutRegion.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.ElementsToRemoveGet">
            <summary>设置 VisibilityLayoutRegion.get_ElementsToRemove() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimVisibilityLayoutRegion.SizeGet">
            <summary>设置 VisibilityLayoutRegion.get_Size() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator">
            <summary>DevExpress.Charts.Native.WeightedCloseCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.#ctor(DevExpress.Charts.Native.WeightedCloseCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.AllInstances.CalculateIRefinedSeries">
            <summary>设置 WeightedCloseCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.AllInstances.CalculatedGet">
            <summary>设置 WeightedCloseCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 WeightedCloseCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.AllInstances.IsParameterCorrectIRefinedSeries">
            <summary>设置 WeightedCloseCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.CalculateIRefinedSeries">
            <summary>设置 WeightedCloseCalculator.Calculate(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.CalculatedGet">
            <summary>设置 WeightedCloseCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.CalculatedSetBoolean">
            <summary>设置 WeightedCloseCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.Constructor">
            <summary>设置 WeightedCloseCalculator.WeightedCloseCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedCloseCalculator.IsParameterCorrectIRefinedSeries">
            <summary>设置 WeightedCloseCalculator.IsParameterCorrect(IRefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.WeightedMovingAverageCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.#ctor(DevExpress.Charts.Native.WeightedMovingAverageCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.AllInstances.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 WeightedMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 WeightedMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWeightedMovingAverageCalculator.Constructor">
            <summary>设置 WeightedMovingAverageCalculator.WeightedMovingAverageCalculator() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator">
            <summary>DevExpress.Charts.Native.WilliamsRCalculator 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.#ctor(DevExpress.Charts.Native.WilliamsRCalculator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.CalculateIRefinedSeriesInt32">
            <summary>设置 WilliamsRCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.CalculatedGet">
            <summary>设置 WilliamsRCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.CalculatedSetBoolean">
            <summary>设置 WilliamsRCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.FindMinMaxIListOfRefinedPointInt32Int32DoubleOutDoubleOut">
            <summary>设置 WilliamsRCalculator.FindMinMax(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 currentIndex, Int32 usingPointsCount, Double&amp; maxHigh, Double&amp; minLow) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 WilliamsRCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.MaxYGet">
            <summary>设置 WilliamsRCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.MaxYSetDouble">
            <summary>设置 WilliamsRCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.MinYGet">
            <summary>设置 WilliamsRCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.AllInstances.MinYSetDouble">
            <summary>设置 WilliamsRCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.CalculateIRefinedSeriesInt32">
            <summary>设置 WilliamsRCalculator.Calculate(IRefinedSeries refinedSeries, Int32 pointCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.CalculatedGet">
            <summary>设置 WilliamsRCalculator.get_Calculated() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.CalculatedSetBoolean">
            <summary>设置 WilliamsRCalculator.set_Calculated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.Constructor">
            <summary>设置 WilliamsRCalculator.WilliamsRCalculator() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.FindMinMaxIListOfRefinedPointInt32Int32DoubleOutDoubleOut">
            <summary>设置 WilliamsRCalculator.FindMinMax(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 currentIndex, Int32 usingPointsCount, Double&amp; maxHigh, Double&amp; minLow) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.IsParametersCorrectIRefinedSeriesInt32">
            <summary>设置 WilliamsRCalculator.IsParametersCorrect(IRefinedSeries refinedSeries, Int32 pointsCount) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.MaxYGet">
            <summary>设置 WilliamsRCalculator.get_MaxY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.MaxYSetDouble">
            <summary>设置 WilliamsRCalculator.set_MaxY(Double value) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.MinYGet">
            <summary>设置 WilliamsRCalculator.get_MinY() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWilliamsRCalculator.MinYSetDouble">
            <summary>设置 WilliamsRCalculator.set_MinY(Double value) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter">
            <summary>DevExpress.Charts.Native.WorkdaysPointsFilter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.#ctor(DevExpress.Charts.Native.WorkdaysPointsFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.ArgumentAxisDataGet">
            <summary>设置 WorkdaysPointsFilter.get_ArgumentAxisData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.ClearCache">
            <summary>设置 WorkdaysPointsFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.FilterPointsIListOfRefinedPoint">
            <summary>设置 WorkdaysPointsFilter.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.GetCachedPoints">
            <summary>设置 WorkdaysPointsFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.GetOptions">
            <summary>设置 WorkdaysPointsFilter.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.IsEnabled">
            <summary>设置 WorkdaysPointsFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.IsHolidayDateTime">
            <summary>设置 WorkdaysPointsFilter.IsHoliday(DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.NeedSortedByArgumentPointsGet">
            <summary>设置 WorkdaysPointsFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.RecalculateIListOfRefinedPoint">
            <summary>设置 WorkdaysPointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.AllInstances.Update">
            <summary>设置 WorkdaysPointsFilter.Update() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.ArgumentAxisDataGet">
            <summary>设置 WorkdaysPointsFilter.get_ArgumentAxisData() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.ClearCache">
            <summary>设置 WorkdaysPointsFilter.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.ConstructorRefinedSeries">
            <summary>设置 WorkdaysPointsFilter.WorkdaysPointsFilter(RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.FilterPointsIListOfRefinedPoint">
            <summary>设置 WorkdaysPointsFilter.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.GetCachedPoints">
            <summary>设置 WorkdaysPointsFilter.GetCachedPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.GetOptions">
            <summary>设置 WorkdaysPointsFilter.GetOptions() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.IsEnabled">
            <summary>设置 WorkdaysPointsFilter.IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.IsHolidayDateTime">
            <summary>设置 WorkdaysPointsFilter.IsHoliday(DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 WorkdaysPointsFilter.get_NeedSortedByArgumentPoints() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 WorkdaysPointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimWorkdaysPointsFilter.Update">
            <summary>设置 WorkdaysPointsFilter.Update() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm">
            <summary>DevExpress.Charts.Native.XYDiagramResolveOverlappingAlgorithm 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.#ctor(DevExpress.Charts.Native.XYDiagramResolveOverlappingAlgorithm)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.AllInstances.ArrangeIXYDiagramLabelLayout">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.Arrange(IXYDiagramLabelLayout label) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.AllInstances.Process">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.ArrangeIXYDiagramLabelLayout">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.Arrange(IXYDiagramLabelLayout label) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.ConstructorIListOfIXYDiagramLabelLayoutGRect2DInt32">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.XYDiagramResolveOverlappingAlgorithm(IList`1&lt;IXYDiagramLabelLayout&gt; labels, GRect2D bounds, Int32 overlappingIndent) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.IsVisibleIXYDiagramLabelLayoutGPoint2D">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.IsVisible(IXYDiagramLabelLayout label, GPoint2D point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.Process">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.Process() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYDiagramResolveOverlappingAlgorithm.ProcessIListOfIXYDiagramLabelLayoutGRect2DInt32">
            <summary>设置 XYDiagramResolveOverlappingAlgorithm.Process(IList`1&lt;IXYDiagramLabelLayout&gt; labels, GRect2D bounds, Int32 overlappingIndent) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer">
            <summary>DevExpress.Charts.Native.XYSeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.#ctor(DevExpress.Charts.Native.XYSeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.Calculate">
            <summary>设置 XYSeriesContainer.Calculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.CalculateAbsMin">
            <summary>设置 XYSeriesContainer.CalculateAbsMin() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.GetAbsMinValue">
            <summary>设置 XYSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.MaxGet">
            <summary>设置 XYSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.MinGet">
            <summary>设置 XYSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.Calculate">
            <summary>设置 XYSeriesContainer.Calculate() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.CalculateAbsMin">
            <summary>设置 XYSeriesContainer.CalculateAbsMin() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.ConstructorISeriesView">
            <summary>设置 XYSeriesContainer.XYSeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.GetAbsMinValue">
            <summary>设置 XYSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.MaxGet">
            <summary>设置 XYSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.MinGet">
            <summary>设置 XYSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction">
            <summary>DevExpress.Charts.Native.XYWPointInteraction 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.#ctor(DevExpress.Charts.Native.XYWPointInteraction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AddPointRefinedPoint">
            <summary>设置 XYWPointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.AddPointRefinedPoint">
            <summary>设置 XYWPointInteraction.AddPoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.Clear">
            <summary>设置 XYWPointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.CountGet">
            <summary>设置 XYWPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.GetMaxValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.GetMinAbsValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.GetMinValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.GetXYWPointSizeIXYWPoint">
            <summary>设置 XYWPointInteraction.GetXYWPointSize(IXYWPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.MaxWeightGet">
            <summary>设置 XYWPointInteraction.get_MaxWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.MinWeightGet">
            <summary>设置 XYWPointInteraction.get_MinWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.AllInstances.RemovePointRefinedPoint">
            <summary>设置 XYWPointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.Bind(DevExpress.Charts.Native.IPointInteraction)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.Clear">
            <summary>设置 XYWPointInteraction.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.ConstructorIXYWSeriesView">
            <summary>设置 XYWPointInteraction.XYWPointInteraction(IXYWSeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.CountGet">
            <summary>设置 XYWPointInteraction.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.GetMaxValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMaxValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.GetMinValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinValue(ISeriesView seriesView) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.GetXYWPointSizeIXYWPoint">
            <summary>设置 XYWPointInteraction.GetXYWPointSize(IXYWPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.MaxWeightGet">
            <summary>设置 XYWPointInteraction.get_MaxWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.MinWeightGet">
            <summary>设置 XYWPointInteraction.get_MinWeight() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWPointInteraction.RemovePointRefinedPoint">
            <summary>设置 XYWPointInteraction.RemovePoint(RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer">
            <summary>DevExpress.Charts.Native.XYWSeriesContainer 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.#ctor(DevExpress.Charts.Native.XYWSeriesContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.GetAbsMinValue">
            <summary>设置 XYWSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.MaxGet">
            <summary>设置 XYWSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.MinGet">
            <summary>设置 XYWSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.AllInstances.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.Bind(DevExpress.Charts.Native.ISupportMinMaxValues)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.ConstructorISeriesView">
            <summary>设置 XYWSeriesContainer.XYWSeriesContainer(ISeriesView view) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.GetAbsMinValue">
            <summary>设置 XYWSeriesContainer.GetAbsMinValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.MaxGet">
            <summary>设置 XYWSeriesContainer.get_Max() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.MinGet">
            <summary>设置 XYWSeriesContainer.get_Min() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXYWSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils">
            <summary>DevExpress.Charts.Native.XtraSerializingUtils 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.GetContentPropertyInstanceXtraItemEventArgsAssemblyString">
            <summary>设置 XtraSerializingUtils.GetContentPropertyInstance(XtraItemEventArgs e, Assembly executingAssembly, String typeNamespace) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimXtraSerializingUtils.GetContentPropertyInstanceXtraPropertyInfoAssemblyString">
            <summary>设置 XtraSerializingUtils.GetContentPropertyInstance(XtraPropertyInfo propertyInfo, Assembly executingAssembly, String typeNamespace) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx">
            <summary>DevExpress.Charts.Native.ZoomCacheEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.#ctor(DevExpress.Charts.Native.ZoomCacheEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.AllInstances.Clear">
            <summary>设置 ZoomCacheEx.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.AllInstances.IsEmptyGet">
            <summary>设置 ZoomCacheEx.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.AllInstances.Pop">
            <summary>设置 ZoomCacheEx.Pop() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.AllInstances.PushZoomCacheItemExZoomingKind">
            <summary>设置 ZoomCacheEx.Push(ZoomCacheItemEx item, ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.Clear">
            <summary>设置 ZoomCacheEx.Clear() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.Constructor">
            <summary>设置 ZoomCacheEx.ZoomCacheEx() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.IsEmptyGet">
            <summary>设置 ZoomCacheEx.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.Pop">
            <summary>设置 ZoomCacheEx.Pop() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheEx.PushZoomCacheItemExZoomingKind">
            <summary>设置 ZoomCacheEx.Push(ZoomCacheItemEx item, ZoomingKind zoomingKind) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx">
            <summary>DevExpress.Charts.Native.ZoomCacheItemEx 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.#ctor(DevExpress.Charts.Native.ZoomCacheItemEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AllInstances.AxisXRangeGet">
            <summary>设置 ZoomCacheItemEx.get_AxisXRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AllInstances.AxisYRangeGet">
            <summary>设置 ZoomCacheItemEx.get_AxisYRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AllInstances.PaneAxesDataGet">
            <summary>设置 ZoomCacheItemEx.get_PaneAxesData() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AxisXRangeGet">
            <summary>设置 ZoomCacheItemEx.get_AxisXRange() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.AxisYRangeGet">
            <summary>设置 ZoomCacheItemEx.get_AxisYRange() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.ConstructorPaneAxesContainer">
            <summary>设置 ZoomCacheItemEx.ZoomCacheItemEx(PaneAxesContainer paneAxesData) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.ShimZoomCacheItemEx.PaneAxesDataGet">
            <summary>设置 ZoomCacheItemEx.get_PaneAxesData() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint">
            <summary>DevExpress.Charts.Native.AggregatedSeriesPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.#ctor(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.Scale,System.Object,System.DateTime[],System.Double[],System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.#ctor(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.Scale,System.Object,System.Double[],System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.InitializeStub">
            <summary>初始化 type StubAggregatedSeriesPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregatedSeriesPoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAggregationCalculator">
            <summary>DevExpress.Charts.Native.AggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 AggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 AggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.InitializeStub">
            <summary>初始化 type StubAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter">
            <summary>DevExpress.Charts.Native.AggregationPointFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.ClearCache">
            <summary>设置 AggregationPointFilter.ClearCache() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.ClearCache01">
            <summary>设置 AggregationPointFilter.ClearCache() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.GetCachedPoints">
            <summary>设置 AggregationPointFilter.GetCachedPoints() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.GetCachedPoints01">
            <summary>设置 AggregationPointFilter.GetCachedPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.InitializeStub">
            <summary>初始化 type StubAggregationPointFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.NeedSortedByArgumentPoints">
            <summary>设置 AggregationPointFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 AggregationPointFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.Recalculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 AggregationPointFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 AggregationPointFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.Update">
            <summary>设置 AggregationPointFilter.Update() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAggregationPointFilter.Update01">
            <summary>设置 AggregationPointFilter.Update() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.AreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 AreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 AreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.Closed">
            <summary>设置 AreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.ClosedGet">
            <summary>设置 AreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.CreateStrip">
            <summary>设置 AreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 AreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 AreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 AreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator">
            <summary>DevExpress.Charts.Native.AverageAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 AverageAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 AverageAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.InitializeStub">
            <summary>初始化 type StubAverageAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator">
            <summary>DevExpress.Charts.Native.AverageTrueRangeCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator.InitializeStub">
            <summary>初始化 type StubAverageTrueRangeCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAverageTrueRangeCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisCollectionBatchUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,System.Collections.Generic.ICollection{DevExpress.Charts.Native.IAxisData},System.Int32,System.Collections.Generic.ICollection{DevExpress.Charts.Native.IAxisData},System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo.InitializeStub">
            <summary>初始化 type StubAxisCollectionBatchUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionBatchUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisCollectionUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,DevExpress.Charts.Native.IAxisData,System.Int32,DevExpress.Charts.Native.IAxisData,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo.InitializeStub">
            <summary>初始化 type StubAxisCollectionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisCollectionUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping">
            <summary>DevExpress.Charts.Native.AxisDateTimeGridMapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.#ctor(DevExpress.Charts.Native.AxisDateTimeMap,DevExpress.Charts.Native.DateTimeGridAlignmentNative,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.AlignedToInternal(System.Double)">
            <summary>设置 AxisDateTimeGridMapping.AlignedToInternal(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisDateTimeGridMapping.AlignedToInternal(Double alignedValue) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InitializeStub">
            <summary>初始化 type StubAxisDateTimeGridMapping 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InternalToAligned(System.Double)">
            <summary>设置 AxisDateTimeGridMapping.InternalToAligned(Double internalValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToAligned(Double internalValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InternalToNative(System.Double)">
            <summary>设置 AxisDateTimeGridMapping.InternalToNative(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeGridMapping.InternalToNativeDouble">
            <summary>设置 AxisDateTimeGridMapping.InternalToNative(Double alignedValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap">
            <summary>DevExpress.Charts.Native.AxisDateTimeMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.#ctor(DevExpress.Charts.Native.DateTimeMeasureUnitNative,DevExpress.Charts.Native.IWorkdaysOptions)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.Clone">
            <summary>设置 AxisDateTimeMap.Clone() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.Clone01">
            <summary>设置 AxisDateTimeMap.Clone() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.ConvertValue(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisDateTimeMap.ConvertValue(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.ConvertValue(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.CreateTransformation(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.CreateTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.DefaultAxisValue">
            <summary>设置 AxisDateTimeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.DefaultAxisValueGet">
            <summary>设置 AxisDateTimeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InitializeStub">
            <summary>初始化 type StubAxisDateTimeMap 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToNative(System.Double)">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToNativeDouble">
            <summary>设置 AxisDateTimeMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToRefined(System.Double)">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToRefinedDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefined(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToRefinedExact(System.Double)">
            <summary>设置 AxisDateTimeMap.InternalToRefinedExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.InternalToRefinedExactDouble">
            <summary>设置 AxisDateTimeMap.InternalToRefinedExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.IsCompatible(System.Object)">
            <summary>设置 AxisDateTimeMap.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.IsCompatibleObject">
            <summary>设置 AxisDateTimeMap.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.IsCompatibleType(System.Type)">
            <summary>设置 AxisDateTimeMap.IsCompatibleType(Type type) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.IsCompatibleTypeType">
            <summary>设置 AxisDateTimeMap.IsCompatibleType(Type type) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.NativeToInternal(System.Object)">
            <summary>设置 AxisDateTimeMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.NativeToInternalObject">
            <summary>设置 AxisDateTimeMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.NativeToRefined(System.Object)">
            <summary>设置 AxisDateTimeMap.NativeToRefined(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.NativeToRefinedObject">
            <summary>设置 AxisDateTimeMap.NativeToRefined(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToInternal(System.Double)">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToInternalDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternal(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToInternalExact(System.Double)">
            <summary>设置 AxisDateTimeMap.RefinedToInternalExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToInternalExactDouble">
            <summary>设置 AxisDateTimeMap.RefinedToInternalExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToNative(System.Double)">
            <summary>设置 AxisDateTimeMap.RefinedToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.RefinedToNativeDouble">
            <summary>设置 AxisDateTimeMap.RefinedToNative(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.ScaleType">
            <summary>设置 AxisDateTimeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.ScaleTypeGet">
            <summary>设置 AxisDateTimeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.TryNativeToInternal(System.Object,System.Double@)">
            <summary>设置 AxisDateTimeMap.TryNativeToInternal(Object value, Double&amp; result) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisDateTimeMap.TryNativeToInternal(Object value, Double&amp; result) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.TryParse(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisDateTimeMap.TryParse(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisDateTimeMap.TryParseObjectCultureInfo">
            <summary>设置 AxisDateTimeMap.TryParse(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo">
            <summary>DevExpress.Charts.Native.AxisElementUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo.InitializeStub">
            <summary>初始化 type StubAxisElementUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisElementUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx">
            <summary>DevExpress.Charts.Native.AxisGridDataEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx.#ctor(DevExpress.Charts.Native.IAxisElementContainer,DevExpress.Charts.Native.IAxisGridMapping,System.Boolean,System.Int32,DevExpress.Charts.Native.IMinMaxValues,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx.InitializeStub">
            <summary>初始化 type StubAxisGridDataEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridDataEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisGridItemList">
            <summary>DevExpress.Charts.Native.AxisGridItemList 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridItemList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridItemList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridItemList.InitializeStub">
            <summary>初始化 type StubAxisGridItemList 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridItemList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridItemList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisGridMapping">
            <summary>DevExpress.Charts.Native.AxisGridMapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.#ctor(DevExpress.Charts.Native.AxisScaleTypeMap,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.AlignedToInternal(System.Double)">
            <summary>设置 AxisGridMapping.AlignedToInternal(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisGridMapping.AlignedToInternal(Double alignedValue) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InitializeStub">
            <summary>初始化 type StubAxisGridMapping 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InternalToAligned(System.Double)">
            <summary>设置 AxisGridMapping.InternalToAligned(Double internalValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisGridMapping.InternalToAligned(Double internalValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InternalToNative(System.Double)">
            <summary>设置 AxisGridMapping.InternalToNative(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisGridMapping.InternalToNativeDouble">
            <summary>设置 AxisGridMapping.InternalToNative(Double alignedValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver">
            <summary>DevExpress.Charts.Native.AxisLabelOverlappingResolver 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver.#ctor(System.Collections.Generic.List{DevExpress.Charts.Native.IAxisLabelLayout},DevExpress.Charts.Native.IAxisData,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver.InitializeStub">
            <summary>初始化 type StubAxisLabelOverlappingResolver 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelOverlappingResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache">
            <summary>DevExpress.Charts.Native.AxisLabelResolveOverlappingCache 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache.#ctor(DevExpress.Charts.Native.IResolveLabelsOverlappingAxis,System.Collections.Generic.List{DevExpress.Charts.Native.IAxisLabelLayout})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache.InitializeStub">
            <summary>初始化 type StubAxisLabelResolveOverlappingCache 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisLabelResolveOverlappingCache.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping">
            <summary>DevExpress.Charts.Native.AxisNumericGridMapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.#ctor(DevExpress.Charts.Native.AxisNumericalMap,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.AlignedToInternal(System.Double)">
            <summary>设置 AxisNumericGridMapping.AlignedToInternal(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisNumericGridMapping.AlignedToInternal(Double alignedValue) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InitializeStub">
            <summary>初始化 type StubAxisNumericGridMapping 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InternalToAligned(System.Double)">
            <summary>设置 AxisNumericGridMapping.InternalToAligned(Double internalValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisNumericGridMapping.InternalToAligned(Double internalValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InternalToNative(System.Double)">
            <summary>设置 AxisNumericGridMapping.InternalToNative(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericGridMapping.InternalToNativeDouble">
            <summary>设置 AxisNumericGridMapping.InternalToNative(Double alignedValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap">
            <summary>DevExpress.Charts.Native.AxisNumericalMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.Clone">
            <summary>设置 AxisNumericalMap.Clone() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.Clone01">
            <summary>设置 AxisNumericalMap.Clone() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.ConvertValue(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisNumericalMap.ConvertValue(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisNumericalMap.ConvertValue(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.CreateTransformation(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 AxisNumericalMap.CreateTransformation(IAxisData axis) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.CreateTransformationIAxisData">
            <summary>设置 AxisNumericalMap.CreateTransformation(IAxisData axis) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.DefaultAxisValue">
            <summary>设置 AxisNumericalMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.DefaultAxisValueGet">
            <summary>设置 AxisNumericalMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InitializeStub">
            <summary>初始化 type StubAxisNumericalMap 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToNative(System.Double)">
            <summary>设置 AxisNumericalMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToNativeDouble">
            <summary>设置 AxisNumericalMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToRefined(System.Double)">
            <summary>设置 AxisNumericalMap.InternalToRefined(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToRefinedDouble">
            <summary>设置 AxisNumericalMap.InternalToRefined(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToRefinedExact(System.Double)">
            <summary>设置 AxisNumericalMap.InternalToRefinedExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.InternalToRefinedExactDouble">
            <summary>设置 AxisNumericalMap.InternalToRefinedExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.IsCompatible(System.Object)">
            <summary>设置 AxisNumericalMap.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.IsCompatibleObject">
            <summary>设置 AxisNumericalMap.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.IsCompatibleType(System.Type)">
            <summary>设置 AxisNumericalMap.IsCompatibleType(Type type) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.IsCompatibleTypeType">
            <summary>设置 AxisNumericalMap.IsCompatibleType(Type type) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.NativeToInternal(System.Object)">
            <summary>设置 AxisNumericalMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.NativeToInternalObject">
            <summary>设置 AxisNumericalMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.NativeToRefined(System.Object)">
            <summary>设置 AxisNumericalMap.NativeToRefined(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.NativeToRefinedObject">
            <summary>设置 AxisNumericalMap.NativeToRefined(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToInternal(System.Double)">
            <summary>设置 AxisNumericalMap.RefinedToInternal(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToInternalDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternal(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToInternalExact(System.Double)">
            <summary>设置 AxisNumericalMap.RefinedToInternalExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToInternalExactDouble">
            <summary>设置 AxisNumericalMap.RefinedToInternalExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToNative(System.Double)">
            <summary>设置 AxisNumericalMap.RefinedToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.RefinedToNativeDouble">
            <summary>设置 AxisNumericalMap.RefinedToNative(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.ScaleType">
            <summary>设置 AxisNumericalMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.ScaleTypeGet">
            <summary>设置 AxisNumericalMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.TryNativeToInternal(System.Object,System.Double@)">
            <summary>设置 AxisNumericalMap.TryNativeToInternal(Object value, Double&amp; result) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisNumericalMap.TryNativeToInternal(Object value, Double&amp; result) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.TryParse(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisNumericalMap.TryParse(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisNumericalMap.TryParseObjectCultureInfo">
            <summary>设置 AxisNumericalMap.TryParse(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer">
            <summary>DevExpress.Charts.Native.AxisPaneContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.#ctor(DevExpress.Charts.Native.PaneAxesContainerRepository)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.InitializeStub">
            <summary>初始化 type StubAxisPaneContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisPaneContainer.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider">
            <summary>DevExpress.Charts.Native.AxisPatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 AxisPatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.CheckContextObject">
            <summary>设置 AxisPatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.GetValue">
            <summary>设置 AxisPatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.GetValue01">
            <summary>设置 AxisPatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.InitializeStub">
            <summary>初始化 type StubAxisPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping">
            <summary>DevExpress.Charts.Native.AxisQualitativeGridMapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.#ctor(DevExpress.Charts.Native.AxisQualitativeMap,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.AlignedToInternal(System.Double)">
            <summary>设置 AxisQualitativeGridMapping.AlignedToInternal(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.AlignedToInternalDouble">
            <summary>设置 AxisQualitativeGridMapping.AlignedToInternal(Double alignedValue) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InitializeStub">
            <summary>初始化 type StubAxisQualitativeGridMapping 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InternalToAligned(System.Double)">
            <summary>设置 AxisQualitativeGridMapping.InternalToAligned(Double internalValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InternalToAlignedDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToAligned(Double internalValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InternalToNative(System.Double)">
            <summary>设置 AxisQualitativeGridMapping.InternalToNative(Double alignedValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeGridMapping.InternalToNativeDouble">
            <summary>设置 AxisQualitativeGridMapping.InternalToNative(Double alignedValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap">
            <summary>DevExpress.Charts.Native.AxisQualitativeMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.#ctor(System.Collections.Generic.List{System.Object})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.Clone">
            <summary>设置 AxisQualitativeMap.Clone() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.Clone01">
            <summary>设置 AxisQualitativeMap.Clone() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.ConvertValue(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisQualitativeMap.ConvertValue(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.ConvertValue(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.CreateTransformation(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.CreateTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.DefaultAxisValue">
            <summary>设置 AxisQualitativeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.DefaultAxisValueGet">
            <summary>设置 AxisQualitativeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InitializeStub">
            <summary>初始化 type StubAxisQualitativeMap 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToNative(System.Double)">
            <summary>设置 AxisQualitativeMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToNativeDouble">
            <summary>设置 AxisQualitativeMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToRefined(System.Double)">
            <summary>设置 AxisQualitativeMap.InternalToRefined(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToRefinedDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefined(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToRefinedExact(System.Double)">
            <summary>设置 AxisQualitativeMap.InternalToRefinedExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.InternalToRefinedExactDouble">
            <summary>设置 AxisQualitativeMap.InternalToRefinedExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.IsCompatible(System.Object)">
            <summary>设置 AxisQualitativeMap.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.IsCompatibleObject">
            <summary>设置 AxisQualitativeMap.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.IsCompatibleType(System.Type)">
            <summary>设置 AxisQualitativeMap.IsCompatibleType(Type type) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.IsCompatibleTypeType">
            <summary>设置 AxisQualitativeMap.IsCompatibleType(Type type) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.NativeToInternal(System.Object)">
            <summary>设置 AxisQualitativeMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.NativeToInternalObject">
            <summary>设置 AxisQualitativeMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.NativeToRefined(System.Object)">
            <summary>设置 AxisQualitativeMap.NativeToRefined(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.NativeToRefinedObject">
            <summary>设置 AxisQualitativeMap.NativeToRefined(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToInternal(System.Double)">
            <summary>设置 AxisQualitativeMap.RefinedToInternal(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToInternalDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternal(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToInternalExact(System.Double)">
            <summary>设置 AxisQualitativeMap.RefinedToInternalExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToInternalExactDouble">
            <summary>设置 AxisQualitativeMap.RefinedToInternalExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToNative(System.Double)">
            <summary>设置 AxisQualitativeMap.RefinedToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.RefinedToNativeDouble">
            <summary>设置 AxisQualitativeMap.RefinedToNative(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.ScaleType">
            <summary>设置 AxisQualitativeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.ScaleTypeGet">
            <summary>设置 AxisQualitativeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.TryNativeToInternal(System.Object,System.Double@)">
            <summary>设置 AxisQualitativeMap.TryNativeToInternal(Object value, Double&amp; result) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisQualitativeMap.TryNativeToInternal(Object value, Double&amp; result) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.TryParse(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisQualitativeMap.TryParse(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisQualitativeMap.TryParseObjectCultureInfo">
            <summary>设置 AxisQualitativeMap.TryParse(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo">
            <summary>DevExpress.Charts.Native.AxisRangeInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.#ctor(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.Equals(System.Object)">
            <summary>设置 AxisRangeInfo.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.EqualsObject">
            <summary>设置 AxisRangeInfo.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.GetHashCode">
            <summary>设置 AxisRangeInfo.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.GetHashCode01">
            <summary>设置 AxisRangeInfo.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.InitializeStub">
            <summary>初始化 type StubAxisRangeInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisRangeInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap">
            <summary>DevExpress.Charts.Native.AxisScaleTypeMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.Clone">
            <summary>设置 AxisScaleTypeMap.Clone() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.Clone01">
            <summary>设置 AxisScaleTypeMap.Clone() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.ConvertValue(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisScaleTypeMap.ConvertValue(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.ConvertValueObjectCultureInfo">
            <summary>设置 AxisScaleTypeMap.ConvertValue(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.CreateTransformation(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.CreateTransformationIAxisData">
            <summary>设置 AxisScaleTypeMap.CreateTransformation(IAxisData axis) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.DefaultAxisValue">
            <summary>设置 AxisScaleTypeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.DefaultAxisValueGet">
            <summary>设置 AxisScaleTypeMap.get_DefaultAxisValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InitializeStub">
            <summary>初始化 type StubAxisScaleTypeMap 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToNative(System.Double)">
            <summary>设置 AxisScaleTypeMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToNativeDouble">
            <summary>设置 AxisScaleTypeMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToRefined(System.Double)">
            <summary>设置 AxisScaleTypeMap.InternalToRefined(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToRefinedDouble">
            <summary>设置 AxisScaleTypeMap.InternalToRefined(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToRefinedExact(System.Double)">
            <summary>设置 AxisScaleTypeMap.InternalToRefinedExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.InternalToRefinedExactDouble">
            <summary>设置 AxisScaleTypeMap.InternalToRefinedExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.IsCompatible(System.Object)">
            <summary>设置 AxisScaleTypeMap.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.IsCompatibleObject">
            <summary>设置 AxisScaleTypeMap.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.IsCompatibleType(System.Type)">
            <summary>设置 AxisScaleTypeMap.IsCompatibleType(Type type) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.IsCompatibleTypeType">
            <summary>设置 AxisScaleTypeMap.IsCompatibleType(Type type) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.NativeToInternal(System.Object)">
            <summary>设置 AxisScaleTypeMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.NativeToInternalObject">
            <summary>设置 AxisScaleTypeMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.NativeToRefined(System.Object)">
            <summary>设置 AxisScaleTypeMap.NativeToRefined(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.NativeToRefinedObject">
            <summary>设置 AxisScaleTypeMap.NativeToRefined(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToInternal(System.Double)">
            <summary>设置 AxisScaleTypeMap.RefinedToInternal(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToInternalDouble">
            <summary>设置 AxisScaleTypeMap.RefinedToInternal(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToInternalExact(System.Double)">
            <summary>设置 AxisScaleTypeMap.RefinedToInternalExact(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToInternalExactDouble">
            <summary>设置 AxisScaleTypeMap.RefinedToInternalExact(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToNative(System.Double)">
            <summary>设置 AxisScaleTypeMap.RefinedToNative(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.RefinedToNativeDouble">
            <summary>设置 AxisScaleTypeMap.RefinedToNative(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.ScaleType">
            <summary>设置 AxisScaleTypeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.ScaleTypeGet">
            <summary>设置 AxisScaleTypeMap.get_ScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.TryNativeToInternal(System.Object,System.Double@)">
            <summary>设置 AxisScaleTypeMap.TryNativeToInternal(Object value, Double&amp; result) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.TryNativeToInternalObjectDoubleOut">
            <summary>设置 AxisScaleTypeMap.TryNativeToInternal(Object value, Double&amp; result) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.TryParse(System.Object,System.Globalization.CultureInfo)">
            <summary>设置 AxisScaleTypeMap.TryParse(Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisScaleTypeMap.TryParseObjectCultureInfo">
            <summary>设置 AxisScaleTypeMap.TryParse(Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx">
            <summary>DevExpress.Charts.Native.AxisTextDataEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisGridMapping,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx.InitializeStub">
            <summary>初始化 type StubAxisTextDataEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextDataEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisTextItem">
            <summary>DevExpress.Charts.Native.AxisTextItem 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisTextItem.#ctor(DevExpress.Charts.Native.ICustomAxisLabel,System.Int32,System.Double,System.Object,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisTextItem.InitializeStub">
            <summary>初始化 type StubAxisTextItem 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisTextItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes">
            <summary>DevExpress.Charts.Native.AxisVisibilityInPanes 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.#ctor(DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.Changed">
            <summary>设置 AxisVisibilityInPanes.Changed() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.Changed01">
            <summary>设置 AxisVisibilityInPanes.Changed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.Changing">
            <summary>设置 AxisVisibilityInPanes.Changing() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.Changing01">
            <summary>设置 AxisVisibilityInPanes.Changing() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.GetVisibilityInPane(DevExpress.Charts.Native.IPane)">
            <summary>设置 AxisVisibilityInPanes.GetVisibilityInPane(IPane pane) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.GetVisibilityInPaneIPane">
            <summary>设置 AxisVisibilityInPanes.GetVisibilityInPane(IPane pane) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.InitializeStub">
            <summary>初始化 type StubAxisVisibilityInPanes 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.IsPaneVisible(DevExpress.Charts.Native.IPane)">
            <summary>设置 AxisVisibilityInPanes.IsPaneVisible(IPane pane) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.IsPaneVisibleIPane">
            <summary>设置 AxisVisibilityInPanes.IsPaneVisible(IPane pane) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.SetVisibilityInPane(DevExpress.Charts.Native.IPane,System.Boolean)">
            <summary>设置 AxisVisibilityInPanes.SetVisibilityInPane(IPane pane, Boolean visible) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.SetVisibilityInPaneIPaneBoolean">
            <summary>设置 AxisVisibilityInPanes.SetVisibilityInPane(IPane pane, Boolean visible) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.UpdateVisibilityInPanes(System.Collections.Generic.IList{DevExpress.Charts.Native.IPane})">
            <summary>设置 AxisVisibilityInPanes.UpdateVisibilityInPanes(IList`1&lt;IPane&gt; newPanes) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubAxisVisibilityInPanes.UpdateVisibilityInPanesIListOfIPane">
            <summary>设置 AxisVisibilityInPanes.UpdateVisibilityInPanes(IList`1&lt;IPane&gt; newPanes) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBasePointInteraction">
            <summary>DevExpress.Charts.Native.BasePointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.Argument">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.Count">
            <summary>设置 BasePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.CountGet">
            <summary>设置 BasePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 BasePointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMaxValueISeriesView">
            <summary>设置 BasePointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 BasePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 BasePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 BasePointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.GetMinValueISeriesView">
            <summary>设置 BasePointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.InitializeStub">
            <summary>初始化 type StubBasePointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.IsEmpty">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBasePointInteraction.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBezierCalculator">
            <summary>DevExpress.Charts.Native.BezierCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierCalculator.InitializeStub">
            <summary>初始化 type StubBezierCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip">
            <summary>DevExpress.Charts.Native.BezierRangeStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CompleteFilling">
            <summary>设置 BezierRangeStrip.CompleteFilling() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CompleteFilling01">
            <summary>设置 BezierRangeStrip.CompleteFilling() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CreateBorderStrip">
            <summary>设置 BezierRangeStrip.CreateBorderStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CreateBorderStrip01">
            <summary>设置 BezierRangeStrip.CreateBorderStrip() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CreateInstance">
            <summary>设置 BezierRangeStrip.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.CreateInstance01">
            <summary>设置 BezierRangeStrip.CreateInstance() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.InitializeStub">
            <summary>初始化 type StubBezierRangeStrip 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierRangeStrip.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBezierStrip">
            <summary>DevExpress.Charts.Native.BezierStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.#ctor(System.Double,DevExpress.Charts.Native.ITransformation,DevExpress.Charts.Native.ITransformation)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierStrip.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.CompleteFilling">
            <summary>设置 BezierStrip.CompleteFilling() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.CompleteFilling01">
            <summary>设置 BezierStrip.CompleteFilling() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.CreateInstance">
            <summary>设置 BezierStrip.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.CreateInstance01">
            <summary>设置 BezierStrip.CreateInstance() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.CreateUniqueStrip">
            <summary>设置 BezierStrip.CreateUniqueStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.CreateUniqueStrip01">
            <summary>设置 BezierStrip.CreateUniqueStrip() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.Extend(DevExpress.Charts.Native.GRealPoint2D,System.Boolean)">
            <summary>设置 BezierStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.ExtendGRealPoint2DBoolean">
            <summary>设置 BezierStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.ExtractSubStrip(System.Int32,System.Int32)">
            <summary>设置 BezierStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.ExtractSubStripInt32Int32">
            <summary>设置 BezierStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.InitializeStub">
            <summary>初始化 type StubBezierStrip 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierStrip.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBezierStrip.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBezierStrip.Substiture(System.Int32,System.Int32,DevExpress.Charts.Native.LineStrip)">
            <summary>设置 BezierStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubBezierStrip.SubstitureInt32Int32LineStrip">
            <summary>设置 BezierStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBindingProcedure">
            <summary>DevExpress.Charts.Native.BindingProcedure 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBindingProcedure.#ctor(DevExpress.Data.Browsing.DataContextBase,System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBindingProcedure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBindingProcedure.InitializeStub">
            <summary>初始化 type StubBindingProcedure 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBindingProcedure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBindingProcedure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator">
            <summary>DevExpress.Charts.Native.BollingerBandsCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator.InitializeStub">
            <summary>初始化 type StubBollingerBandsCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubBollingerBandsCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCell">
            <summary>DevExpress.Charts.Native.Cell 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCell.#ctor(DevExpress.Charts.Native.GRect2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCell.#ctor(DevExpress.Charts.Native.GRect2D,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCell.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCell.InitializeStub">
            <summary>初始化 type StubCell 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCell.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCell.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator">
            <summary>DevExpress.Charts.Native.ChaikinsVolatilityCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator.InitializeStub">
            <summary>初始化 type StubChaikinsVolatilityCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChaikinsVolatilityCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure">
            <summary>DevExpress.Charts.Native.ChartBindingProcedure 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.#ctor(DevExpress.Data.Browsing.DataContextBase,System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.Complete(DevExpress.Charts.Native.ISeries)">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.CompleteISeries">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.InitializeStub">
            <summary>初始化 type StubChartBindingProcedure 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.PerformPointBinding(DevExpress.Charts.Native.ISeriesTemplate,System.Object,System.Object,System.Collections.Generic.IList{System.String},System.String,DevExpress.Charts.Native.ISeries)">
            <summary>设置 ChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubChartBindingProcedure.PerformPointBindingISeriesTemplateObjectObjectIListOfStringStringISeries">
            <summary>设置 ChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase">
            <summary>DevExpress.Charts.Native.ChartUpdateInfoBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase.InitializeStub">
            <summary>初始化 type StubChartUpdateInfoBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubChartUpdateInfoBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCollectionManager">
            <summary>DevExpress.Charts.Native.CollectionManager 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionManager.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionManager.InitializeStub">
            <summary>初始化 type StubCollectionManager 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.CollectionUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,System.Int32,System.Int32,System.Object,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo.InitializeStub">
            <summary>初始化 type StubCollectionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1">
            <summary>DevExpress.Charts.Native.CollectionUpdateInfo`1 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,`0,System.Int32,`0,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1.InitializeStub">
            <summary>初始化 type StubCollectionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCollectionUpdateInfo`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator">
            <summary>DevExpress.Charts.Native.CommodityChannelIndexCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator.InitializeStub">
            <summary>初始化 type StubCommodityChannelIndexCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCommodityChannelIndexCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator">
            <summary>DevExpress.Charts.Native.CountAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 CountAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 CountAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.InitializeStub">
            <summary>初始化 type StubCountAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCountAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo">
            <summary>DevExpress.Charts.Native.CrosshairAxisInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo.#ctor(System.String,DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.GRealSize2D,DevExpress.Charts.Native.IAxisData,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo.InitializeStub">
            <summary>初始化 type StubCrosshairAxisInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairAxisInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter">
            <summary>DevExpress.Charts.Native.CrosshairGroupHeaderValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.DefaultValuePattern">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 CrosshairGroupHeaderValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.InitializeStub">
            <summary>初始化 type StubCrosshairGroupHeaderValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairGroupHeaderValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairInfoEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx.InitializeStub">
            <summary>初始化 type StubCrosshairInfoEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairInfoEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairLabelInfoEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx.#ctor(System.Collections.Generic.IList{DevExpress.Charts.Native.CrosshairPointsGroup},DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.AnnotationLocation,System.Boolean,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx.InitializeStub">
            <summary>初始化 type StubCrosshairLabelInfoEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLabelInfoEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairLine">
            <summary>DevExpress.Charts.Native.CrosshairLine 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairLine.#ctor(DevExpress.Charts.Native.GRealLine2D,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairLine.InitializeStub">
            <summary>初始化 type StubCrosshairLine 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairLine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairManager">
            <summary>DevExpress.Charts.Native.CrosshairManager 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairManager.#ctor(DevExpress.Charts.Native.IXYDiagram)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairManager.InitializeStub">
            <summary>初始化 type StubCrosshairManager 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx">
            <summary>DevExpress.Charts.Native.CrosshairPaneInfoEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx.#ctor(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.GRealRect2D,DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.PointProjectionsForPane)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx.InitializeStub">
            <summary>初始化 type StubCrosshairPaneInfoEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPaneInfoEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils">
            <summary>DevExpress.Charts.Native.CrosshairPatternUtils 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils.InitializeStub">
            <summary>初始化 type StubCrosshairPatternUtils 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairPatternUtils.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData">
            <summary>DevExpress.Charts.Native.CrosshairSeriesData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData.#ctor(DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.IRefinedSeries,System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData.InitializeStub">
            <summary>初始化 type StubCrosshairSeriesData 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx">
            <summary>DevExpress.Charts.Native.CrosshairSeriesPointEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.#ctor(DevExpress.Charts.Native.PointProjectionOnAxis,DevExpress.Charts.Native.PointProjectionOnAxis,DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.IRefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.#ctor(DevExpress.Charts.Native.PointProjectionOnAxis,DevExpress.Charts.Native.PointProjectionOnAxis,DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.IRefinedSeries,DevExpress.Charts.Native.PointPositionInSeries,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.InitializeStub">
            <summary>初始化 type StubCrosshairSeriesPointEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesPointEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx">
            <summary>DevExpress.Charts.Native.CrosshairSeriesTextEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx.#ctor(System.String,DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.IRefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx.InitializeStub">
            <summary>初始化 type StubCrosshairSeriesTextEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSeriesTextEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer">
            <summary>DevExpress.Charts.Native.CrosshairSortedPointsInfoComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer.InitializeStub">
            <summary>初始化 type StubCrosshairSortedPointsInfoComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCrosshairSortedPointsInfoComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubCustomDateCollection">
            <summary>DevExpress.Charts.Native.CustomDateCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCustomDateCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCustomDateCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubCustomDateCollection.InitializeStub">
            <summary>初始化 type StubCustomDateCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCustomDateCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubCustomDateCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate">
            <summary>DevExpress.Charts.Native.DataAggregationUpdate 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate.#ctor(DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate.InitializeStub">
            <summary>初始化 type StubDataAggregationUpdate 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDataAggregationUpdate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore">
            <summary>DevExpress.Charts.Native.DateTimeMeasureUnitsCalculatorCore 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.#ctor(DevExpress.Charts.Native.IAxisData,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.CreateUnitSelector">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CreateUnitSelector() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.CreateUnitSelector01">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.CreateUnitSelector() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.InitializeStub">
            <summary>初始化 type StubDateTimeMeasureUnitsCalculatorCore 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.ScaleOptions">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_ScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.ScaleOptionsGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_ScaleOptions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGrid(DevExpress.Charts.Native.DateTimeMeasureUnitNative,System.Double)">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGrid(DateTimeMeasureUnitNative measureUnit, Double pixelsPerUnit) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGridDateTimeMeasureUnitNativeDouble">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticGrid(DateTimeMeasureUnitNative measureUnit, Double pixelsPerUnit) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticMeasureUnit(System.Double,System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries})">
            <summary>设置 MeasureUnitsCalculatorBase`2.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticMeasureUnitDoubleIEnumerableOfISeries">
            <summary>设置 MeasureUnitsCalculatorBase`2.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnits(DevExpress.Charts.Native.DateTimeMeasureUnitNative,System.Int32)">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, Int32 pixelsPerUnit) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnitsDateTimeMeasureUnitNativeInt32">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, Int32 pixelsPerUnit) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UseMinMeasureUnit">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeMeasureUnitsCalculatorCore.UseMinMeasureUnitGet">
            <summary>设置 DateTimeMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector">
            <summary>DevExpress.Charts.Native.DateTimeUnitSelector 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.InitializeStub">
            <summary>初始化 type StubDateTimeUnitSelector 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.SelectAlignment(System.Double,System.Double)">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.SelectAlignmentDoubleDouble">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.UpdateActiveUnits(System.Double,System.Double)">
            <summary>设置 DateTimeUnitSelector.UpdateActiveUnits(Double min, Double max) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDateTimeUnitSelector.UpdateActiveUnitsDoubleDouble">
            <summary>设置 DateTimeUnitSelector.UpdateActiveUnits(Double min, Double max) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.DatetimeAxisRangeUpdateStrategy 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CalcSideMargin(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CheckInternalValue(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectInternalValue(DevExpress.Charts.Native.MinMaxValues,System.Double,System.Boolean,System.Boolean)">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectNativeValues(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectWithSideMargins(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.DefaultRange(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.InitializeStub">
            <summary>初始化 type StubDatetimeAxisRangeUpdateStrategy 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.NeedCorrect(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.UpdateVisualRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 DatetimeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.UpdateWholeRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubDatetimeAxisRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator">
            <summary>DevExpress.Charts.Native.DetrendedPriceOscillatorCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator.InitializeStub">
            <summary>初始化 type StubDetrendedPriceOscillatorCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubDetrendedPriceOscillatorCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.ExponentialMovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 ExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubExponentialMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator">
            <summary>DevExpress.Charts.Native.ExponentialRegressionCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator.InitializeStub">
            <summary>初始化 type StubExponentialRegressionCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubExponentialRegressionCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator">
            <summary>DevExpress.Charts.Native.FibonacciArcsCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator.InitializeStub">
            <summary>初始化 type StubFibonacciArcsCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciArcsCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFibonacciCircle">
            <summary>DevExpress.Charts.Native.FibonacciCircle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciCircle.#ctor(DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.GRealPoint2D,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciCircle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciCircle.InitializeStub">
            <summary>初始化 type StubFibonacciCircle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciCircle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciCircle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator">
            <summary>DevExpress.Charts.Native.FibonacciFansCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator.InitializeStub">
            <summary>初始化 type StubFibonacciFansCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciFansCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFibonacciLine">
            <summary>DevExpress.Charts.Native.FibonacciLine 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciLine.#ctor(System.Double,DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciLine.#ctor(System.Double,DevExpress.Charts.Native.GRealPoint2D,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciLine.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciLine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciLine.InitializeStub">
            <summary>初始化 type StubFibonacciLine 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciLine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciLine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator">
            <summary>DevExpress.Charts.Native.FibonacciRetracementCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator.InitializeStub">
            <summary>初始化 type StubFibonacciRetracementCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFibonacciRetracementCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator">
            <summary>DevExpress.Charts.Native.FinancialAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 FinancialAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 FinancialAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.InitializeStub">
            <summary>初始化 type StubFinancialAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator">
            <summary>DevExpress.Charts.Native.FinancialIndicatorCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator.InitializeStub">
            <summary>初始化 type StubFinancialIndicatorCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFinancialIndicatorCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer">
            <summary>DevExpress.Charts.Native.FullStackedInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.CreatePointInteraction(System.Int32,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 FullStackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 FullStackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.GetAbsMinValue">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.GetAbsMinValue01">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InitializeStub">
            <summary>初始化 type StubFullStackedInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.Max">
            <summary>设置 StackedInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.MaxGet">
            <summary>设置 StackedInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.Min">
            <summary>设置 StackedInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.MinGet">
            <summary>设置 StackedInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.Recalculate">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.Recalculate01">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction">
            <summary>DevExpress.Charts.Native.FullStackedPointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.#ctor(System.Collections.Generic.List{DevExpress.Charts.Native.RefinedSeries},System.Int32,DevExpress.Charts.Native.RefinedPoint)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.Argument">
            <summary>设置 StackedPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.ArgumentGet">
            <summary>设置 StackedPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.Count">
            <summary>设置 StackedPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.CountGet">
            <summary>设置 StackedPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMaxValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetMinValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetStackedPointMaxValue(System.Int32)">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetStackedPointMaxValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetStackedPointMinValue(System.Int32)">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.GetStackedPointMinValueInt32">
            <summary>设置 FullStackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.InitializeStub">
            <summary>初始化 type StubFullStackedPointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.IsEmpty">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.IsEmptyGet">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MaxValue">
            <summary>设置 FullStackedPointInteraction.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MaxValueGet">
            <summary>设置 FullStackedPointInteraction.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MinAbsValue">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MinAbsValueGet">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MinValue">
            <summary>设置 FullStackedPointInteraction.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFullStackedPointInteraction.MinValueGet">
            <summary>设置 FullStackedPointInteraction.get_MinValue() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator">
            <summary>DevExpress.Charts.Native.Funnel2DLayoutCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator.#ctor(DevExpress.Charts.Native.GRealSize2D,System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator.InitializeStub">
            <summary>初始化 type StubFunnel2DLayoutCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnel2DLayoutCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo">
            <summary>DevExpress.Charts.Native.FunnelLableInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo.#ctor(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.GRealSize2D,DevExpress.Charts.Native.FunnelPointInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo.InitializeStub">
            <summary>初始化 type StubFunnelLableInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelLableInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.FunnelNormalizedValuesCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.CalculateNormValues">
            <summary>设置 FunnelNormalizedValuesCalculator.CalculateNormValues() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.CalculateNormValues01">
            <summary>设置 FunnelNormalizedValuesCalculator.CalculateNormValues() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.InitializeStub">
            <summary>初始化 type StubFunnelNormalizedValuesCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelNormalizedValuesCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo">
            <summary>DevExpress.Charts.Native.FunnelPointInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo.InitializeStub">
            <summary>初始化 type StubFunnelPointInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider">
            <summary>DevExpress.Charts.Native.FunnelPointPatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.CheckContextObject">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.GetPercentValue">
            <summary>设置 FunnelPointPatternDataProvider.GetPercentValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.GetPercentValue01">
            <summary>设置 FunnelPointPatternDataProvider.GetPercentValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.GetValue">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.GetValue01">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.InitializeStub">
            <summary>初始化 type StubFunnelPointPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubFunnelPointPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGPolygon2D">
            <summary>DevExpress.Charts.Native.GPolygon2D 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGPolygon2D.#ctor(DevExpress.Charts.Native.GRealPoint2D[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGPolygon2D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGPolygon2D.InitializeStub">
            <summary>初始化 type StubGPolygon2D 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGPolygon2D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGPolygon2D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGRealEllipse">
            <summary>DevExpress.Charts.Native.GRealEllipse 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGRealEllipse.#ctor(DevExpress.Charts.Native.GRealRect2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGRealEllipse.#ctor(DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGRealEllipse.#ctor(DevExpress.Charts.Native.GRealPoint2D,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGRealEllipse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGRealEllipse.InitializeStub">
            <summary>初始化 type StubGRealEllipse 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGRealEllipse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGRealEllipse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGeometryCalculator">
            <summary>DevExpress.Charts.Native.GeometryCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryCalculator.InitializeStub">
            <summary>初始化 type StubGeometryCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator">
            <summary>DevExpress.Charts.Native.GeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 GeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 GeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.Closed">
            <summary>设置 GeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.ClosedGet">
            <summary>设置 GeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.CreateStrip">
            <summary>设置 GeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.CreateStrip01">
            <summary>设置 GeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 GeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 GeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx">
            <summary>DevExpress.Charts.Native.GridAndTextDataEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx.#ctor(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries},DevExpress.Charts.Native.IAxisData,System.Boolean,DevExpress.Charts.Native.IMinMaxValues,System.Double,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx.InitializeStub">
            <summary>初始化 type StubGridAndTextDataEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridAndTextDataEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator">
            <summary>DevExpress.Charts.Native.GridSpacingCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator.InitializeStub">
            <summary>初始化 type StubGridSpacingCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubGridSpacingCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubHorizontalStep">
            <summary>DevExpress.Charts.Native.HorizontalStep 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 HorizontalStep.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 HorizontalStep.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 HorizontalStep.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.CalcNearPositionCell">
            <summary>设置 HorizontalStep.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubHorizontalStep.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubHorizontalStep.Increment">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.IncrementGet">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.InitializeStub">
            <summary>初始化 type StubHorizontalStep 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubHorizontalStep.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubHorizontalStep.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.IsEndPosition(System.Int32)">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.IsEndPositionInt32">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.UpdatePrimaryTestPositions">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.UpdatePrimaryTestPositions01">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubHorizontalStep.UpdateSecondaryTestPositions">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubHorizontalStep.UpdateSecondaryTestPositions01">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange">
            <summary>DevExpress.Charts.Native.IAffectsAxisRange 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange.#ctor">
            <summary>初始化 type StubIAffectsAxisRange 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange.DevExpress#Charts#Native#IAffectsAxisRange#AxisYData">
            <summary>设置 IAffectsAxisRange.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange.AxisYDataGet">
            <summary>设置 IAffectsAxisRange.get_AxisYData() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange.DevExpress#Charts#Native#IAffectsAxisRange#GetMinMaxValues(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IAffectsAxisRange.GetMinMaxValues(IMinMaxValues visualRangeOfOtherAxisForFiltering) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAffectsAxisRange.GetMinMaxValuesIMinMaxValues">
            <summary>设置 IAffectsAxisRange.GetMinMaxValues(IMinMaxValues visualRangeOfOtherAxisForFiltering) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout">
            <summary>DevExpress.Charts.Native.IAnnotationLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.#ctor">
            <summary>初始化 type StubIAnnotationLayout 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#AnchorPoint">
            <summary>设置 IAnnotationLayout.get_AnchorPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.AnchorPointGet">
            <summary>设置 IAnnotationLayout.get_AnchorPoint() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.AttachBackingFieldToBounds">
            <summary>附加委托以将 StubIAnnotationLayout.Bounds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.AttachBackingFieldToLocation">
            <summary>附加委托以将 StubIAnnotationLayout.Location 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.AttachBackingFieldToOffset">
            <summary>附加委托以将 StubIAnnotationLayout.Offset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#Bounds">
            <summary>设置 IAnnotationLayout.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.BoundsGet">
            <summary>设置 IAnnotationLayout.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.BoundsSetGRealRect2D">
            <summary>设置 IAnnotationLayout.set_Bounds(GRealRect2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#CursorOffset">
            <summary>设置 IAnnotationLayout.get_CursorOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.CursorOffsetGet">
            <summary>设置 IAnnotationLayout.get_CursorOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#InitOffset">
            <summary>设置 IAnnotationLayout.get_InitOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.InitOffsetGet">
            <summary>设置 IAnnotationLayout.get_InitOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#Location">
            <summary>设置 IAnnotationLayout.get_Location() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.LocationGet">
            <summary>设置 IAnnotationLayout.get_Location() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.LocationSetAnnotationLocation">
            <summary>设置 IAnnotationLayout.set_Location(AnnotationLocation value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#Offset">
            <summary>设置 IAnnotationLayout.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.OffsetGet">
            <summary>设置 IAnnotationLayout.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.OffsetSetGRealPoint2D">
            <summary>设置 IAnnotationLayout.set_Offset(GRealPoint2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#ShowTail">
            <summary>设置 IAnnotationLayout.get_ShowTail() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.ShowTailGet">
            <summary>设置 IAnnotationLayout.get_ShowTail() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.DevExpress#Charts#Native#IAnnotationLayout#Size">
            <summary>设置 IAnnotationLayout.get_Size() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAnnotationLayout.SizeGet">
            <summary>设置 IAnnotationLayout.get_Size() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIArgumentPoint">
            <summary>DevExpress.Charts.Native.IArgumentPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.#ctor">
            <summary>初始化 type StubIArgumentPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIArgumentPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIArgumentPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer">
            <summary>DevExpress.Charts.Native.IAutoScaleBreaksContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer.#ctor">
            <summary>初始化 type StubIAutoScaleBreaksContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer.DevExpress#Charts#Native#IAutoScaleBreaksContainer#UpdateScaleBreaks(System.Collections.Generic.IList{DevExpress.Charts.Native.IRefinedSeries})">
            <summary>设置 IAutoScaleBreaksContainer.UpdateScaleBreaks(IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer.DevExpress#Charts#Native#IAutoScaleBreaksContainer#Enabled">
            <summary>设置 IAutoScaleBreaksContainer.get_Enabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer.EnabledGet">
            <summary>设置 IAutoScaleBreaksContainer.get_Enabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAutoScaleBreaksContainer.UpdateScaleBreaksIListOfIRefinedSeries">
            <summary>设置 IAutoScaleBreaksContainer.UpdateScaleBreaks(IList`1&lt;IRefinedSeries&gt; refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisData">
            <summary>DevExpress.Charts.Native.IAxisData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.#ctor">
            <summary>初始化 type StubIAxisData 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.AttachBackingFieldToAxisScaleTypeMap">
            <summary>附加委托以将 StubIAxisData.AxisScaleTypeMap 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.AttachBackingFieldToLabelFormatter">
            <summary>附加委托以将 StubIAxisData.LabelFormatter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#AxisScaleTypeMap">
            <summary>设置 IAxisData.get_AxisScaleTypeMap() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.AxisScaleTypeMapGet">
            <summary>设置 IAxisData.get_AxisScaleTypeMap() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.AxisScaleTypeMapSetAxisScaleTypeMap">
            <summary>设置 IAxisData.set_AxisScaleTypeMap(AxisScaleTypeMap value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#AxisVisibilityInPanes">
            <summary>设置 IAxisData.get_AxisVisibilityInPanes() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.AxisVisibilityInPanesGet">
            <summary>设置 IAxisData.get_AxisVisibilityInPanes() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.CalculateRangeLimitsListDoubleDouble">
            <summary>设置 IAxisData.CalculateRangeLimitsList(Double min, Double max) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#CanShowCustomWithAutoLabels">
            <summary>设置 IAxisData.get_CanShowCustomWithAutoLabels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.CanShowCustomWithAutoLabelsGet">
            <summary>设置 IAxisData.get_CanShowCustomWithAutoLabels() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisElementContainer#ConstantLines">
            <summary>设置 IAxisElementContainer.get_ConstantLines() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ConstantLinesGet">
            <summary>设置 IAxisElementContainer.get_ConstantLines() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisElementContainer#CustomLabels">
            <summary>设置 IAxisElementContainer.get_CustomLabels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.CustomLabelsGet">
            <summary>设置 IAxisElementContainer.get_CustomLabels() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#DateTimeScaleOptions">
            <summary>设置 IAxisData.get_DateTimeScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.DateTimeScaleOptionsGet">
            <summary>设置 IAxisData.get_DateTimeScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.Deserialize">
            <summary>设置 IAxisData.Deserialize() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#CalculateRangeLimitsList(System.Double,System.Double)">
            <summary>设置 IAxisData.CalculateRangeLimitsList(Double min, Double max) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Deserialize">
            <summary>设置 IAxisData.Deserialize() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#GetLabelBounds(DevExpress.Charts.Native.IPane)">
            <summary>设置 IAxisData.GetLabelBounds(IPane pane) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IncreaseRange(DevExpress.Charts.Native.RangeValue,System.Boolean)">
            <summary>设置 IAxisData.IncreaseRange(RangeValue range, Boolean applySideMargins) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#UpdateAutoMeasureUnit">
            <summary>设置 IAxisData.UpdateAutoMeasureUnit() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#UpdateUserValues">
            <summary>设置 IAxisData.UpdateUserValues() 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#FixedRange">
            <summary>设置 IAxisData.get_FixedRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.FixedRangeGet">
            <summary>设置 IAxisData.get_FixedRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.GetLabelBoundsIPane">
            <summary>设置 IAxisData.GetLabelBounds(IPane pane) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#GridMapping">
            <summary>设置 IAxisData.get_GridMapping() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.GridMappingGet">
            <summary>设置 IAxisData.get_GridMapping() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#GridSpacingFactor">
            <summary>设置 IAxisData.get_GridSpacingFactor() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.GridSpacingFactorGet">
            <summary>设置 IAxisData.get_GridSpacingFactor() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IncreaseRangeRangeValueBoolean">
            <summary>设置 IAxisData.IncreaseRange(RangeValue range, Boolean applySideMargins) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Interlaced">
            <summary>设置 IAxisData.get_Interlaced() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.InterlacedGet">
            <summary>设置 IAxisData.get_Interlaced() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IsArgumentAxis">
            <summary>设置 IAxisData.get_IsArgumentAxis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IsArgumentAxisGet">
            <summary>设置 IAxisData.get_IsArgumentAxis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IsDisposed">
            <summary>设置 IAxisData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IsDisposedGet">
            <summary>设置 IAxisData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IsRadarAxis">
            <summary>设置 IAxisData.get_IsRadarAxis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IsRadarAxisGet">
            <summary>设置 IAxisData.get_IsRadarAxis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IsValueAxis">
            <summary>设置 IAxisData.get_IsValueAxis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IsValueAxisGet">
            <summary>设置 IAxisData.get_IsValueAxis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#IsVertical">
            <summary>设置 IAxisData.get_IsVertical() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.IsVerticalGet">
            <summary>设置 IAxisData.get_IsVertical() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Label">
            <summary>设置 IAxisData.get_Label() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#LabelFormatter">
            <summary>设置 IAxisData.get_LabelFormatter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.LabelFormatterGet">
            <summary>设置 IAxisData.get_LabelFormatter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.LabelFormatterSetIAxisLabelFormatterCore">
            <summary>设置 IAxisData.set_LabelFormatter(IAxisLabelFormatterCore value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.LabelGet">
            <summary>设置 IAxisData.get_Label() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#MinorCount">
            <summary>设置 IAxisData.get_MinorCount() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.MinorCountGet">
            <summary>设置 IAxisData.get_MinorCount() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#NumericScaleOptions">
            <summary>设置 IAxisData.get_NumericScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.NumericScaleOptionsGet">
            <summary>设置 IAxisData.get_NumericScaleOptions() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#QualitativeScaleComparer">
            <summary>设置 IAxisData.get_QualitativeScaleComparer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.QualitativeScaleComparerGet">
            <summary>设置 IAxisData.get_QualitativeScaleComparer() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#QualitativeScaleOptions">
            <summary>设置 IAxisData.get_QualitativeScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.QualitativeScaleOptionsGet">
            <summary>设置 IAxisData.get_QualitativeScaleOptions() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Range">
            <summary>设置 IAxisData.get_Range() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.RangeGet">
            <summary>设置 IAxisData.get_Range() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Reverse">
            <summary>设置 IAxisData.get_Reverse() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ReverseGet">
            <summary>设置 IAxisData.get_Reverse() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisElementContainer#ScaleBreaks">
            <summary>设置 IAxisElementContainer.get_ScaleBreaks() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ScaleBreaksGet">
            <summary>设置 IAxisElementContainer.get_ScaleBreaks() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ScrollingRange">
            <summary>设置 IAxisData.get_ScrollingRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ScrollingRangeGet">
            <summary>设置 IAxisData.get_ScrollingRange() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ShowLabels">
            <summary>设置 IAxisData.get_ShowLabels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ShowLabelsGet">
            <summary>设置 IAxisData.get_ShowLabels() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ShowMajorGridlines">
            <summary>设置 IAxisData.get_ShowMajorGridlines() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ShowMajorGridlinesGet">
            <summary>设置 IAxisData.get_ShowMajorGridlines() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ShowMajorTickmarks">
            <summary>设置 IAxisData.get_ShowMajorTickmarks() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ShowMajorTickmarksGet">
            <summary>设置 IAxisData.get_ShowMajorTickmarks() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ShowMinorGridlines">
            <summary>设置 IAxisData.get_ShowMinorGridlines() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ShowMinorGridlinesGet">
            <summary>设置 IAxisData.get_ShowMinorGridlines() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#ShowMinorTickmarks">
            <summary>设置 IAxisData.get_ShowMinorTickmarks() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.ShowMinorTickmarksGet">
            <summary>设置 IAxisData.get_ShowMinorTickmarks() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisElementContainer#Strips">
            <summary>设置 IAxisElementContainer.get_Strips() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.StripsGet">
            <summary>设置 IAxisElementContainer.get_Strips() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#Title">
            <summary>设置 IAxisData.get_Title() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.TitleGet">
            <summary>设置 IAxisData.get_Title() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.UpdateAutoMeasureUnit">
            <summary>设置 IAxisData.UpdateAutoMeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.UpdateUserValues">
            <summary>设置 IAxisData.UpdateUserValues() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#VisualRange">
            <summary>设置 IAxisData.get_VisualRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.VisualRangeGet">
            <summary>设置 IAxisData.get_VisualRange() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisData.DevExpress#Charts#Native#IAxisData#WholeRange">
            <summary>设置 IAxisData.get_WholeRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisData.WholeRangeGet">
            <summary>设置 IAxisData.get_WholeRange() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer">
            <summary>DevExpress.Charts.Native.IAxisElementContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.#ctor">
            <summary>初始化 type StubIAxisElementContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.DevExpress#Charts#Native#IAxisElementContainer#ConstantLines">
            <summary>设置 IAxisElementContainer.get_ConstantLines() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.ConstantLinesGet">
            <summary>设置 IAxisElementContainer.get_ConstantLines() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.DevExpress#Charts#Native#IAxisElementContainer#CustomLabels">
            <summary>设置 IAxisElementContainer.get_CustomLabels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.CustomLabelsGet">
            <summary>设置 IAxisElementContainer.get_CustomLabels() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.DevExpress#Charts#Native#IAxisElementContainer#ScaleBreaks">
            <summary>设置 IAxisElementContainer.get_ScaleBreaks() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.ScaleBreaksGet">
            <summary>设置 IAxisElementContainer.get_ScaleBreaks() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.DevExpress#Charts#Native#IAxisElementContainer#Strips">
            <summary>设置 IAxisElementContainer.get_Strips() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisElementContainer.StripsGet">
            <summary>设置 IAxisElementContainer.get_Strips() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping">
            <summary>DevExpress.Charts.Native.IAxisGridMapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.#ctor">
            <summary>初始化 type StubIAxisGridMapping 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.AlignedToInternalDouble">
            <summary>设置 IAxisGridMapping.AlignedToInternal(Double alignedValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#AlignedToInternal(System.Double)">
            <summary>设置 IAxisGridMapping.AlignedToInternal(Double alignedValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#InternalToAligned(System.Double)">
            <summary>设置 IAxisGridMapping.InternalToAligned(Double internalValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#InternalToNative(System.Double)">
            <summary>设置 IAxisGridMapping.InternalToNative(Double alignedValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#IsCompatible(System.Object)">
            <summary>设置 IAxisGridMapping.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#NativeToInternal(System.Object)">
            <summary>设置 IAxisGridMapping.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.InternalToAlignedDouble">
            <summary>设置 IAxisGridMapping.InternalToAligned(Double internalValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.InternalToNativeDouble">
            <summary>设置 IAxisGridMapping.InternalToNative(Double alignedValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.IsCompatibleObject">
            <summary>设置 IAxisGridMapping.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.NativeToInternalObject">
            <summary>设置 IAxisGridMapping.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#Offset">
            <summary>设置 IAxisGridMapping.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.OffsetGet">
            <summary>设置 IAxisGridMapping.get_Offset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.DevExpress#Charts#Native#IAxisGridMapping#Transformation">
            <summary>设置 IAxisGridMapping.get_Transformation() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisGridMapping.TransformationGet">
            <summary>设置 IAxisGridMapping.get_Transformation() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisLabel">
            <summary>DevExpress.Charts.Native.IAxisLabel 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabel.#ctor">
            <summary>初始化 type StubIAxisLabel 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabel.DevExpress#Charts#Native#IAxisLabel#Angle">
            <summary>设置 IAxisLabel.get_Angle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.AngleGet">
            <summary>设置 IAxisLabel.get_Angle() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabel.AttachBackingFieldToFormatter">
            <summary>附加委托以将 StubIAxisLabel.Formatter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabel.DevExpress#Charts#Native#IAxisLabel#Formatter">
            <summary>设置 IAxisLabel.get_Formatter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.FormatterGet">
            <summary>设置 IAxisLabel.get_Formatter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.FormatterSetIAxisLabelFormatterCore">
            <summary>设置 IAxisLabel.set_Formatter(IAxisLabelFormatterCore value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabel.DevExpress#Charts#Native#IAxisLabel#ResolveOverlappingOptions">
            <summary>设置 IAxisLabel.get_ResolveOverlappingOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.ResolveOverlappingOptionsGet">
            <summary>设置 IAxisLabel.get_ResolveOverlappingOptions() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabel.DevExpress#Charts#Native#IAxisLabel#Staggered">
            <summary>设置 IAxisLabel.get_Staggered() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.StaggeredGet">
            <summary>设置 IAxisLabel.get_Staggered() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabel.DevExpress#Charts#Native#IAxisLabel#TextPattern">
            <summary>设置 IAxisLabel.get_TextPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabel.TextPatternGet">
            <summary>设置 IAxisLabel.get_TextPattern() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisLabelFormatterCore">
            <summary>DevExpress.Charts.Native.IAxisLabelFormatterCore 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelFormatterCore.#ctor">
            <summary>初始化 type StubIAxisLabelFormatterCore 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelFormatterCore.DevExpress#Charts#Native#IAxisLabelFormatterCore#GetAxisLabelText(System.Object)">
            <summary>设置 IAxisLabelFormatterCore.GetAxisLabelText(Object axisValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelFormatterCore.GetAxisLabelTextObject">
            <summary>设置 IAxisLabelFormatterCore.GetAxisLabelText(Object axisValue) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout">
            <summary>DevExpress.Charts.Native.IAxisLabelLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.#ctor">
            <summary>初始化 type StubIAxisLabelLayout 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Angle">
            <summary>设置 IAxisLabelLayout.get_Angle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AngleGet">
            <summary>设置 IAxisLabelLayout.get_Angle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AngleSetDouble">
            <summary>设置 IAxisLabelLayout.set_Angle(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AttachBackingFieldToAngle">
            <summary>附加委托以将 StubIAxisLabelLayout.Angle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AttachBackingFieldToLimitsOffset">
            <summary>附加委托以将 StubIAxisLabelLayout.LimitsOffset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AttachBackingFieldToOffset">
            <summary>附加委托以将 StubIAxisLabelLayout.Offset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubIAxisLabelLayout.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Bounds">
            <summary>设置 IAxisLabelLayout.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.BoundsGet">
            <summary>设置 IAxisLabelLayout.get_Bounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#GridIndex">
            <summary>设置 IAxisLabelLayout.get_GridIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.GridIndexGet">
            <summary>设置 IAxisLabelLayout.get_GridIndex() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#IsCustomLabel">
            <summary>设置 IAxisLabelLayout.get_IsCustomLabel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.IsCustomLabelGet">
            <summary>设置 IAxisLabelLayout.get_IsCustomLabel() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#LimitsOffset">
            <summary>设置 IAxisLabelLayout.get_LimitsOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.LimitsOffsetGet">
            <summary>设置 IAxisLabelLayout.get_LimitsOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.LimitsOffsetSetGRealPoint2D">
            <summary>设置 IAxisLabelLayout.set_LimitsOffset(GRealPoint2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Offset">
            <summary>设置 IAxisLabelLayout.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.OffsetGet">
            <summary>设置 IAxisLabelLayout.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.OffsetSetGRealPoint2D">
            <summary>设置 IAxisLabelLayout.set_Offset(GRealPoint2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Pivot">
            <summary>设置 IAxisLabelLayout.get_Pivot() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.PivotGet">
            <summary>设置 IAxisLabelLayout.get_Pivot() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Size">
            <summary>设置 IAxisLabelLayout.get_Size() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.SizeGet">
            <summary>设置 IAxisLabelLayout.get_Size() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Text">
            <summary>设置 IAxisLabelLayout.get_Text() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.TextGet">
            <summary>设置 IAxisLabelLayout.get_Text() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.DevExpress#Charts#Native#IAxisLabelLayout#Visible">
            <summary>设置 IAxisLabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.VisibleGet">
            <summary>设置 IAxisLabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelLayout.VisibleSetBoolean">
            <summary>设置 IAxisLabelLayout.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions">
            <summary>DevExpress.Charts.Native.IAxisLabelResolveOverlappingOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.#ctor">
            <summary>初始化 type StubIAxisLabelResolveOverlappingOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.DevExpress#Charts#Native#IAxisLabelResolveOverlappingOptions#AllowHide">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowHide() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.AllowHideGet">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowHide() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.DevExpress#Charts#Native#IAxisLabelResolveOverlappingOptions#AllowRotate">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowRotate() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.AllowRotateGet">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowRotate() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.DevExpress#Charts#Native#IAxisLabelResolveOverlappingOptions#AllowStagger">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowStagger() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.AllowStaggerGet">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_AllowStagger() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.DevExpress#Charts#Native#IAxisLabelResolveOverlappingOptions#MinIndent">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_MinIndent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisLabelResolveOverlappingOptions.MinIndentGet">
            <summary>设置 IAxisLabelResolveOverlappingOptions.get_MinIndent() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisRange">
            <summary>DevExpress.Charts.Native.IAxisRange 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRange.#ctor">
            <summary>初始化 type StubIAxisRange 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.AssignIAxisRange">
            <summary>设置 IAxisRange.Assign(IAxisRange source) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.AssignIAxisRangeData">
            <summary>设置 IAxisRange.Assign(IAxisRangeData source) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.Clone">
            <summary>设置 ICloneable.Clone() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#Assign(DevExpress.Charts.Native.IAxisRange)">
            <summary>设置 IAxisRange.Assign(IAxisRange source) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#Assign(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 IAxisRange.Assign(IAxisRangeData source) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#UpdateRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>设置 IAxisRange.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#MaxValue">
            <summary>设置 IAxisRange.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.MaxValueGet">
            <summary>设置 IAxisRange.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#MaxValueInternal">
            <summary>设置 IAxisRange.get_MaxValueInternal() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.MaxValueInternalGet">
            <summary>设置 IAxisRange.get_MaxValueInternal() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#MinValue">
            <summary>设置 IAxisRange.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.MinValueGet">
            <summary>设置 IAxisRange.get_MinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRange.DevExpress#Charts#Native#IAxisRange#MinValueInternal">
            <summary>设置 IAxisRange.get_MinValueInternal() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.MinValueInternalGet">
            <summary>设置 IAxisRange.get_MinValueInternal() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRange.System#ICloneable#Clone">
            <summary>设置 ICloneable.Clone() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRange.UpdateRangeObjectObjectDoubleDouble">
            <summary>设置 IAxisRange.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisRangeData">
            <summary>DevExpress.Charts.Native.IAxisRangeData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.#ctor">
            <summary>初始化 type StubIAxisRangeData 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AlwaysShowZeroLevel">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AlwaysShowZeroLevelGet">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AlwaysShowZeroLevelSetBoolean">
            <summary>设置 IAxisRangeData.set_AlwaysShowZeroLevel(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.ApplyStateRangeSnapshot">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToAlwaysShowZeroLevel">
            <summary>附加委托以将 StubIAxisRangeData.AlwaysShowZeroLevel 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToAutoCorrectMax">
            <summary>附加委托以将 StubIAxisRangeData.AutoCorrectMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToAutoCorrectMin">
            <summary>附加委托以将 StubIAxisRangeData.AutoCorrectMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToAutoSideMargins">
            <summary>附加委托以将 StubIAxisRangeData.AutoSideMargins 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToCorrectionMode">
            <summary>附加委托以将 StubIAxisRangeData.CorrectionMode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToMax">
            <summary>附加委托以将 StubIAxisRangeData.Max 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToMaxValue">
            <summary>附加委托以将 StubIAxisRangeData.MaxValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToMin">
            <summary>附加委托以将 StubIAxisRangeData.Min 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToMinValue">
            <summary>附加委托以将 StubIAxisRangeData.MinValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToRefinedMax">
            <summary>附加委托以将 StubIAxisRangeData.RefinedMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToRefinedMin">
            <summary>附加委托以将 StubIAxisRangeData.RefinedMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToSideMarginsMax">
            <summary>附加委托以将 StubIAxisRangeData.SideMarginsMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToSideMarginsMin">
            <summary>附加委托以将 StubIAxisRangeData.SideMarginsMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AttachBackingFieldToSideMarginsValue">
            <summary>附加委托以将 StubIAxisRangeData.SideMarginsValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Auto">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMax">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoCorrectMaxGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoCorrectMaxSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMax(Boolean value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMin">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoCorrectMinGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoCorrectMinSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMin(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoGet">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoSideMargins">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoSideMarginsGet">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.AutoSideMarginsSetSideMarginMode">
            <summary>设置 IAxisRangeData.set_AutoSideMargins(SideMarginMode value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.ContainsDouble">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#CorrectionMode">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.CorrectionModeGet">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.CorrectionModeSetRangeCorrectionMode">
            <summary>设置 IAxisRangeData.set_CorrectionMode(RangeCorrectionMode value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Delta">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DeltaGet">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#ApplyState(DevExpress.Charts.Native.RangeSnapshot)">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Contains(System.Double)">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Reset(System.Boolean)">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#UpdateRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Intersection(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.IntersectionIMinMaxValues">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Max">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MaxGet">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MaxSetDouble">
            <summary>设置 IMinMaxValues.set_Max(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MaxValue">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MaxValueGet">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MaxValueSetObject">
            <summary>设置 IAxisRangeData.set_MaxValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Min">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MinGet">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MinSetDouble">
            <summary>设置 IMinMaxValues.set_Min(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MinValue">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MinValueGet">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.MinValueSetObject">
            <summary>设置 IAxisRangeData.set_MinValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMax">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.RefinedMaxGet">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.RefinedMaxSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMin">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.RefinedMinGet">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.RefinedMinSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMin(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.ResetBoolean">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMax">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsMaxGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsMaxSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMin">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsMinGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsMinSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMin(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsValue">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsValueGet">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.SideMarginsValueSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsValue(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisRangeData.UpdateRangeObjectObjectDoubleDouble">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisTitle">
            <summary>DevExpress.Charts.Native.IAxisTitle 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisTitle.#ctor">
            <summary>初始化 type StubIAxisTitle 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisTitle.DevExpress#Charts#Native#IAxisTitle#Content">
            <summary>设置 IAxisTitle.get_Content() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisTitle.ContentGet">
            <summary>设置 IAxisTitle.get_Content() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer">
            <summary>DevExpress.Charts.Native.IAxisValueContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.#ctor">
            <summary>初始化 type StubIAxisValueContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#Axis">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.AxisGet">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#Culture">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.CultureGet">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#SetAxisValue(System.Object)">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#SetValue(System.Double)">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.DevExpress#Charts#Native#IAxisValueContainer#IsEnabled">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.IsEnabledGet">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.SetAxisValueObject">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIAxisValueContainer.SetValueDouble">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIBarSeriesView">
            <summary>DevExpress.Charts.Native.IBarSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBarSeriesView.#ctor">
            <summary>初始化 type StubIBarSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBarSeriesView.AttachBackingFieldToBarWidth">
            <summary>附加委托以将 StubIBarSeriesView.BarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIBarSeriesView.DevExpress#Charts#Native#IBarSeriesView#BarWidth">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBarSeriesView.BarWidthGet">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBarSeriesView.BarWidthSetDouble">
            <summary>设置 IBarSeriesView.set_BarWidth(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIBasePoint">
            <summary>DevExpress.Charts.Native.IBasePoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBasePoint.#ctor">
            <summary>初始化 type StubIBasePoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIBasePoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBasePoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIBasePoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBasePoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIBasePoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBasePoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIBezierStrip">
            <summary>DevExpress.Charts.Native.IBezierStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBezierStrip.#ctor">
            <summary>初始化 type StubIBezierStrip 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBezierStrip.CalculateMinMaxArguments">
            <summary>设置 IBezierStrip.CalculateMinMaxArguments() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBezierStrip.CalculateMinMaxValues">
            <summary>设置 IBezierStrip.CalculateMinMaxValues() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBezierStrip.DevExpress#Charts#Native#IBezierStrip#CalculateMinMaxArguments">
            <summary>设置 IBezierStrip.CalculateMinMaxArguments() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBezierStrip.DevExpress#Charts#Native#IBezierStrip#CalculateMinMaxValues">
            <summary>设置 IBezierStrip.CalculateMinMaxValues() 的 存根</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIBoundsProvider">
            <summary>DevExpress.Charts.Native.IBoundsProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBoundsProvider.#ctor">
            <summary>初始化 type StubIBoundsProvider 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIBoundsProvider.DevExpress#Charts#Native#IBoundsProvider#GetBounds">
            <summary>设置 IBoundsProvider.GetBounds() 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIBoundsProvider.DevExpress#Charts#Native#IBoundsProvider#Enable">
            <summary>设置 IBoundsProvider.get_Enable() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBoundsProvider.EnableGet">
            <summary>设置 IBoundsProvider.get_Enable() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIBoundsProvider.GetBounds">
            <summary>设置 IBoundsProvider.GetBounds() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIChartDataContainer">
            <summary>DevExpress.Charts.Native.IChartDataContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.#ctor">
            <summary>初始化 type StubIChartDataContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.DevExpress#Charts#Native#IChartDataContainer#DesignMode">
            <summary>设置 IChartDataContainer.get_DesignMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.DesignModeGet">
            <summary>设置 IChartDataContainer.get_DesignMode() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.DevExpress#Charts#Native#IChartDataContainer#SeriesTemplate">
            <summary>设置 IChartDataContainer.get_SeriesTemplate() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.SeriesTemplateGet">
            <summary>设置 IChartDataContainer.get_SeriesTemplate() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.DevExpress#Charts#Native#IChartDataContainer#ShouldUseSeriesTemplate">
            <summary>设置 IChartDataContainer.get_ShouldUseSeriesTemplate() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIChartDataContainer.ShouldUseSeriesTemplateGet">
            <summary>设置 IChartDataContainer.get_ShouldUseSeriesTemplate() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIConstantLine">
            <summary>DevExpress.Charts.Native.IConstantLine 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIConstantLine.#ctor">
            <summary>初始化 type StubIConstantLine 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#Axis">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.AxisGet">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#Culture">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.CultureGet">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#SetAxisValue(System.Object)">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#SetValue(System.Double)">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IAxisValueContainer#IsEnabled">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.IsEnabledGet">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.SetAxisValueObject">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.SetValueDouble">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIConstantLine.DevExpress#Charts#Native#IConstantLine#Visible">
            <summary>设置 IConstantLine.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIConstantLine.VisibleGet">
            <summary>设置 IConstantLine.get_Visible() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubICoreReference">
            <summary>DevExpress.Charts.Native.ICoreReference 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICoreReference.#ctor">
            <summary>初始化 type StubICoreReference 的新实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubICrosshairAxis">
            <summary>DevExpress.Charts.Native.ICrosshairAxis 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.#ctor">
            <summary>初始化 type StubICrosshairAxis 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.DevExpress#Charts#Native#IPatternHolder#GetDataProvider(DevExpress.Charts.Native.PatternConstants)">
            <summary>设置 IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.GetDataProviderPatternConstants">
            <summary>设置 IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.DevExpress#Charts#Native#ICrosshairAxis#LabelPattern">
            <summary>设置 ICrosshairAxis.get_LabelPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.LabelPatternGet">
            <summary>设置 ICrosshairAxis.get_LabelPattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.DevExpress#Charts#Native#ICrosshairAxis#LabelVisible">
            <summary>设置 ICrosshairAxis.get_LabelVisible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.LabelVisibleGet">
            <summary>设置 ICrosshairAxis.get_LabelVisible() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.DevExpress#Charts#Native#IPatternHolder#PointPattern">
            <summary>设置 IPatternHolder.get_PointPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairAxis.PointPatternGet">
            <summary>设置 IPatternHolder.get_PointPattern() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition">
            <summary>DevExpress.Charts.Native.ICrosshairFreePosition 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.#ctor">
            <summary>初始化 type StubICrosshairFreePosition 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DevExpress#Charts#Native#ICrosshairFreePosition#DockBounds">
            <summary>设置 ICrosshairFreePosition.get_DockBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DockBoundsGet">
            <summary>设置 ICrosshairFreePosition.get_DockBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DevExpress#Charts#Native#ICrosshairFreePosition#DockCorner">
            <summary>设置 ICrosshairFreePosition.get_DockCorner() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DockCornerGet">
            <summary>设置 ICrosshairFreePosition.get_DockCorner() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DevExpress#Charts#Native#ICrosshairFreePosition#IsMousePosition">
            <summary>设置 ICrosshairFreePosition.get_IsMousePosition() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.IsMousePositionGet">
            <summary>设置 ICrosshairFreePosition.get_IsMousePosition() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.DevExpress#Charts#Native#ICrosshairFreePosition#Offset">
            <summary>设置 ICrosshairFreePosition.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairFreePosition.OffsetGet">
            <summary>设置 ICrosshairFreePosition.get_Offset() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubICrosshairOptions">
            <summary>DevExpress.Charts.Native.ICrosshairOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.#ctor">
            <summary>初始化 type StubICrosshairOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#GroupHeaderPattern">
            <summary>设置 ICrosshairOptions.get_GroupHeaderPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.GroupHeaderPatternGet">
            <summary>设置 ICrosshairOptions.get_GroupHeaderPattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#LabelMode">
            <summary>设置 ICrosshairOptions.get_LabelMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.LabelModeGet">
            <summary>设置 ICrosshairOptions.get_LabelMode() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#LabelPosition">
            <summary>设置 ICrosshairOptions.get_LabelPosition() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.LabelPositionGet">
            <summary>设置 ICrosshairOptions.get_LabelPosition() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#ShowArgumentLine">
            <summary>设置 ICrosshairOptions.get_ShowArgumentLine() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.ShowArgumentLineGet">
            <summary>设置 ICrosshairOptions.get_ShowArgumentLine() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#ShowGroupHeaders">
            <summary>设置 ICrosshairOptions.get_ShowGroupHeaders() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.ShowGroupHeadersGet">
            <summary>设置 ICrosshairOptions.get_ShowGroupHeaders() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#ShowOnlyInFocusedPane">
            <summary>设置 ICrosshairOptions.get_ShowOnlyInFocusedPane() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.ShowOnlyInFocusedPaneGet">
            <summary>设置 ICrosshairOptions.get_ShowOnlyInFocusedPane() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#ShowTail">
            <summary>设置 ICrosshairOptions.get_ShowTail() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.ShowTailGet">
            <summary>设置 ICrosshairOptions.get_ShowTail() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#ShowValueLine">
            <summary>设置 ICrosshairOptions.get_ShowValueLine() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.ShowValueLineGet">
            <summary>设置 ICrosshairOptions.get_ShowValueLine() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.DevExpress#Charts#Native#ICrosshairOptions#SnapMode">
            <summary>设置 ICrosshairOptions.get_SnapMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICrosshairOptions.SnapModeGet">
            <summary>设置 ICrosshairOptions.get_SnapMode() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel">
            <summary>DevExpress.Charts.Native.ICustomAxisLabel 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.#ctor">
            <summary>初始化 type StubICustomAxisLabel 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#Axis">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.AxisGet">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#ICustomAxisLabel#Content">
            <summary>设置 ICustomAxisLabel.get_Content() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.ContentGet">
            <summary>设置 ICustomAxisLabel.get_Content() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#Culture">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.CultureGet">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#SetAxisValue(System.Object)">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#SetValue(System.Double)">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#IAxisValueContainer#IsEnabled">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.IsEnabledGet">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.SetAxisValueObject">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.SetValueDouble">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.DevExpress#Charts#Native#ICustomAxisLabel#Visible">
            <summary>设置 ICustomAxisLabel.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubICustomAxisLabel.VisibleGet">
            <summary>设置 ICustomAxisLabel.get_Visible() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIDataFilter">
            <summary>DevExpress.Charts.Native.IDataFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDataFilter.#ctor">
            <summary>初始化 type StubIDataFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDataFilter.DevExpress#Charts#Native#IDataFilter#ColumnName">
            <summary>设置 IDataFilter.get_ColumnName() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDataFilter.ColumnNameGet">
            <summary>设置 IDataFilter.get_ColumnName() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDataFilter.DevExpress#Charts#Native#IDataFilter#Condition">
            <summary>设置 IDataFilter.get_Condition() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDataFilter.ConditionGet">
            <summary>设置 IDataFilter.get_Condition() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDataFilter.DevExpress#Charts#Native#IDataFilter#DataType">
            <summary>设置 IDataFilter.get_DataType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDataFilter.DataTypeGet">
            <summary>设置 IDataFilter.get_DataType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDataFilter.DevExpress#Charts#Native#IDataFilter#Required">
            <summary>设置 IDataFilter.get_Required() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDataFilter.RequiredGet">
            <summary>设置 IDataFilter.get_Required() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDataFilter.DevExpress#Charts#Native#IDataFilter#Value">
            <summary>设置 IDataFilter.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDataFilter.ValueGet">
            <summary>设置 IDataFilter.get_Value() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions">
            <summary>DevExpress.Charts.Native.IDateTimeOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.#ctor">
            <summary>初始化 type StubIDateTimeOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.DevExpress#Charts#Native#IDateTimeOptions#Format">
            <summary>设置 IDateTimeOptions.get_Format() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.FormatGet">
            <summary>设置 IDateTimeOptions.get_Format() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.DevExpress#Charts#Native#IDateTimeOptions#FormatString">
            <summary>设置 IDateTimeOptions.get_FormatString() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.FormatStringGet">
            <summary>设置 IDateTimeOptions.get_FormatString() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.DevExpress#Charts#Native#IDateTimeOptions#QuarterFormat">
            <summary>设置 IDateTimeOptions.get_QuarterFormat() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeOptions.QuarterFormatGet">
            <summary>设置 IDateTimeOptions.get_QuarterFormat() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions">
            <summary>DevExpress.Charts.Native.IDateTimeScaleOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.#ctor">
            <summary>初始化 type StubIDateTimeScaleOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#AggregateFunction">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.AggregateFunctionGet">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.AttachBackingFieldToGridSpacing">
            <summary>附加委托以将 StubIDateTimeScaleOptions.GridSpacing 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.CalculateCustomMeasureUnitIEnumerableOfISeriesDoubleInt32DoubleDoubleDoubleDouble">
            <summary>设置 IScaleOptionsBase`1.CalculateCustomMeasureUnit(IEnumerable`1&lt;ISeries&gt; series, Double axisLength, Int32 pixelsPerUnit, Double visualMin, Double visualMax, Double wholeMin, Double wholeMax) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IDateTimeScaleOptions#Calculator">
            <summary>设置 IDateTimeScaleOptions.get_Calculator() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.CalculatorGet">
            <summary>设置 IDateTimeScaleOptions.get_Calculator() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IDateTimeScaleOptions#UpdateAutomaticGrid(DevExpress.Charts.Native.DateTimeGridAlignmentNative,System.Double)">
            <summary>设置 IDateTimeScaleOptions.UpdateAutomaticGrid(DateTimeGridAlignmentNative gridAlignment, Double gridSpacing) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IDateTimeScaleOptions#UpdateAutomaticUnits(DevExpress.Charts.Native.DateTimeMeasureUnitNative,DevExpress.Charts.Native.DateTimeGridAlignmentNative,System.Double)">
            <summary>设置 IDateTimeScaleOptions.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, DateTimeGridAlignmentNative gridAlignment, Double spacing) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{DevExpress#Charts#Native#DateTimeMeasureUnitNative}#CalculateCustomMeasureUnit(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries},System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>设置 IScaleOptionsBase`1.CalculateCustomMeasureUnit(IEnumerable`1&lt;ISeries&gt; series, Double axisLength, Int32 pixelsPerUnit, Double visualMin, Double visualMax, Double wholeMin, Double wholeMax) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IDateTimeScaleOptions#GridAlignment">
            <summary>设置 IDateTimeScaleOptions.get_GridAlignment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.GridAlignmentGet">
            <summary>设置 IDateTimeScaleOptions.get_GridAlignment() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridOffset">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.GridOffsetGet">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacing">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacingAuto">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.GridSpacingAutoGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.GridSpacingGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.GridSpacingSetDouble">
            <summary>设置 IScaleOptionsBase.set_GridSpacing(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{DevExpress#Charts#Native#DateTimeMeasureUnitNative}#MeasureUnit">
            <summary>设置 IScaleOptionsBase`1.get_MeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.MeasureUnitGet">
            <summary>设置 IScaleOptionsBase`1.get_MeasureUnit() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#ProcessMissingPoints">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.ProcessMissingPointsGet">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#ScaleMode">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.ScaleModeGet">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.UpdateAutomaticGridDateTimeGridAlignmentNativeDouble">
            <summary>设置 IDateTimeScaleOptions.UpdateAutomaticGrid(DateTimeGridAlignmentNative gridAlignment, Double gridSpacing) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.UpdateAutomaticUnitsDateTimeMeasureUnitNativeDateTimeGridAlignmentNativeDouble">
            <summary>设置 IDateTimeScaleOptions.UpdateAutomaticUnits(DateTimeMeasureUnitNative measureUnit, DateTimeGridAlignmentNative gridAlignment, Double spacing) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{DevExpress#Charts#Native#DateTimeMeasureUnitNative}#UseCustomMeasureUnit">
            <summary>设置 IScaleOptionsBase`1.get_UseCustomMeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.UseCustomMeasureUnitGet">
            <summary>设置 IScaleOptionsBase`1.get_UseCustomMeasureUnit() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.DevExpress#Charts#Native#IDateTimeScaleOptions#WorkdaysOptions">
            <summary>设置 IDateTimeScaleOptions.get_WorkdaysOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDateTimeScaleOptions.WorkdaysOptionsGet">
            <summary>设置 IDateTimeScaleOptions.get_WorkdaysOptions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIDiagram">
            <summary>DevExpress.Charts.Native.IDiagram 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIDiagram.#ctor">
            <summary>初始化 type StubIDiagram 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIDiagram.DevExpress#Charts#Native#IDiagram#ChartBounds">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIDiagram.ChartBoundsGet">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIFinancialPoint">
            <summary>DevExpress.Charts.Native.IFinancialPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.#ctor">
            <summary>初始化 type StubIFinancialPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIFinancialPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.AttachBackingFieldToClose">
            <summary>附加委托以将 StubIFinancialPoint.Close 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.AttachBackingFieldToHigh">
            <summary>附加委托以将 StubIFinancialPoint.High 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.AttachBackingFieldToLow">
            <summary>附加委托以将 StubIFinancialPoint.Low 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.AttachBackingFieldToOpen">
            <summary>附加委托以将 StubIFinancialPoint.Open 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IFinancialPoint#Close">
            <summary>设置 IFinancialPoint.get_Close() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.CloseGet">
            <summary>设置 IFinancialPoint.get_Close() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.CloseSetDouble">
            <summary>设置 IFinancialPoint.set_Close(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IFinancialPoint#High">
            <summary>设置 IFinancialPoint.get_High() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.HighGet">
            <summary>设置 IFinancialPoint.get_High() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.HighSetDouble">
            <summary>设置 IFinancialPoint.set_High(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IFinancialPoint#Low">
            <summary>设置 IFinancialPoint.get_Low() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.LowGet">
            <summary>设置 IFinancialPoint.get_Low() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.LowSetDouble">
            <summary>设置 IFinancialPoint.set_Low(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IFinancialPoint#Open">
            <summary>设置 IFinancialPoint.get_Open() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.OpenGet">
            <summary>设置 IFinancialPoint.get_Open() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.OpenSetDouble">
            <summary>设置 IFinancialPoint.set_Open(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView">
            <summary>DevExpress.Charts.Native.IFinancialSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.#ctor">
            <summary>初始化 type StubIFinancialSeriesView 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.CalculateMinMaxPointRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#CompatibleViewType">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.CompatibleViewTypeGet">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#CalculateMinMaxPointRangeValues(DevExpress.Charts.Native.CrosshairSeriesPointEx,System.Double,System.Boolean,DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.CrosshairPaneInfoEx,DevExpress.Charts.Native.CrosshairSnapModeCore)">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GenerateRandomPoints(DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetMinMax(DevExpress.Charts.Native.IPointInteraction,System.Int32)">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointAbsMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMax(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMax(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMin(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#IsCorrectValueLevel(DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GenerateRandomPointsScaleScale">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetMinMaxIPointInteractionInt32">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetRefinedPointAbsMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetRefinedPointMaxRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetRefinedPointMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetRefinedPointsMaxIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.GetRefinedPointsMinIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#Is3DView">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.Is3DViewGet">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.IsCorrectValueLevelValueLevelInternal">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#NeedFilterVisiblePoints">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.NeedFilterVisiblePointsGet">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesGroupsInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.NeedSeriesGroupsInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.NeedSeriesInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#PointInterfaceType">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.PointInterfaceTypeGet">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.DevExpress#Charts#Native#ISeriesView#ShouldSortPoints">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFinancialSeriesView.ShouldSortPointsGet">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint">
            <summary>DevExpress.Charts.Native.IFullStackedPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.#ctor">
            <summary>初始化 type StubIFullStackedPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIFullStackedPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIFullStackedPoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IStackedPoint#MaxValue">
            <summary>设置 IStackedPoint.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.MaxValueGet">
            <summary>设置 IStackedPoint.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IStackedPoint#MinValue">
            <summary>设置 IStackedPoint.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.MinValueGet">
            <summary>设置 IStackedPoint.get_MinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IFullStackedPoint#NormalizedValue">
            <summary>设置 IFullStackedPoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.NormalizedValueGet">
            <summary>设置 IFullStackedPoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalMaxValue">
            <summary>设置 IStackedPoint.get_TotalMaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.TotalMaxValueGet">
            <summary>设置 IStackedPoint.get_TotalMaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalMinValue">
            <summary>设置 IStackedPoint.get_TotalMinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.TotalMinValueGet">
            <summary>设置 IStackedPoint.get_TotalMinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalValue">
            <summary>设置 IStackedPoint.get_TotalValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.TotalValueGet">
            <summary>设置 IStackedPoint.get_TotalValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFullStackedPoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout">
            <summary>DevExpress.Charts.Native.IFunnelLabelLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.#ctor">
            <summary>初始化 type StubIFunnelLabelLayout 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.AttachBackingFieldToLabelBounds">
            <summary>附加委托以将 StubIFunnelLabelLayout.LabelBounds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubIFunnelLabelLayout.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.DevExpress#Charts#Native#IFunnelLabelLayout#IsLeftColumn">
            <summary>设置 IFunnelLabelLayout.get_IsLeftColumn() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.IsLeftColumnGet">
            <summary>设置 IFunnelLabelLayout.get_IsLeftColumn() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.DevExpress#Charts#Native#ILabelLayout#LabelBounds">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.LabelBoundsGet">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.LabelBoundsSetGRect2D">
            <summary>设置 ILabelLayout.set_LabelBounds(GRect2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.DevExpress#Charts#Native#IFunnelLabelLayout#ResolveOverlapping">
            <summary>设置 IFunnelLabelLayout.get_ResolveOverlapping() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.ResolveOverlappingGet">
            <summary>设置 IFunnelLabelLayout.get_ResolveOverlapping() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.DevExpress#Charts#Native#ILabelLayout#Visible">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.VisibleGet">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelLabelLayout.VisibleSetBoolean">
            <summary>设置 ILabelLayout.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIFunnelPoint">
            <summary>DevExpress.Charts.Native.IFunnelPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.#ctor">
            <summary>初始化 type StubIFunnelPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIFunnelPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIFunnelPoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IFunnelPoint#NormalizedValue">
            <summary>设置 IFunnelPoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.NormalizedValueGet">
            <summary>设置 IFunnelPoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIFunnelPoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIGeometryHolder">
            <summary>DevExpress.Charts.Native.IGeometryHolder 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryHolder.#ctor">
            <summary>初始化 type StubIGeometryHolder 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIGeometryHolder.CreateStripCreator">
            <summary>设置 IGeometryHolder.CreateStripCreator() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryHolder.DevExpress#Charts#Native#IGeometryHolder#CreateStripCreator">
            <summary>设置 IGeometryHolder.CreateStripCreator() 的 存根</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIGeometryStrip">
            <summary>DevExpress.Charts.Native.IGeometryStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.#ctor">
            <summary>初始化 type StubIGeometryStrip 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.CompleteFilling">
            <summary>设置 IGeometryStrip.CompleteFilling() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.DevExpress#Charts#Native#IGeometryStrip#Count">
            <summary>设置 IGeometryStrip.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.CountGet">
            <summary>设置 IGeometryStrip.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.DevExpress#Charts#Native#IGeometryStrip#CompleteFilling">
            <summary>设置 IGeometryStrip.CompleteFilling() 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.DevExpress#Charts#Native#IGeometryStrip#IsEmpty">
            <summary>设置 IGeometryStrip.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIGeometryStrip.IsEmptyGet">
            <summary>设置 IGeometryStrip.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIGeometryStripCreator">
            <summary>DevExpress.Charts.Native.IGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryStripCreator.#ctor">
            <summary>初始化 type StubIGeometryStripCreator 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIGeometryStripCreator.CreateStrip">
            <summary>设置 IGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIGeometryStripCreator.DevExpress#Charts#Native#IGeometryStripCreator#CreateStrip">
            <summary>设置 IGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator">
            <summary>DevExpress.Charts.Native.IIndicatorCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.#ctor">
            <summary>初始化 type StubIIndicatorCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#AxisX">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.AxisXGet">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#AxisY">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.AxisYGet">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.CalculateIndicatorsIEnumerableOfIRefinedSeries">
            <summary>设置 IIndicatorCalculator.CalculateIndicators(IEnumerable`1&lt;IRefinedSeries&gt; activeSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IDiagram#ChartBounds">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.ChartBoundsGet">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#CrosshairOptions">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.CrosshairOptionsGet">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IIndicatorCalculator#CalculateIndicators(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.IRefinedSeries})">
            <summary>设置 IIndicatorCalculator.CalculateIndicators(IEnumerable`1&lt;IRefinedSeries&gt; activeSeries) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#GetAxisXLength(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#GetCrosshairSyncPanes(DevExpress.Charts.Native.IPane,System.Boolean)">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#GetPaneAxesContainers(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#MapInternalToPoint(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisData,System.Double,System.Double)">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#MapPointToInternal(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#UpdateCrosshairData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.GetAxisXLengthIAxisData">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.GetCrosshairSyncPanesIPaneBoolean">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.GetPaneAxesContainersIListOfRefinedSeries">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.MapInternalToPointIPaneIAxisDataIAxisDataDoubleDouble">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.MapPointToInternalIPaneGRealPoint2D">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#Panes">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.PanesGet">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#Rotated">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.RotatedGet">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#ScrollingEnabled">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.ScrollingEnabledGet">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesX">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.SecondaryAxesXGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesY">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.SecondaryAxesYGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIIndicatorCalculator.UpdateCrosshairDataIListOfRefinedSeries">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIKnownDate">
            <summary>DevExpress.Charts.Native.IKnownDate 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIKnownDate.#ctor">
            <summary>初始化 type StubIKnownDate 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIKnownDate.DevExpress#Charts#Native#IKnownDate#Date">
            <summary>设置 IKnownDate.get_Date() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIKnownDate.DateGet">
            <summary>设置 IKnownDate.get_Date() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubILabelLayout">
            <summary>DevExpress.Charts.Native.ILabelLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubILabelLayout.#ctor">
            <summary>初始化 type StubILabelLayout 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubILabelLayout.AttachBackingFieldToLabelBounds">
            <summary>附加委托以将 StubILabelLayout.LabelBounds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubILabelLayout.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubILabelLayout.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubILabelLayout.DevExpress#Charts#Native#ILabelLayout#LabelBounds">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILabelLayout.LabelBoundsGet">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILabelLayout.LabelBoundsSetGRect2D">
            <summary>设置 ILabelLayout.set_LabelBounds(GRect2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubILabelLayout.DevExpress#Charts#Native#ILabelLayout#Visible">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILabelLayout.VisibleGet">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILabelLayout.VisibleSetBoolean">
            <summary>设置 ILabelLayout.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubILogarithmic">
            <summary>DevExpress.Charts.Native.ILogarithmic 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubILogarithmic.#ctor">
            <summary>初始化 type StubILogarithmic 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubILogarithmic.DevExpress#Charts#Native#ILogarithmic#Base">
            <summary>设置 ILogarithmic.get_Base() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILogarithmic.BaseGet">
            <summary>设置 ILogarithmic.get_Base() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubILogarithmic.DevExpress#Charts#Native#ILogarithmic#Enabled">
            <summary>设置 ILogarithmic.get_Enabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubILogarithmic.EnabledGet">
            <summary>设置 ILogarithmic.get_Enabled() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIMinMaxValues">
            <summary>DevExpress.Charts.Native.IMinMaxValues 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.#ctor">
            <summary>初始化 type StubIMinMaxValues 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.AttachBackingFieldToMax">
            <summary>附加委托以将 StubIMinMaxValues.Max 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.AttachBackingFieldToMin">
            <summary>附加委托以将 StubIMinMaxValues.Min 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DevExpress#Charts#Native#IMinMaxValues#Delta">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DeltaGet">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DevExpress#Charts#Native#IMinMaxValues#CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DevExpress#Charts#Native#IMinMaxValues#Intersection(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.IntersectionIMinMaxValues">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DevExpress#Charts#Native#IMinMaxValues#Max">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.MaxGet">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.MaxSetDouble">
            <summary>设置 IMinMaxValues.set_Max(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.DevExpress#Charts#Native#IMinMaxValues#Min">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.MinGet">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIMinMaxValues.MinSetDouble">
            <summary>设置 IMinMaxValues.set_Min(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries">
            <summary>DevExpress.Charts.Native.INestedDoughnutRefinedSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.#ctor">
            <summary>初始化 type StubINestedDoughnutRefinedSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#ExplodedFactor">
            <summary>设置 INestedDoughnutRefinedSeries.get_ExplodedFactor() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.ExplodedFactorGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_ExplodedFactor() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#HoleRadius">
            <summary>设置 INestedDoughnutRefinedSeries.get_HoleRadius() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.HoleRadiusGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_HoleRadius() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#IsExploded">
            <summary>设置 INestedDoughnutRefinedSeries.get_IsExploded() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.IsExplodedGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_IsExploded() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#NormalizedWeight">
            <summary>设置 INestedDoughnutRefinedSeries.get_NormalizedWeight() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.NormalizedWeightGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_NormalizedWeight() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#StartOffset">
            <summary>设置 INestedDoughnutRefinedSeries.get_StartOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.StartOffsetGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_StartOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#StartOffsetInPixels">
            <summary>设置 INestedDoughnutRefinedSeries.get_StartOffsetInPixels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.StartOffsetInPixelsGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_StartOffsetInPixels() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.DevExpress#Charts#Native#INestedDoughnutRefinedSeries#TotalGroupIndentInPixels">
            <summary>设置 INestedDoughnutRefinedSeries.get_TotalGroupIndentInPixels() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutRefinedSeries.TotalGroupIndentInPixelsGet">
            <summary>设置 INestedDoughnutRefinedSeries.get_TotalGroupIndentInPixels() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView">
            <summary>DevExpress.Charts.Native.INestedDoughnutSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.#ctor">
            <summary>初始化 type StubINestedDoughnutSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.AttachBackingFieldToIsOutside">
            <summary>附加委托以将 StubINestedDoughnutSeriesView.IsOutside 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.AttachBackingFieldToSeriesGroup">
            <summary>附加委托以将 StubINestedDoughnutSeriesView.SeriesGroup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#HasExplodedPoints(DevExpress.Charts.Native.IRefinedSeries)">
            <summary>设置 INestedDoughnutSeriesView.HasExplodedPoints(IRefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#ExplodedDistancePercentage">
            <summary>设置 INestedDoughnutSeriesView.get_ExplodedDistancePercentage() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.ExplodedDistancePercentageGet">
            <summary>设置 INestedDoughnutSeriesView.get_ExplodedDistancePercentage() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.HasExplodedPointsIRefinedSeries">
            <summary>设置 INestedDoughnutSeriesView.HasExplodedPoints(IRefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#HoleRadiusPercent">
            <summary>设置 INestedDoughnutSeriesView.get_HoleRadiusPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.HoleRadiusPercentGet">
            <summary>设置 INestedDoughnutSeriesView.get_HoleRadiusPercent() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#InnerIndent">
            <summary>设置 INestedDoughnutSeriesView.get_InnerIndent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.InnerIndentGet">
            <summary>设置 INestedDoughnutSeriesView.get_InnerIndent() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#IsOutside">
            <summary>设置 INestedDoughnutSeriesView.get_IsOutside() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.IsOutsideGet">
            <summary>设置 INestedDoughnutSeriesView.get_IsOutside() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.IsOutsideSetNullableOfBoolean">
            <summary>设置 INestedDoughnutSeriesView.set_IsOutside(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#ISupportSeriesGroups#SeriesGroup">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.SeriesGroupGet">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.SeriesGroupSetObject">
            <summary>设置 ISupportSeriesGroups.set_SeriesGroup(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.DevExpress#Charts#Native#INestedDoughnutSeriesView#Weight">
            <summary>设置 INestedDoughnutSeriesView.get_Weight() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINestedDoughnutSeriesView.WeightGet">
            <summary>设置 INestedDoughnutSeriesView.get_Weight() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubINumericOptions">
            <summary>DevExpress.Charts.Native.INumericOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINumericOptions.#ctor">
            <summary>初始化 type StubINumericOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericOptions.DevExpress#Charts#Native#INumericOptions#Format">
            <summary>设置 INumericOptions.get_Format() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericOptions.FormatGet">
            <summary>设置 INumericOptions.get_Format() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericOptions.DevExpress#Charts#Native#INumericOptions#Precision">
            <summary>设置 INumericOptions.get_Precision() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericOptions.PrecisionGet">
            <summary>设置 INumericOptions.get_Precision() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions">
            <summary>DevExpress.Charts.Native.INumericScaleOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.#ctor">
            <summary>初始化 type StubINumericScaleOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#AggregateFunction">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.AggregateFunctionGet">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.AttachBackingFieldToGridSpacing">
            <summary>附加委托以将 StubINumericScaleOptions.GridSpacing 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.CalculateCustomMeasureUnitIEnumerableOfISeriesDoubleInt32DoubleDoubleDoubleDouble">
            <summary>设置 IScaleOptionsBase`1.CalculateCustomMeasureUnit(IEnumerable`1&lt;ISeries&gt; series, Double axisLength, Int32 pixelsPerUnit, Double visualMin, Double visualMax, Double wholeMin, Double wholeMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#INumericScaleOptions#UpdateAutomaticUnits(System.Double,System.Double)">
            <summary>设置 INumericScaleOptions.UpdateAutomaticUnits(Double measureUnit, Double gridAlignment) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{System#Double}#CalculateCustomMeasureUnit(System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries},System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>设置 IScaleOptionsBase`1.CalculateCustomMeasureUnit(IEnumerable`1&lt;ISeries&gt; series, Double axisLength, Int32 pixelsPerUnit, Double visualMin, Double visualMax, Double wholeMin, Double wholeMax) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#INumericScaleOptions#GridAlignment">
            <summary>设置 INumericScaleOptions.get_GridAlignment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.GridAlignmentGet">
            <summary>设置 INumericScaleOptions.get_GridAlignment() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridOffset">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.GridOffsetGet">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacing">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacingAuto">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.GridSpacingAutoGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.GridSpacingGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.GridSpacingSetDouble">
            <summary>设置 IScaleOptionsBase.set_GridSpacing(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{System#Double}#MeasureUnit">
            <summary>设置 IScaleOptionsBase`1.get_MeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.MeasureUnitGet">
            <summary>设置 IScaleOptionsBase`1.get_MeasureUnit() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#ProcessMissingPoints">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.ProcessMissingPointsGet">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase#ScaleMode">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.ScaleModeGet">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.UpdateAutomaticUnitsDoubleDouble">
            <summary>设置 INumericScaleOptions.UpdateAutomaticUnits(Double measureUnit, Double gridAlignment) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.DevExpress#Charts#Native#IScaleOptionsBase{System#Double}#UseCustomMeasureUnit">
            <summary>设置 IScaleOptionsBase`1.get_UseCustomMeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubINumericScaleOptions.UseCustomMeasureUnitGet">
            <summary>设置 IScaleOptionsBase`1.get_UseCustomMeasureUnit() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPane">
            <summary>DevExpress.Charts.Native.IPane 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPane.#ctor">
            <summary>初始化 type StubIPane 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPane.DevExpress#Charts#Native#IPane#MappingBounds">
            <summary>设置 IPane.get_MappingBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPane.MappingBoundsGet">
            <summary>设置 IPane.get_MappingBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPane.DevExpress#Charts#Native#IPane#PaneIndex">
            <summary>设置 IPane.get_PaneIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPane.PaneIndexGet">
            <summary>设置 IPane.get_PaneIndex() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer">
            <summary>DevExpress.Charts.Native.IPaneAxesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.#ctor">
            <summary>初始化 type StubIPaneAxesContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.DevExpress#Charts#Native#IPaneAxesContainer#PrimaryAxisX">
            <summary>设置 IPaneAxesContainer.get_PrimaryAxisX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.PrimaryAxisXGet">
            <summary>设置 IPaneAxesContainer.get_PrimaryAxisX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.DevExpress#Charts#Native#IPaneAxesContainer#PrimaryAxisY">
            <summary>设置 IPaneAxesContainer.get_PrimaryAxisY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.PrimaryAxisYGet">
            <summary>设置 IPaneAxesContainer.get_PrimaryAxisY() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.DevExpress#Charts#Native#IPaneAxesContainer#SecondaryAxesX">
            <summary>设置 IPaneAxesContainer.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.SecondaryAxesXGet">
            <summary>设置 IPaneAxesContainer.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.DevExpress#Charts#Native#IPaneAxesContainer#SecondaryAxesY">
            <summary>设置 IPaneAxesContainer.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPaneAxesContainer.SecondaryAxesYGet">
            <summary>设置 IPaneAxesContainer.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPatternHolder">
            <summary>DevExpress.Charts.Native.IPatternHolder 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPatternHolder.#ctor">
            <summary>初始化 type StubIPatternHolder 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPatternHolder.DevExpress#Charts#Native#IPatternHolder#GetDataProvider(DevExpress.Charts.Native.PatternConstants)">
            <summary>设置 IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternHolder.GetDataProviderPatternConstants">
            <summary>设置 IPatternHolder.GetDataProvider(PatternConstants patternConstant) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternHolder.DevExpress#Charts#Native#IPatternHolder#PointPattern">
            <summary>设置 IPatternHolder.get_PointPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternHolder.PointPatternGet">
            <summary>设置 IPatternHolder.get_PointPattern() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource">
            <summary>DevExpress.Charts.Native.IPatternValuesSource 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.#ctor">
            <summary>初始化 type StubIPatternValuesSource 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Argument">
            <summary>设置 IPatternValuesSource.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.ArgumentGet">
            <summary>设置 IPatternValuesSource.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#CloseValue">
            <summary>设置 IPatternValuesSource.get_CloseValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.CloseValueGet">
            <summary>设置 IPatternValuesSource.get_CloseValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#HighValue">
            <summary>设置 IPatternValuesSource.get_HighValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.HighValueGet">
            <summary>设置 IPatternValuesSource.get_HighValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#LowValue">
            <summary>设置 IPatternValuesSource.get_LowValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.LowValueGet">
            <summary>设置 IPatternValuesSource.get_LowValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#OpenValue">
            <summary>设置 IPatternValuesSource.get_OpenValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.OpenValueGet">
            <summary>设置 IPatternValuesSource.get_OpenValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#PercentValue">
            <summary>设置 IPatternValuesSource.get_PercentValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.PercentValueGet">
            <summary>设置 IPatternValuesSource.get_PercentValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#PointHint">
            <summary>设置 IPatternValuesSource.get_PointHint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.PointHintGet">
            <summary>设置 IPatternValuesSource.get_PointHint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Series">
            <summary>设置 IPatternValuesSource.get_Series() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.SeriesGet">
            <summary>设置 IPatternValuesSource.get_Series() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#SeriesGroup">
            <summary>设置 IPatternValuesSource.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.SeriesGroupGet">
            <summary>设置 IPatternValuesSource.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Value">
            <summary>设置 IPatternValuesSource.get_Value() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Value1">
            <summary>设置 IPatternValuesSource.get_Value1() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.Value1Get">
            <summary>设置 IPatternValuesSource.get_Value1() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Value2">
            <summary>设置 IPatternValuesSource.get_Value2() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.Value2Get">
            <summary>设置 IPatternValuesSource.get_Value2() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#ValueDuration">
            <summary>设置 IPatternValuesSource.get_ValueDuration() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.ValueDurationGet">
            <summary>设置 IPatternValuesSource.get_ValueDuration() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.ValueGet">
            <summary>设置 IPatternValuesSource.get_Value() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.DevExpress#Charts#Native#IPatternValuesSource#Weight">
            <summary>设置 IPatternValuesSource.get_Weight() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPatternValuesSource.WeightGet">
            <summary>设置 IPatternValuesSource.get_Weight() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout">
            <summary>DevExpress.Charts.Native.IPieLabelLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.#ctor">
            <summary>初始化 type StubIPieLabelLayout 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.DevExpress#Charts#Native#IPieLabelLayout#Angle">
            <summary>设置 IPieLabelLayout.get_Angle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.AngleGet">
            <summary>设置 IPieLabelLayout.get_Angle() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.AttachBackingFieldToLabelBounds">
            <summary>附加委托以将 StubIPieLabelLayout.LabelBounds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubIPieLabelLayout.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.DevExpress#Charts#Native#ILabelLayout#LabelBounds">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.LabelBoundsGet">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.LabelBoundsSetGRect2D">
            <summary>设置 ILabelLayout.set_LabelBounds(GRect2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.DevExpress#Charts#Native#IPieLabelLayout#ResolveOverlapping">
            <summary>设置 IPieLabelLayout.get_ResolveOverlapping() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.ResolveOverlappingGet">
            <summary>设置 IPieLabelLayout.get_ResolveOverlapping() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.DevExpress#Charts#Native#ILabelLayout#Visible">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.VisibleGet">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPieLabelLayout.VisibleSetBoolean">
            <summary>设置 ILabelLayout.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPiePoint">
            <summary>DevExpress.Charts.Native.IPiePoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPiePoint.#ctor">
            <summary>初始化 type StubIPiePoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPiePoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIPiePoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IPiePoint#IsMaxPoint">
            <summary>设置 IPiePoint.get_IsMaxPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.IsMaxPointGet">
            <summary>设置 IPiePoint.get_IsMaxPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IPiePoint#IsMinPoint">
            <summary>设置 IPiePoint.get_IsMinPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.IsMinPointGet">
            <summary>设置 IPiePoint.get_IsMinPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IPiePoint#NormalizedValue">
            <summary>设置 IPiePoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.NormalizedValueGet">
            <summary>设置 IPiePoint.get_NormalizedValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPiePoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPiePoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPointInteraction">
            <summary>DevExpress.Charts.Native.IPointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointInteraction.#ctor">
            <summary>初始化 type StubIPointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#Argument">
            <summary>设置 IPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.ArgumentGet">
            <summary>设置 IPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#Count">
            <summary>设置 IPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.CountGet">
            <summary>设置 IPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 IPointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.GetMaxValueISeriesView">
            <summary>设置 IPointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 IPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.GetMinValueISeriesView">
            <summary>设置 IPointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointInteraction.DevExpress#Charts#Native#IPointInteraction#IsEmpty">
            <summary>设置 IPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointInteraction.IsEmptyGet">
            <summary>设置 IPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPointProcessor">
            <summary>DevExpress.Charts.Native.IPointProcessor 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointProcessor.#ctor">
            <summary>初始化 type StubIPointProcessor 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointProcessor.DevExpress#Charts#Native#IPointProcessor#ProcessPoint(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.AxisScaleTypeMap,DevExpress.Charts.Native.AxisScaleTypeMap)">
            <summary>设置 IPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointProcessor.ProcessPointRefinedPointAxisScaleTypeMapAxisScaleTypeMap">
            <summary>设置 IPointProcessor.ProcessPoint(RefinedPoint point, AxisScaleTypeMap argumentMap, AxisScaleTypeMap valueMap) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions">
            <summary>DevExpress.Charts.Native.IPointsFilterOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.#ctor">
            <summary>初始化 type StubIPointsFilterOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.DevExpress#Charts#Native#IPointsFilterOptions#Enable">
            <summary>设置 IPointsFilterOptions.get_Enable() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.EnableGet">
            <summary>设置 IPointsFilterOptions.get_Enable() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.DevExpress#Charts#Native#IPointsFilterOptions#FilterType">
            <summary>设置 IPointsFilterOptions.get_FilterType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.FilterTypeGet">
            <summary>设置 IPointsFilterOptions.get_FilterType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.DevExpress#Charts#Native#IPointsFilterOptions#OthersArgument">
            <summary>设置 IPointsFilterOptions.get_OthersArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.OthersArgumentGet">
            <summary>设置 IPointsFilterOptions.get_OthersArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.DevExpress#Charts#Native#IPointsFilterOptions#ShowOthers">
            <summary>设置 IPointsFilterOptions.get_ShowOthers() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.ShowOthersGet">
            <summary>设置 IPointsFilterOptions.get_ShowOthers() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.DevExpress#Charts#Native#IPointsFilterOptions#ThresholdValue">
            <summary>设置 IPointsFilterOptions.get_ThresholdValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPointsFilterOptions.ThresholdValueGet">
            <summary>设置 IPointsFilterOptions.get_ThresholdValue() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap">
            <summary>DevExpress.Charts.Native.IPriorScaleMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.#ctor">
            <summary>初始化 type StubIPriorScaleMap 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.DevExpress#Charts#Native#IPriorScaleMap#InternalToNative(System.Double)">
            <summary>设置 IPriorScaleMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.DevExpress#Charts#Native#IPriorScaleMap#NativeToInternal(System.Object)">
            <summary>设置 IPriorScaleMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.DevExpress#Charts#Native#IPriorScaleMap#UpdateMin(System.Double)">
            <summary>设置 IPriorScaleMap.UpdateMin(Double min) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.InternalToNativeDouble">
            <summary>设置 IPriorScaleMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.NativeToInternalObject">
            <summary>设置 IPriorScaleMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIPriorScaleMap.UpdateMinDouble">
            <summary>设置 IPriorScaleMap.UpdateMin(Double min) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIRangePoint">
            <summary>DevExpress.Charts.Native.IRangePoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangePoint.#ctor">
            <summary>初始化 type StubIRangePoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangePoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIRangePoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangePoint.AttachBackingFieldToValue1">
            <summary>附加委托以将 StubIRangePoint.Value1 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangePoint.AttachBackingFieldToValue2">
            <summary>附加委托以将 StubIRangePoint.Value2 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IRangePoint#Max">
            <summary>设置 IRangePoint.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.MaxGet">
            <summary>设置 IRangePoint.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IRangePoint#Min">
            <summary>设置 IRangePoint.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.MinGet">
            <summary>设置 IRangePoint.get_Min() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IRangePoint#Value1">
            <summary>设置 IRangePoint.get_Value1() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.Value1Get">
            <summary>设置 IRangePoint.get_Value1() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.Value1SetDouble">
            <summary>设置 IRangePoint.set_Value1(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRangePoint.DevExpress#Charts#Native#IRangePoint#Value2">
            <summary>设置 IRangePoint.get_Value2() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.Value2Get">
            <summary>设置 IRangePoint.get_Value2() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangePoint.Value2SetDouble">
            <summary>设置 IRangePoint.set_Value2(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIRangeUpdater">
            <summary>DevExpress.Charts.Native.IRangeUpdater 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangeUpdater.#ctor">
            <summary>初始化 type StubIRangeUpdater 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangeUpdater.DevExpress#Charts#Native#IRangeUpdater#GetInternalValues(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 IRangeUpdater.GetInternalValues(IAxisData axis) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRangeUpdater.DevExpress#Charts#Native#IRangeUpdater#UpdateRanges(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 IRangeUpdater.UpdateRanges(IAxisData axis, MinMaxValues intentalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangeUpdater.GetInternalValuesIAxisData">
            <summary>设置 IRangeUpdater.GetInternalValues(IAxisData axis) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRangeUpdater.UpdateRangesIAxisDataMinMaxValues">
            <summary>设置 IRangeUpdater.UpdateRanges(IAxisData axis, MinMaxValues intentalValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIRefinedSeries">
            <summary>DevExpress.Charts.Native.IRefinedSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.#ctor">
            <summary>初始化 type StubIRefinedSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#ArgumentScaleType">
            <summary>设置 IRefinedSeries.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.ArgumentScaleTypeGet">
            <summary>设置 IRefinedSeries.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#FindAllPointsWithSameArgument(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 IRefinedSeries.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#GetDrawingPoints">
            <summary>设置 IRefinedSeries.GetDrawingPoints() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#GetMaxPoint(System.Double)">
            <summary>设置 IRefinedSeries.GetMaxPoint(Double argument) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#GetMinPoint(System.Double)">
            <summary>设置 IRefinedSeries.GetMinPoint(Double argument) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#IsSameContainers(DevExpress.Charts.Native.IRefinedSeries)">
            <summary>设置 IRefinedSeries.IsSameContainers(IRefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.FindAllPointsWithSameArgumentRefinedPoint">
            <summary>设置 IRefinedSeries.FindAllPointsWithSameArgument(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.GetDrawingPoints">
            <summary>设置 IRefinedSeries.GetDrawingPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.GetMaxPointDouble">
            <summary>设置 IRefinedSeries.GetMaxPoint(Double argument) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.GetMinPointDouble">
            <summary>设置 IRefinedSeries.GetMinPoint(Double argument) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#IsFirstInContainer">
            <summary>设置 IRefinedSeries.get_IsFirstInContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.IsFirstInContainerGet">
            <summary>设置 IRefinedSeries.get_IsFirstInContainer() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#IsPointsAutoGenerated">
            <summary>设置 IRefinedSeries.get_IsPointsAutoGenerated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.IsPointsAutoGeneratedGet">
            <summary>设置 IRefinedSeries.get_IsPointsAutoGenerated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.IsSameContainersIRefinedSeries">
            <summary>设置 IRefinedSeries.IsSameContainers(IRefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#MaxArgument">
            <summary>设置 IRefinedSeries.get_MaxArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.MaxArgumentGet">
            <summary>设置 IRefinedSeries.get_MaxArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#MaxVisiblePointIndex">
            <summary>设置 IRefinedSeries.get_MaxVisiblePointIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.MaxVisiblePointIndexGet">
            <summary>设置 IRefinedSeries.get_MaxVisiblePointIndex() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#MinArgument">
            <summary>设置 IRefinedSeries.get_MinArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.MinArgumentGet">
            <summary>设置 IRefinedSeries.get_MinArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#MinVisiblePointIndex">
            <summary>设置 IRefinedSeries.get_MinVisiblePointIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.MinVisiblePointIndexGet">
            <summary>设置 IRefinedSeries.get_MinVisiblePointIndex() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#Points">
            <summary>设置 IRefinedSeries.get_Points() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.PointsGet">
            <summary>设置 IRefinedSeries.get_Points() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#Series">
            <summary>设置 IRefinedSeries.get_Series() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.SeriesGet">
            <summary>设置 IRefinedSeries.get_Series() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#SeriesView">
            <summary>设置 IRefinedSeries.get_SeriesView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.SeriesViewGet">
            <summary>设置 IRefinedSeries.get_SeriesView() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.DevExpress#Charts#Native#IRefinedSeries#ValueScaleType">
            <summary>设置 IRefinedSeries.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeries.ValueScaleTypeGet">
            <summary>设置 IRefinedSeries.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer">
            <summary>DevExpress.Charts.Native.IRefinedSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.#ctor">
            <summary>初始化 type StubIRefinedSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.DevExpress#Charts#Native#IRefinedSeriesContainer#HasSameContainers(DevExpress.Charts.Native.IRefinedSeries,DevExpress.Charts.Native.IRefinedSeries)">
            <summary>设置 IRefinedSeriesContainer.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.DevExpress#Charts#Native#IRefinedSeriesContainer#IsFirstInContainer(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 IRefinedSeriesContainer.IsFirstInContainer(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.HasSameContainersIRefinedSeriesIRefinedSeries">
            <summary>设置 IRefinedSeriesContainer.HasSameContainers(IRefinedSeries refinedSeries1, IRefinedSeries refinedSeries2) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.DevExpress#Charts#Native#IRefinedSeriesContainer#IsContainsProcessedPoints">
            <summary>设置 IRefinedSeriesContainer.get_IsContainsProcessedPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.IsContainsProcessedPointsGet">
            <summary>设置 IRefinedSeriesContainer.get_IsContainsProcessedPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.DevExpress#Charts#Native#IRefinedSeriesContainer#IsDesignMode">
            <summary>设置 IRefinedSeriesContainer.get_IsDesignMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.IsDesignModeGet">
            <summary>设置 IRefinedSeriesContainer.get_IsDesignMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIRefinedSeriesContainer.IsFirstInContainerRefinedSeries">
            <summary>设置 IRefinedSeriesContainer.IsFirstInContainer(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis">
            <summary>DevExpress.Charts.Native.IResolveLabelsOverlappingAxis 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis.#ctor">
            <summary>初始化 type StubIResolveLabelsOverlappingAxis 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis.AttachBackingFieldToOverlappingCache">
            <summary>附加委托以将 StubIResolveLabelsOverlappingAxis.OverlappingCache 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis.DevExpress#Charts#Native#IResolveLabelsOverlappingAxis#OverlappingCache">
            <summary>设置 IResolveLabelsOverlappingAxis.get_OverlappingCache() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis.OverlappingCacheGet">
            <summary>设置 IResolveLabelsOverlappingAxis.get_OverlappingCache() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIResolveLabelsOverlappingAxis.OverlappingCacheSetAxisLabelResolveOverlappingCache">
            <summary>设置 IResolveLabelsOverlappingAxis.set_OverlappingCache(AxisLabelResolveOverlappingCache value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIScaleBreak">
            <summary>DevExpress.Charts.Native.IScaleBreak 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleBreak.#ctor">
            <summary>初始化 type StubIScaleBreak 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleBreak.DevExpress#Charts#Native#IScaleBreak#Edge1">
            <summary>设置 IScaleBreak.get_Edge1() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleBreak.Edge1Get">
            <summary>设置 IScaleBreak.get_Edge1() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleBreak.DevExpress#Charts#Native#IScaleBreak#Edge2">
            <summary>设置 IScaleBreak.get_Edge2() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleBreak.Edge2Get">
            <summary>设置 IScaleBreak.get_Edge2() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleBreak.DevExpress#Charts#Native#IScaleBreak#Visible">
            <summary>设置 IScaleBreak.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleBreak.VisibleGet">
            <summary>设置 IScaleBreak.get_Visible() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIScaleMap">
            <summary>DevExpress.Charts.Native.IScaleMap 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.#ctor">
            <summary>初始化 type StubIScaleMap 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#InternalToNative(System.Double)">
            <summary>设置 IScaleMap.InternalToNative(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#InternalToRefined(System.Double)">
            <summary>设置 IScaleMap.InternalToRefined(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#IsCompatible(System.Object)">
            <summary>设置 IScaleMap.IsCompatible(Object value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#NativeToInternal(System.Object)">
            <summary>设置 IScaleMap.NativeToInternal(Object value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#NativeToRefined(System.Object)">
            <summary>设置 IScaleMap.NativeToRefined(Object value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#RefinedToInternal(System.Double)">
            <summary>设置 IScaleMap.RefinedToInternal(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.InternalToNativeDouble">
            <summary>设置 IScaleMap.InternalToNative(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.InternalToRefinedDouble">
            <summary>设置 IScaleMap.InternalToRefined(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.IsCompatibleObject">
            <summary>设置 IScaleMap.IsCompatible(Object value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.NativeToInternalObject">
            <summary>设置 IScaleMap.NativeToInternal(Object value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.NativeToRefinedObject">
            <summary>设置 IScaleMap.NativeToRefined(Object value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.RefinedToInternalDouble">
            <summary>设置 IScaleMap.RefinedToInternal(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleMap.DevExpress#Charts#Native#IScaleMap#Transformation">
            <summary>设置 IScaleMap.get_Transformation() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleMap.TransformationGet">
            <summary>设置 IScaleMap.get_Transformation() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase">
            <summary>DevExpress.Charts.Native.IScaleOptionsBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.#ctor">
            <summary>初始化 type StubIScaleOptionsBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#AggregateFunction">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.AggregateFunctionGet">
            <summary>设置 IScaleOptionsBase.get_AggregateFunction() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.AttachBackingFieldToGridSpacing">
            <summary>附加委托以将 StubIScaleOptionsBase.GridSpacing 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#GridOffset">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.GridOffsetGet">
            <summary>设置 IScaleOptionsBase.get_GridOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacing">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#GridSpacingAuto">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.GridSpacingAutoGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacingAuto() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.GridSpacingGet">
            <summary>设置 IScaleOptionsBase.get_GridSpacing() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.GridSpacingSetDouble">
            <summary>设置 IScaleOptionsBase.set_GridSpacing(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#ProcessMissingPoints">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.ProcessMissingPointsGet">
            <summary>设置 IScaleOptionsBase.get_ProcessMissingPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.DevExpress#Charts#Native#IScaleOptionsBase#ScaleMode">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIScaleOptionsBase.ScaleModeGet">
            <summary>设置 IScaleOptionsBase.get_ScaleMode() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator">
            <summary>DevExpress.Charts.Native.ISeparatePaneIndicator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.#ctor">
            <summary>初始化 type StubISeparatePaneIndicator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.DevExpress#Charts#Native#IAffectsAxisRange#AxisYData">
            <summary>设置 IAffectsAxisRange.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.AxisYDataGet">
            <summary>设置 IAffectsAxisRange.get_AxisYData() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.DevExpress#Charts#Native#IAffectsAxisRange#GetMinMaxValues(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IAffectsAxisRange.GetMinMaxValues(IMinMaxValues visualRangeOfOtherAxisForFiltering) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.GetMinMaxValuesIMinMaxValues">
            <summary>设置 IAffectsAxisRange.GetMinMaxValues(IMinMaxValues visualRangeOfOtherAxisForFiltering) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.DevExpress#Charts#Native#ISeparatePaneIndicator#Pane">
            <summary>设置 ISeparatePaneIndicator.get_Pane() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeparatePaneIndicator.PaneGet">
            <summary>设置 ISeparatePaneIndicator.get_Pane() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeries">
            <summary>DevExpress.Charts.Native.ISeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.#ctor">
            <summary>初始化 type StubISeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ActualPoints">
            <summary>设置 ISeries.get_ActualPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ActualPointsGet">
            <summary>设置 ISeries.get_ActualPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.AddSeriesPointISeriesPoint">
            <summary>设置 ISeries.AddSeriesPoint(ISeriesPoint point) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ArePointsSorted">
            <summary>设置 ISeries.get_ArePointsSorted() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ArePointsSortedGet">
            <summary>设置 ISeries.get_ArePointsSorted() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ArgumentDataMember">
            <summary>设置 ISeries.get_ArgumentDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ArgumentDataMemberGet">
            <summary>设置 ISeries.get_ArgumentDataMember() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesBase#ArgumentScaleType">
            <summary>设置 ISeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ArgumentScaleTypeGet">
            <summary>设置 ISeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ClearColorCache">
            <summary>设置 ISeries.ClearColorCache() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ColorDataMember">
            <summary>设置 ISeries.get_ColorDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ColorDataMemberGet">
            <summary>设置 ISeries.get_ColorDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.CreateSeriesPointISeriesObjectObjectArrayObjectObjectArray">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.CreateSeriesPointObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#DataFilters">
            <summary>设置 ISeries.get_DataFilters() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#DataFiltersConjunction">
            <summary>设置 ISeries.get_DataFiltersConjunction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.DataFiltersConjunctionGet">
            <summary>设置 ISeries.get_DataFiltersConjunction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.DataFiltersGet">
            <summary>设置 ISeries.get_DataFilters() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#AddSeriesPoint(DevExpress.Charts.Native.ISeriesPoint)">
            <summary>设置 ISeries.AddSeriesPoint(ISeriesPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ClearColorCache">
            <summary>设置 ISeries.ClearColorCache() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#SetArgumentScaleType(DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeries.SetArgumentScaleType(Scale scaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Object[],System.Object,System.Object[])">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#LabelsVisibility">
            <summary>设置 ISeries.get_LabelsVisibility() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.LabelsVisibilityGet">
            <summary>设置 ISeries.get_LabelsVisibility() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#Name">
            <summary>设置 ISeries.get_Name() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.NameGet">
            <summary>设置 ISeries.get_Name() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#Points">
            <summary>设置 ISeries.get_Points() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.PointsGet">
            <summary>设置 ISeries.get_Points() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#PointsToInsert">
            <summary>设置 ISeries.get_PointsToInsert() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.PointsToInsertGet">
            <summary>设置 ISeries.get_PointsToInsert() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#PointsToRemove">
            <summary>设置 ISeries.get_PointsToRemove() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.PointsToRemoveGet">
            <summary>设置 ISeries.get_PointsToRemove() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#SeriesPointsSortingKey">
            <summary>设置 ISeries.get_SeriesPointsSortingKey() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.SeriesPointsSortingKeyGet">
            <summary>设置 ISeries.get_SeriesPointsSortingKey() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#SeriesPointsSortingMode">
            <summary>设置 ISeries.get_SeriesPointsSortingMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.SeriesPointsSortingModeGet">
            <summary>设置 ISeries.get_SeriesPointsSortingMode() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesBase#SeriesView">
            <summary>设置 ISeriesBase.get_SeriesView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.SeriesViewGet">
            <summary>设置 ISeriesBase.get_SeriesView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.SetArgumentScaleTypeScale">
            <summary>设置 ISeries.SetArgumentScaleType(Scale scaleType) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ShouldBeDrawnOnDiagram">
            <summary>设置 ISeries.get_ShouldBeDrawnOnDiagram() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ShouldBeDrawnOnDiagramGet">
            <summary>设置 ISeries.get_ShouldBeDrawnOnDiagram() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ShouldSortPointsInfo">
            <summary>设置 ISeries.get_ShouldSortPointsInfo() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ShouldSortPointsInfoGet">
            <summary>设置 ISeries.get_ShouldSortPointsInfo() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ToolTipHintDataMember">
            <summary>设置 ISeries.get_ToolTipHintDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ToolTipHintDataMemberGet">
            <summary>设置 ISeries.get_ToolTipHintDataMember() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesBase#UserArgumentScaleType">
            <summary>设置 ISeriesBase.get_UserArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.UserArgumentScaleTypeGet">
            <summary>设置 ISeriesBase.get_UserArgumentScaleType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#ValueDataMembers">
            <summary>设置 ISeries.get_ValueDataMembers() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ValueDataMembersGet">
            <summary>设置 ISeries.get_ValueDataMembers() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeriesBase#ValueScaleType">
            <summary>设置 ISeriesBase.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.ValueScaleTypeGet">
            <summary>设置 ISeriesBase.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeries.DevExpress#Charts#Native#ISeries#Visible">
            <summary>设置 ISeries.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeries.VisibleGet">
            <summary>设置 ISeries.get_Visible() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesBase">
            <summary>DevExpress.Charts.Native.ISeriesBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesBase.#ctor">
            <summary>初始化 type StubISeriesBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesBase.DevExpress#Charts#Native#ISeriesBase#ArgumentScaleType">
            <summary>设置 ISeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesBase.ArgumentScaleTypeGet">
            <summary>设置 ISeriesBase.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesBase.DevExpress#Charts#Native#ISeriesBase#SeriesView">
            <summary>设置 ISeriesBase.get_SeriesView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesBase.SeriesViewGet">
            <summary>设置 ISeriesBase.get_SeriesView() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesBase.DevExpress#Charts#Native#ISeriesBase#UserArgumentScaleType">
            <summary>设置 ISeriesBase.get_UserArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesBase.UserArgumentScaleTypeGet">
            <summary>设置 ISeriesBase.get_UserArgumentScaleType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesBase.DevExpress#Charts#Native#ISeriesBase#ValueScaleType">
            <summary>设置 ISeriesBase.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesBase.ValueScaleTypeGet">
            <summary>设置 ISeriesBase.get_ValueScaleType() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData">
            <summary>DevExpress.Charts.Native.ISeriesInteractionData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.#ctor">
            <summary>初始化 type StubISeriesInteractionData 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.AddSeriesIRefinedSeries">
            <summary>设置 ISeriesInteractionData.AddSeries(IRefinedSeries series) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.Calculate">
            <summary>设置 ISeriesInteractionData.Calculate() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#CanSetValueAxisRange">
            <summary>设置 ISeriesInteractionData.get_CanSetValueAxisRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.CanSetValueAxisRangeGet">
            <summary>设置 ISeriesInteractionData.get_CanSetValueAxisRange() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#CanUpdateValueAxisRange">
            <summary>设置 ISeriesInteractionData.get_CanUpdateValueAxisRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.CanUpdateValueAxisRangeGet">
            <summary>设置 ISeriesInteractionData.get_CanUpdateValueAxisRange() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#AddSeries(DevExpress.Charts.Native.IRefinedSeries)">
            <summary>设置 ISeriesInteractionData.AddSeries(IRefinedSeries series) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#Calculate">
            <summary>设置 ISeriesInteractionData.Calculate() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#UpdateMinimumMaximum(DevExpress.Charts.Native.IRefinedSeries,DevExpress.Charts.Native.IBasePoint)">
            <summary>设置 ISeriesInteractionData.UpdateMinimumMaximum(IRefinedSeries series, IBasePoint refinedPoint) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#MaxValue">
            <summary>设置 ISeriesInteractionData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.MaxValueGet">
            <summary>设置 ISeriesInteractionData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.DevExpress#Charts#Native#ISeriesInteractionData#MinValue">
            <summary>设置 ISeriesInteractionData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.MinValueGet">
            <summary>设置 ISeriesInteractionData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesInteractionData.UpdateMinimumMaximumIRefinedSeriesIBasePoint">
            <summary>设置 ISeriesInteractionData.UpdateMinimumMaximum(IRefinedSeries series, IBasePoint refinedPoint) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesPoint">
            <summary>DevExpress.Charts.Native.ISeriesPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPoint.#ctor">
            <summary>初始化 type StubISeriesPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#AnimatedValues">
            <summary>设置 ISeriesPoint.get_AnimatedValues() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.AnimatedValuesGet">
            <summary>设置 ISeriesPoint.get_AnimatedValues() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#ArgumentScaleType">
            <summary>设置 ISeriesPoint.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.ArgumentScaleTypeGet">
            <summary>设置 ISeriesPoint.get_ArgumentScaleType() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPoint.AttachBackingFieldToInternalArgument">
            <summary>附加委托以将 StubISeriesPoint.InternalArgument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPoint.AttachBackingFieldToInternalValues">
            <summary>附加委托以将 StubISeriesPoint.InternalValues 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#DateTimeArgument">
            <summary>设置 ISeriesPoint.get_DateTimeArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DateTimeArgumentGet">
            <summary>设置 ISeriesPoint.get_DateTimeArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#DateTimeValues">
            <summary>设置 ISeriesPoint.get_DateTimeValues() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DateTimeValuesGet">
            <summary>设置 ISeriesPoint.get_DateTimeValues() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#IsEmpty(DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesPoint.IsEmpty(Scale scale) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#InternalArgument">
            <summary>设置 ISeriesPoint.get_InternalArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.InternalArgumentGet">
            <summary>设置 ISeriesPoint.get_InternalArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.InternalArgumentSetDouble">
            <summary>设置 ISeriesPoint.set_InternalArgument(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#InternalValues">
            <summary>设置 ISeriesPoint.get_InternalValues() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.InternalValuesGet">
            <summary>设置 ISeriesPoint.get_InternalValues() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.InternalValuesSetDoubleArray">
            <summary>设置 ISeriesPoint.set_InternalValues(Double[] value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.IsEmptyScale">
            <summary>设置 ISeriesPoint.IsEmpty(Scale scale) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#NumericalArgument">
            <summary>设置 ISeriesPoint.get_NumericalArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.NumericalArgumentGet">
            <summary>设置 ISeriesPoint.get_NumericalArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#QualitativeArgument">
            <summary>设置 ISeriesPoint.get_QualitativeArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.QualitativeArgumentGet">
            <summary>设置 ISeriesPoint.get_QualitativeArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#ToolTipHint">
            <summary>设置 ISeriesPoint.get_ToolTipHint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.ToolTipHintGet">
            <summary>设置 ISeriesPoint.get_ToolTipHint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#UserArgument">
            <summary>设置 ISeriesPoint.get_UserArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.UserArgumentGet">
            <summary>设置 ISeriesPoint.get_UserArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesPoint.DevExpress#Charts#Native#ISeriesPoint#UserValues">
            <summary>设置 ISeriesPoint.get_UserValues() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPoint.UserValuesGet">
            <summary>设置 ISeriesPoint.get_UserValues() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory">
            <summary>DevExpress.Charts.Native.ISeriesPointFactory 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.#ctor">
            <summary>初始化 type StubISeriesPointFactory 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.CreateSeriesPointISeriesObjectObjectArrayObjectObjectArray">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.CreateSeriesPointObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Object[],System.Object,System.Object[])">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesPointFactory.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 存根</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesTemplate">
            <summary>DevExpress.Charts.Native.ISeriesTemplate 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.#ctor">
            <summary>初始化 type StubISeriesTemplate 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesTemplate#ArgumentDataMember">
            <summary>设置 ISeriesTemplate.get_ArgumentDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.ArgumentDataMemberGet">
            <summary>设置 ISeriesTemplate.get_ArgumentDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesForBindingStringObject">
            <summary>设置 ISeriesTemplate.CreateSeriesForBinding(String seriesName, Object seriesValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesPointISeriesObjectDoubleObjectArrayDoubleArrayObjectObjectObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesPointISeriesObjectObjectArrayObjectObjectArray">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.CreateSeriesPointObject">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(Object argument) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Object[],System.Object,System.Object[])">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Object[] values, Object tag, Object[] colors) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesPointFactory#CreateSeriesPoint(DevExpress.Charts.Native.ISeries,System.Object,System.Double,System.Object[],System.Double[],System.Object,System.Object,System.Object)">
            <summary>设置 ISeriesPointFactory.CreateSeriesPoint(ISeries owner, Object argument, Double internalArgument, Object[] values, Double[] internalValues, Object tag, Object hint, Object color) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesTemplate#CreateSeriesForBinding(System.String,System.Object)">
            <summary>设置 ISeriesTemplate.CreateSeriesForBinding(String seriesName, Object seriesValue) 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesTemplate#ToolTipHintDataMember">
            <summary>设置 ISeriesTemplate.get_ToolTipHintDataMember() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.ToolTipHintDataMemberGet">
            <summary>设置 ISeriesTemplate.get_ToolTipHintDataMember() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.DevExpress#Charts#Native#ISeriesTemplate#ValueDataMembers">
            <summary>设置 ISeriesTemplate.get_ValueDataMembers() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesTemplate.ValueDataMembersGet">
            <summary>设置 ISeriesTemplate.get_ValueDataMembers() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISeriesView">
            <summary>DevExpress.Charts.Native.ISeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.#ctor">
            <summary>初始化 type StubISeriesView 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.CalculateMinMaxPointRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#CompatibleViewType">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.CompatibleViewTypeGet">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#CalculateMinMaxPointRangeValues(DevExpress.Charts.Native.CrosshairSeriesPointEx,System.Double,System.Boolean,DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.CrosshairPaneInfoEx,DevExpress.Charts.Native.CrosshairSnapModeCore)">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GenerateRandomPoints(DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetMinMax(DevExpress.Charts.Native.IPointInteraction,System.Int32)">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointAbsMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMax(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMax(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMin(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#IsCorrectValueLevel(DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GenerateRandomPointsScaleScale">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetMinMaxIPointInteractionInt32">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetRefinedPointAbsMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetRefinedPointMaxRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetRefinedPointMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetRefinedPointsMaxIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.GetRefinedPointsMinIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#Is3DView">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.Is3DViewGet">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.IsCorrectValueLevelValueLevelInternal">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#NeedFilterVisiblePoints">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.NeedFilterVisiblePointsGet">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesGroupsInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.NeedSeriesGroupsInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.NeedSeriesInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#PointInterfaceType">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.PointInterfaceTypeGet">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISeriesView.DevExpress#Charts#Native#ISeriesView#ShouldSortPoints">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISeriesView.ShouldSortPointsGet">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView">
            <summary>DevExpress.Charts.Native.ISideBySideBarSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.#ctor">
            <summary>初始化 type StubISideBySideBarSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.AttachBackingFieldToBarDistance">
            <summary>附加委托以将 StubISideBySideBarSeriesView.BarDistance 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.AttachBackingFieldToBarDistanceFixed">
            <summary>附加委托以将 StubISideBySideBarSeriesView.BarDistanceFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.AttachBackingFieldToBarWidth">
            <summary>附加委托以将 StubISideBySideBarSeriesView.BarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.AttachBackingFieldToEqualBarWidth">
            <summary>附加委托以将 StubISideBySideBarSeriesView.EqualBarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#BarDistance">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistance() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#BarDistanceFixed">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistanceFixed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarDistanceFixedGet">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistanceFixed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarDistanceFixedSetInt32">
            <summary>设置 ISideBySideBarSeriesView.set_BarDistanceFixed(Int32 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarDistanceGet">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistance() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarDistanceSetDouble">
            <summary>设置 ISideBySideBarSeriesView.set_BarDistance(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.DevExpress#Charts#Native#IBarSeriesView#BarWidth">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarWidthGet">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.BarWidthSetDouble">
            <summary>设置 IBarSeriesView.set_BarWidth(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#EqualBarWidth">
            <summary>设置 ISideBySideBarSeriesView.get_EqualBarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.EqualBarWidthGet">
            <summary>设置 ISideBySideBarSeriesView.get_EqualBarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideBarSeriesView.EqualBarWidthSetBoolean">
            <summary>设置 ISideBySideBarSeriesView.set_EqualBarWidth(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISideBySidePoint">
            <summary>DevExpress.Charts.Native.ISideBySidePoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.#ctor">
            <summary>初始化 type StubISideBySidePoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubISideBySidePoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubISideBySidePoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#ISideBySidePoint#BarWidth">
            <summary>设置 ISideBySidePoint.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.BarWidthGet">
            <summary>设置 ISideBySidePoint.get_BarWidth() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#ISideBySidePoint#FixedOffset">
            <summary>设置 ISideBySidePoint.get_FixedOffset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.FixedOffsetGet">
            <summary>设置 ISideBySidePoint.get_FixedOffset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#ISideBySidePoint#Offset">
            <summary>设置 ISideBySidePoint.get_Offset() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.OffsetGet">
            <summary>设置 ISideBySidePoint.get_Offset() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySidePoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView">
            <summary>DevExpress.Charts.Native.ISideBySideStackedBarSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.#ctor">
            <summary>初始化 type StubISideBySideStackedBarSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToBarDistance">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.BarDistance 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToBarDistanceFixed">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.BarDistanceFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToBarWidth">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.BarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToEqualBarWidth">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.EqualBarWidth 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToSeriesGroup">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.SeriesGroup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.AttachBackingFieldToStackedGroup">
            <summary>附加委托以将 StubISideBySideStackedBarSeriesView.StackedGroup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#BarDistance">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistance() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#BarDistanceFixed">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistanceFixed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarDistanceFixedGet">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistanceFixed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarDistanceFixedSetInt32">
            <summary>设置 ISideBySideBarSeriesView.set_BarDistanceFixed(Int32 value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarDistanceGet">
            <summary>设置 ISideBySideBarSeriesView.get_BarDistance() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarDistanceSetDouble">
            <summary>设置 ISideBySideBarSeriesView.set_BarDistance(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#IBarSeriesView#BarWidth">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarWidthGet">
            <summary>设置 IBarSeriesView.get_BarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.BarWidthSetDouble">
            <summary>设置 IBarSeriesView.set_BarWidth(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#ISideBySideBarSeriesView#EqualBarWidth">
            <summary>设置 ISideBySideBarSeriesView.get_EqualBarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.EqualBarWidthGet">
            <summary>设置 ISideBySideBarSeriesView.get_EqualBarWidth() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.EqualBarWidthSetBoolean">
            <summary>设置 ISideBySideBarSeriesView.set_EqualBarWidth(Boolean value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#ISupportSeriesGroups#SeriesGroup">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.SeriesGroupGet">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.SeriesGroupSetObject">
            <summary>设置 ISupportSeriesGroups.set_SeriesGroup(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.DevExpress#Charts#Native#ISideBySideStackedBarSeriesView#StackedGroup">
            <summary>设置 ISideBySideStackedBarSeriesView.get_StackedGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.StackedGroupGet">
            <summary>设置 ISideBySideStackedBarSeriesView.get_StackedGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISideBySideStackedBarSeriesView.StackedGroupSetObject">
            <summary>设置 ISideBySideStackedBarSeriesView.set_StackedGroup(Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISimpleDiagram">
            <summary>DevExpress.Charts.Native.ISimpleDiagram 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.#ctor">
            <summary>初始化 type StubISimpleDiagram 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.DevExpress#Charts#Native#IDiagram#ChartBounds">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.ChartBoundsGet">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.DevExpress#Charts#Native#ISimpleDiagram#Dimension">
            <summary>设置 ISimpleDiagram.get_Dimension() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.DimensionGet">
            <summary>设置 ISimpleDiagram.get_Dimension() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.DevExpress#Charts#Native#ISimpleDiagram#LayoutDirection">
            <summary>设置 ISimpleDiagram.get_LayoutDirection() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleDiagram.LayoutDirectionGet">
            <summary>设置 ISimpleDiagram.get_LayoutDirection() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView">
            <summary>DevExpress.Charts.Native.ISimpleSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.#ctor">
            <summary>初始化 type StubISimpleSeriesView 的新实例</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.CalculateMinMaxPointRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#CompatibleViewType">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.CompatibleViewTypeGet">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#CalculateMinMaxPointRangeValues(DevExpress.Charts.Native.CrosshairSeriesPointEx,System.Double,System.Boolean,DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.CrosshairPaneInfoEx,DevExpress.Charts.Native.CrosshairSnapModeCore)">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GenerateRandomPoints(DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetMinMax(DevExpress.Charts.Native.IPointInteraction,System.Int32)">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointAbsMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMax(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMax(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMin(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#IsCorrectValueLevel(DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GenerateRandomPointsScaleScale">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetMinMaxIPointInteractionInt32">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetRefinedPointAbsMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetRefinedPointMaxRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetRefinedPointMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetRefinedPointsMaxIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.GetRefinedPointsMinIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#Is3DView">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.Is3DViewGet">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.IsCorrectValueLevelValueLevelInternal">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#NeedFilterVisiblePoints">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.NeedFilterVisiblePointsGet">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesGroupsInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.NeedSeriesGroupsInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.NeedSeriesInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#PointInterfaceType">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.PointInterfaceTypeGet">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.DevExpress#Charts#Native#ISeriesView#ShouldSortPoints">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISimpleSeriesView.ShouldSortPointsGet">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISplineSeriesView">
            <summary>DevExpress.Charts.Native.ISplineSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.#ctor">
            <summary>初始化 type StubISplineSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.AttachBackingFieldToLineTensionPercent">
            <summary>附加委托以将 StubISplineSeriesView.LineTensionPercent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.DevExpress#Charts#Native#ISplineSeriesView#LineTensionPercent">
            <summary>设置 ISplineSeriesView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.LineTensionPercentGet">
            <summary>设置 ISplineSeriesView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.LineTensionPercentSetInt32">
            <summary>设置 ISplineSeriesView.set_LineTensionPercent(Int32 value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.DevExpress#Charts#Native#ISplineSeriesView#ShouldCorrectRanges">
            <summary>设置 ISplineSeriesView.get_ShouldCorrectRanges() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISplineSeriesView.ShouldCorrectRangesGet">
            <summary>设置 ISplineSeriesView.get_ShouldCorrectRanges() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISplineView">
            <summary>DevExpress.Charts.Native.ISplineView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISplineView.#ctor">
            <summary>初始化 type StubISplineView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISplineView.AttachBackingFieldToLineTensionPercent">
            <summary>附加委托以将 StubISplineView.LineTensionPercent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISplineView.DevExpress#Charts#Native#ISplineView#LineTensionPercent">
            <summary>设置 ISplineView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISplineView.LineTensionPercentGet">
            <summary>设置 ISplineView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISplineView.LineTensionPercentSetInt32">
            <summary>设置 ISplineView.set_LineTensionPercent(Int32 value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStackedPoint">
            <summary>DevExpress.Charts.Native.IStackedPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedPoint.#ctor">
            <summary>初始化 type StubIStackedPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIStackedPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedPoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIStackedPoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IStackedPoint#MaxValue">
            <summary>设置 IStackedPoint.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.MaxValueGet">
            <summary>设置 IStackedPoint.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IStackedPoint#MinValue">
            <summary>设置 IStackedPoint.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.MinValueGet">
            <summary>设置 IStackedPoint.get_MinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalMaxValue">
            <summary>设置 IStackedPoint.get_TotalMaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.TotalMaxValueGet">
            <summary>设置 IStackedPoint.get_TotalMaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalMinValue">
            <summary>设置 IStackedPoint.get_TotalMinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.TotalMinValueGet">
            <summary>设置 IStackedPoint.get_TotalMinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IStackedPoint#TotalValue">
            <summary>设置 IStackedPoint.get_TotalValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.TotalValueGet">
            <summary>设置 IStackedPoint.get_TotalValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedPoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedPoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStackedSplineView">
            <summary>DevExpress.Charts.Native.IStackedSplineView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedSplineView.#ctor">
            <summary>初始化 type StubIStackedSplineView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedSplineView.AttachBackingFieldToLineTensionPercent">
            <summary>附加委托以将 StubIStackedSplineView.LineTensionPercent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStackedSplineView.DevExpress#Charts#Native#ISplineView#LineTensionPercent">
            <summary>设置 ISplineView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedSplineView.LineTensionPercentGet">
            <summary>设置 ISplineView.get_LineTensionPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStackedSplineView.LineTensionPercentSetInt32">
            <summary>设置 ISplineView.set_LineTensionPercent(Int32 value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStackedView">
            <summary>DevExpress.Charts.Native.IStackedView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStackedView.#ctor">
            <summary>初始化 type StubIStackedView 的新实例</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStepSeriesView">
            <summary>DevExpress.Charts.Native.IStepSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStepSeriesView.#ctor">
            <summary>初始化 type StubIStepSeriesView 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStepSeriesView.AttachBackingFieldToInvertedStep">
            <summary>附加委托以将 StubIStepSeriesView.InvertedStep 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStepSeriesView.DevExpress#Charts#Native#IStepSeriesView#InvertedStep">
            <summary>设置 IStepSeriesView.get_InvertedStep() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStepSeriesView.InvertedStepGet">
            <summary>设置 IStepSeriesView.get_InvertedStep() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStepSeriesView.InvertedStepSetBoolean">
            <summary>设置 IStepSeriesView.set_InvertedStep(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStrip">
            <summary>DevExpress.Charts.Native.IStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStrip.#ctor">
            <summary>初始化 type StubIStrip 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStrip.DevExpress#Charts#Native#IStrip#AxisLabelText">
            <summary>设置 IStrip.get_AxisLabelText() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStrip.AxisLabelTextGet">
            <summary>设置 IStrip.get_AxisLabelText() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStrip.CorrectLimits">
            <summary>设置 IStrip.CorrectLimits() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStrip.DevExpress#Charts#Native#IStrip#CorrectLimits">
            <summary>设置 IStrip.CorrectLimits() 的 存根</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStrip.DevExpress#Charts#Native#IStrip#MaxLimit">
            <summary>设置 IStrip.get_MaxLimit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStrip.MaxLimitGet">
            <summary>设置 IStrip.get_MaxLimit() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStrip.DevExpress#Charts#Native#IStrip#MinLimit">
            <summary>设置 IStrip.get_MinLimit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStrip.MinLimitGet">
            <summary>设置 IStrip.get_MinLimit() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStrip.DevExpress#Charts#Native#IStrip#Visible">
            <summary>设置 IStrip.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStrip.VisibleGet">
            <summary>设置 IStrip.get_Visible() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIStripLimit">
            <summary>DevExpress.Charts.Native.IStripLimit 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStripLimit.#ctor">
            <summary>初始化 type StubIStripLimit 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#Axis">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.AxisGet">
            <summary>设置 IAxisValueContainer.get_Axis() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#Culture">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.CultureGet">
            <summary>设置 IAxisValueContainer.get_Culture() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#SetAxisValue(System.Object)">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#SetValue(System.Double)">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.GetAxisValue">
            <summary>设置 IAxisValueContainer.GetAxisValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.GetValue">
            <summary>设置 IAxisValueContainer.GetValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IAxisValueContainer#IsEnabled">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.IsEnabledGet">
            <summary>设置 IAxisValueContainer.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.SetAxisValueObject">
            <summary>设置 IAxisValueContainer.SetAxisValue(Object axisValue) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.SetValueDouble">
            <summary>设置 IAxisValueContainer.SetValue(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIStripLimit.DevExpress#Charts#Native#IStripLimit#Value">
            <summary>设置 IStripLimit.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIStripLimit.ValueGet">
            <summary>设置 IStripLimit.get_Value() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues">
            <summary>DevExpress.Charts.Native.ISupportMinMaxValues 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.#ctor">
            <summary>初始化 type StubISupportMinMaxValues 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.DevExpress#Charts#Native#ISupportMinMaxValues#GetAbsMinValue">
            <summary>设置 ISupportMinMaxValues.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.GetAbsMinValue">
            <summary>设置 ISupportMinMaxValues.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.DevExpress#Charts#Native#ISupportMinMaxValues#Max">
            <summary>设置 ISupportMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.MaxGet">
            <summary>设置 ISupportMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.DevExpress#Charts#Native#ISupportMinMaxValues#Min">
            <summary>设置 ISupportMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportMinMaxValues.MinGet">
            <summary>设置 ISupportMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups">
            <summary>DevExpress.Charts.Native.ISupportSeriesGroups 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups.#ctor">
            <summary>初始化 type StubISupportSeriesGroups 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups.AttachBackingFieldToSeriesGroup">
            <summary>附加委托以将 StubISupportSeriesGroups.SeriesGroup 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups.DevExpress#Charts#Native#ISupportSeriesGroups#SeriesGroup">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups.SeriesGroupGet">
            <summary>设置 ISupportSeriesGroups.get_SeriesGroup() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportSeriesGroups.SeriesGroupSetObject">
            <summary>设置 ISupportSeriesGroups.set_SeriesGroup(Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement">
            <summary>DevExpress.Charts.Native.ISupportVisibilityControlElement 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.#ctor">
            <summary>初始化 type StubISupportVisibilityControlElement 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubISupportVisibilityControlElement.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.DevExpress#Charts#Native#ISupportVisibilityControlElement#Bounds">
            <summary>设置 ISupportVisibilityControlElement.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.BoundsGet">
            <summary>设置 ISupportVisibilityControlElement.get_Bounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.DevExpress#Charts#Native#ISupportVisibilityControlElement#Orientation">
            <summary>设置 ISupportVisibilityControlElement.get_Orientation() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.OrientationGet">
            <summary>设置 ISupportVisibilityControlElement.get_Orientation() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.DevExpress#Charts#Native#ISupportVisibilityControlElement#Priority">
            <summary>设置 ISupportVisibilityControlElement.get_Priority() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.PriorityGet">
            <summary>设置 ISupportVisibilityControlElement.get_Priority() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.DevExpress#Charts#Native#ISupportVisibilityControlElement#Visible">
            <summary>设置 ISupportVisibilityControlElement.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.VisibleGet">
            <summary>设置 ISupportVisibilityControlElement.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISupportVisibilityControlElement.VisibleSetBoolean">
            <summary>设置 ISupportVisibilityControlElement.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram">
            <summary>DevExpress.Charts.Native.ISwiftPlotDiagram 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.#ctor">
            <summary>初始化 type StubISwiftPlotDiagram 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#AxisX">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.AxisXGet">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#AxisY">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.AxisYGet">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IDiagram#ChartBounds">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.ChartBoundsGet">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#CrosshairOptions">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.CrosshairOptionsGet">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#GetAxisXLength(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#GetCrosshairSyncPanes(DevExpress.Charts.Native.IPane,System.Boolean)">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#GetPaneAxesContainers(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#MapInternalToPoint(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisData,System.Double,System.Double)">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#MapPointToInternal(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#UpdateCrosshairData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.GetAxisXLengthIAxisData">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.GetCrosshairSyncPanesIPaneBoolean">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.GetPaneAxesContainersIListOfRefinedSeries">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.MapInternalToPointIPaneIAxisDataIAxisDataDoubleDouble">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.MapPointToInternalIPaneGRealPoint2D">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#Panes">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.PanesGet">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#Rotated">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.RotatedGet">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#ScrollingEnabled">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.ScrollingEnabledGet">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesX">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.SecondaryAxesXGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesY">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.SecondaryAxesYGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubISwiftPlotDiagram.UpdateCrosshairDataIListOfRefinedSeries">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubITransformation">
            <summary>DevExpress.Charts.Native.ITransformation 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubITransformation.#ctor">
            <summary>初始化 type StubITransformation 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubITransformation.DevExpress#Charts#Native#ITransformation#TransformBackward(System.Double)">
            <summary>设置 ITransformation.TransformBackward(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubITransformation.DevExpress#Charts#Native#ITransformation#TransformForward(System.Double)">
            <summary>设置 ITransformation.TransformForward(Double value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubITransformation.TransformBackwardDouble">
            <summary>设置 ITransformation.TransformBackward(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubITransformation.TransformForwardDouble">
            <summary>设置 ITransformation.TransformForward(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIValuePoint">
            <summary>DevExpress.Charts.Native.IValuePoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIValuePoint.#ctor">
            <summary>初始化 type StubIValuePoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIValuePoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIValuePoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIValuePoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIValuePoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIValuePoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIValuePoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIValuePoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIValuePoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIValuePoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIValuePoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData">
            <summary>DevExpress.Charts.Native.IVisualAxisRangeData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.#ctor">
            <summary>初始化 type StubIVisualAxisRangeData 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AlwaysShowZeroLevel">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AlwaysShowZeroLevelGet">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AlwaysShowZeroLevelSetBoolean">
            <summary>设置 IAxisRangeData.set_AlwaysShowZeroLevel(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.ApplyStateRangeSnapshot">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToAlwaysShowZeroLevel">
            <summary>附加委托以将 StubIVisualAxisRangeData.AlwaysShowZeroLevel 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToAutoCorrectMax">
            <summary>附加委托以将 StubIVisualAxisRangeData.AutoCorrectMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToAutoCorrectMin">
            <summary>附加委托以将 StubIVisualAxisRangeData.AutoCorrectMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToAutoSideMargins">
            <summary>附加委托以将 StubIVisualAxisRangeData.AutoSideMargins 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToCorrectionMode">
            <summary>附加委托以将 StubIVisualAxisRangeData.CorrectionMode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToMax">
            <summary>附加委托以将 StubIVisualAxisRangeData.Max 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToMaxValue">
            <summary>附加委托以将 StubIVisualAxisRangeData.MaxValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToMin">
            <summary>附加委托以将 StubIVisualAxisRangeData.Min 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToMinValue">
            <summary>附加委托以将 StubIVisualAxisRangeData.MinValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToRefinedMax">
            <summary>附加委托以将 StubIVisualAxisRangeData.RefinedMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToRefinedMin">
            <summary>附加委托以将 StubIVisualAxisRangeData.RefinedMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToSideMarginsMax">
            <summary>附加委托以将 StubIVisualAxisRangeData.SideMarginsMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToSideMarginsMin">
            <summary>附加委托以将 StubIVisualAxisRangeData.SideMarginsMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToSideMarginsValue">
            <summary>附加委托以将 StubIVisualAxisRangeData.SideMarginsValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AttachBackingFieldToSynchronizeWithWholeRange">
            <summary>附加委托以将 StubIVisualAxisRangeData.SynchronizeWithWholeRange 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Auto">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMax">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoCorrectMaxGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoCorrectMaxSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMax(Boolean value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMin">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoCorrectMinGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoCorrectMinSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMin(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoGet">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoSideMargins">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoSideMarginsGet">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.AutoSideMarginsSetSideMarginMode">
            <summary>设置 IAxisRangeData.set_AutoSideMargins(SideMarginMode value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.ContainsDouble">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#CorrectionMode">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.CorrectionModeGet">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.CorrectionModeSetRangeCorrectionMode">
            <summary>设置 IAxisRangeData.set_CorrectionMode(RangeCorrectionMode value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Delta">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DeltaGet">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#ApplyState(DevExpress.Charts.Native.RangeSnapshot)">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Contains(System.Double)">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Reset(System.Boolean)">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#UpdateRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Intersection(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IVisualAxisRangeData#ScrollOrZoomRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>设置 IVisualAxisRangeData.ScrollOrZoomRange(Object min, Object max, Double internalMin, Double internalMax) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IVisualAxisRangeData#ScrollOrZoomRange(System.Object,System.Object,System.Double,System.Double,System.Boolean)">
            <summary>设置 IVisualAxisRangeData.ScrollOrZoomRange(Object min, Object max, Double internalMin, Double internalMax, Boolean notifyUpdate) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.IntersectionIMinMaxValues">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Max">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MaxGet">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MaxSetDouble">
            <summary>设置 IMinMaxValues.set_Max(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MaxValue">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MaxValueGet">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MaxValueSetObject">
            <summary>设置 IAxisRangeData.set_MaxValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Min">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MinGet">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MinSetDouble">
            <summary>设置 IMinMaxValues.set_Min(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MinValue">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MinValueGet">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.MinValueSetObject">
            <summary>设置 IAxisRangeData.set_MinValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMax">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.RefinedMaxGet">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.RefinedMaxSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMin">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.RefinedMinGet">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.RefinedMinSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMin(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.ResetBoolean">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.ScrollOrZoomRangeObjectObjectDoubleDouble">
            <summary>设置 IVisualAxisRangeData.ScrollOrZoomRange(Object min, Object max, Double internalMin, Double internalMax) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.ScrollOrZoomRangeObjectObjectDoubleDoubleBoolean">
            <summary>设置 IVisualAxisRangeData.ScrollOrZoomRange(Object min, Object max, Double internalMin, Double internalMax, Boolean notifyUpdate) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMax">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsMaxGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsMaxSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMin">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsMinGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsMinSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMin(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsValue">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsValueGet">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SideMarginsValueSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsValue(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.DevExpress#Charts#Native#IVisualAxisRangeData#SynchronizeWithWholeRange">
            <summary>设置 IVisualAxisRangeData.get_SynchronizeWithWholeRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SynchronizeWithWholeRangeGet">
            <summary>设置 IVisualAxisRangeData.get_SynchronizeWithWholeRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.SynchronizeWithWholeRangeSetBoolean">
            <summary>设置 IVisualAxisRangeData.set_SynchronizeWithWholeRange(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIVisualAxisRangeData.UpdateRangeObjectObjectDoubleDouble">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData">
            <summary>DevExpress.Charts.Native.IWholeAxisRangeData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.#ctor">
            <summary>初始化 type StubIWholeAxisRangeData 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AlwaysShowZeroLevel">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AlwaysShowZeroLevelGet">
            <summary>设置 IAxisRangeData.get_AlwaysShowZeroLevel() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AlwaysShowZeroLevelSetBoolean">
            <summary>设置 IAxisRangeData.set_AlwaysShowZeroLevel(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.ApplyStateRangeSnapshot">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToAlwaysShowZeroLevel">
            <summary>附加委托以将 StubIWholeAxisRangeData.AlwaysShowZeroLevel 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToAutoCorrectMax">
            <summary>附加委托以将 StubIWholeAxisRangeData.AutoCorrectMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToAutoCorrectMin">
            <summary>附加委托以将 StubIWholeAxisRangeData.AutoCorrectMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToAutoSideMargins">
            <summary>附加委托以将 StubIWholeAxisRangeData.AutoSideMargins 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToCorrectionMode">
            <summary>附加委托以将 StubIWholeAxisRangeData.CorrectionMode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToMax">
            <summary>附加委托以将 StubIWholeAxisRangeData.Max 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToMaxValue">
            <summary>附加委托以将 StubIWholeAxisRangeData.MaxValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToMin">
            <summary>附加委托以将 StubIWholeAxisRangeData.Min 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToMinValue">
            <summary>附加委托以将 StubIWholeAxisRangeData.MinValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToRefinedMax">
            <summary>附加委托以将 StubIWholeAxisRangeData.RefinedMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToRefinedMin">
            <summary>附加委托以将 StubIWholeAxisRangeData.RefinedMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToSideMarginsMax">
            <summary>附加委托以将 StubIWholeAxisRangeData.SideMarginsMax 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToSideMarginsMin">
            <summary>附加委托以将 StubIWholeAxisRangeData.SideMarginsMin 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AttachBackingFieldToSideMarginsValue">
            <summary>附加委托以将 StubIWholeAxisRangeData.SideMarginsValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Auto">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMax">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoCorrectMaxGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoCorrectMaxSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMax(Boolean value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoCorrectMin">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoCorrectMinGet">
            <summary>设置 IAxisRangeData.get_AutoCorrectMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoCorrectMinSetBoolean">
            <summary>设置 IAxisRangeData.set_AutoCorrectMin(Boolean value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoGet">
            <summary>设置 IAxisRangeData.get_Auto() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#AutoSideMargins">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoSideMarginsGet">
            <summary>设置 IAxisRangeData.get_AutoSideMargins() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.AutoSideMarginsSetSideMarginMode">
            <summary>设置 IAxisRangeData.set_AutoSideMargins(SideMarginMode value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.ContainsDouble">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#CorrectionMode">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.CorrectionModeGet">
            <summary>设置 IAxisRangeData.get_CorrectionMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.CorrectionModeSetRangeCorrectionMode">
            <summary>设置 IAxisRangeData.set_CorrectionMode(RangeCorrectionMode value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Delta">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DeltaGet">
            <summary>设置 IMinMaxValues.get_Delta() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#ApplyState(DevExpress.Charts.Native.RangeSnapshot)">
            <summary>设置 IAxisRangeData.ApplyState(RangeSnapshot rangeSnapshot) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Contains(System.Double)">
            <summary>设置 IAxisRangeData.Contains(Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#Reset(System.Boolean)">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#UpdateRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#CalculateCenter">
            <summary>设置 IMinMaxValues.CalculateCenter() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Intersection(DevExpress.Charts.Native.IMinMaxValues)">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.IntersectionIMinMaxValues">
            <summary>设置 IMinMaxValues.Intersection(IMinMaxValues minMaxValues) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Max">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MaxGet">
            <summary>设置 IMinMaxValues.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MaxSetDouble">
            <summary>设置 IMinMaxValues.set_Max(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MaxValue">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MaxValueGet">
            <summary>设置 IAxisRangeData.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MaxValueSetObject">
            <summary>设置 IAxisRangeData.set_MaxValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IMinMaxValues#Min">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MinGet">
            <summary>设置 IMinMaxValues.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MinSetDouble">
            <summary>设置 IMinMaxValues.set_Min(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#MinValue">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MinValueGet">
            <summary>设置 IAxisRangeData.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.MinValueSetObject">
            <summary>设置 IAxisRangeData.set_MinValue(Object value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMax">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.RefinedMaxGet">
            <summary>设置 IAxisRangeData.get_RefinedMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.RefinedMaxSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#RefinedMin">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.RefinedMinGet">
            <summary>设置 IAxisRangeData.get_RefinedMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.RefinedMinSetDouble">
            <summary>设置 IAxisRangeData.set_RefinedMin(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.ResetBoolean">
            <summary>设置 IAxisRangeData.Reset(Boolean needUpdate) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMax">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsMaxGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMax() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsMaxSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMax(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsMin">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsMinGet">
            <summary>设置 IAxisRangeData.get_SideMarginsMin() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsMinSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsMin(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.DevExpress#Charts#Native#IAxisRangeData#SideMarginsValue">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsValueGet">
            <summary>设置 IAxisRangeData.get_SideMarginsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.SideMarginsValueSetDouble">
            <summary>设置 IAxisRangeData.set_SideMarginsValue(Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWholeAxisRangeData.UpdateRangeObjectObjectDoubleDouble">
            <summary>设置 IAxisRangeData.UpdateRange(Object min, Object max, Double internalMin, Double internalMax) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions">
            <summary>DevExpress.Charts.Native.IWorkdaysOptions 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.#ctor">
            <summary>初始化 type StubIWorkdaysOptions 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#CustomDates">
            <summary>设置 IWorkdaysOptions.get_CustomDates() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.CustomDatesGet">
            <summary>设置 IWorkdaysOptions.get_CustomDates() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#ExactWorkdays">
            <summary>设置 IWorkdaysOptions.get_ExactWorkdays() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.ExactWorkdaysGet">
            <summary>设置 IWorkdaysOptions.get_ExactWorkdays() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#FirstDayOfWeek">
            <summary>设置 IWorkdaysOptions.get_FirstDayOfWeek() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.FirstDayOfWeekGet">
            <summary>设置 IWorkdaysOptions.get_FirstDayOfWeek() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#Holidays">
            <summary>设置 IWorkdaysOptions.get_Holidays() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.HolidaysGet">
            <summary>设置 IWorkdaysOptions.get_Holidays() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#Workdays">
            <summary>设置 IWorkdaysOptions.get_Workdays() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.WorkdaysGet">
            <summary>设置 IWorkdaysOptions.get_Workdays() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.DevExpress#Charts#Native#IWorkdaysOptions#WorkdaysOnly">
            <summary>设置 IWorkdaysOptions.get_WorkdaysOnly() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIWorkdaysOptions.WorkdaysOnlyGet">
            <summary>设置 IWorkdaysOptions.get_WorkdaysOnly() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYDiagram">
            <summary>DevExpress.Charts.Native.IXYDiagram 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.#ctor">
            <summary>初始化 type StubIXYDiagram 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#AxisX">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.AxisXGet">
            <summary>设置 IXYDiagram.get_AxisX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#AxisY">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.AxisYGet">
            <summary>设置 IXYDiagram.get_AxisY() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IDiagram#ChartBounds">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.ChartBoundsGet">
            <summary>设置 IDiagram.get_ChartBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#CrosshairOptions">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.CrosshairOptionsGet">
            <summary>设置 IXYDiagram.get_CrosshairOptions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#GetAxisXLength(DevExpress.Charts.Native.IAxisData)">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#GetCrosshairSyncPanes(DevExpress.Charts.Native.IPane,System.Boolean)">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#GetPaneAxesContainers(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#MapInternalToPoint(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisData,System.Double,System.Double)">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#MapPointToInternal(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#UpdateCrosshairData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedSeries})">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.GetAxisXLengthIAxisData">
            <summary>设置 IXYDiagram.GetAxisXLength(IAxisData axis) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.GetCrosshairSyncPanesIPaneBoolean">
            <summary>设置 IXYDiagram.GetCrosshairSyncPanes(IPane focusedPane, Boolean isHorizontalSync) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.GetPaneAxesContainersIListOfRefinedSeries">
            <summary>设置 IXYDiagram.GetPaneAxesContainers(IList`1&lt;RefinedSeries&gt; activeSeries) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.MapInternalToPointIPaneIAxisDataIAxisDataDoubleDouble">
            <summary>设置 IXYDiagram.MapInternalToPoint(IPane pane, IAxisData axisX, IAxisData axisY, Double argument, Double value) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.MapPointToInternalIPaneGRealPoint2D">
            <summary>设置 IXYDiagram.MapPointToInternal(IPane pane, GRealPoint2D point) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#Panes">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.PanesGet">
            <summary>设置 IXYDiagram.get_Panes() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#Rotated">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.RotatedGet">
            <summary>设置 IXYDiagram.get_Rotated() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#ScrollingEnabled">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.ScrollingEnabledGet">
            <summary>设置 IXYDiagram.get_ScrollingEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesX">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.SecondaryAxesXGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesX() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagram.DevExpress#Charts#Native#IXYDiagram#SecondaryAxesY">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.SecondaryAxesYGet">
            <summary>设置 IXYDiagram.get_SecondaryAxesY() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.UpdateAutoMeasureUnits">
            <summary>设置 IXYDiagram.UpdateAutoMeasureUnits() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagram.UpdateCrosshairDataIListOfRefinedSeries">
            <summary>设置 IXYDiagram.UpdateCrosshairData(IList`1&lt;RefinedSeries&gt; seriesCollection) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout">
            <summary>DevExpress.Charts.Native.IXYDiagramLabelLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.#ctor">
            <summary>初始化 type StubIXYDiagramLabelLayout 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#IXYDiagramLabelLayout#AnchorPoint">
            <summary>设置 IXYDiagramLabelLayout.get_AnchorPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.AnchorPointGet">
            <summary>设置 IXYDiagramLabelLayout.get_AnchorPoint() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.AttachBackingFieldToLabelBounds">
            <summary>附加委托以将 StubIXYDiagramLabelLayout.LabelBounds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.AttachBackingFieldToVisible">
            <summary>附加委托以将 StubIXYDiagramLabelLayout.Visible 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#IXYDiagramLabelLayout#ExcludedRectangle">
            <summary>设置 IXYDiagramLabelLayout.get_ExcludedRectangle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.ExcludedRectangleGet">
            <summary>设置 IXYDiagramLabelLayout.get_ExcludedRectangle() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#ILabelLayout#LabelBounds">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.LabelBoundsGet">
            <summary>设置 ILabelLayout.get_LabelBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.LabelBoundsSetGRect2D">
            <summary>设置 ILabelLayout.set_LabelBounds(GRect2D value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#IXYDiagramLabelLayout#ResolveOverlappingMode">
            <summary>设置 IXYDiagramLabelLayout.get_ResolveOverlappingMode() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.ResolveOverlappingModeGet">
            <summary>设置 IXYDiagramLabelLayout.get_ResolveOverlappingMode() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#IXYDiagramLabelLayout#ValidRectangle">
            <summary>设置 IXYDiagramLabelLayout.get_ValidRectangle() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.ValidRectangleGet">
            <summary>设置 IXYDiagramLabelLayout.get_ValidRectangle() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.DevExpress#Charts#Native#ILabelLayout#Visible">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.VisibleGet">
            <summary>设置 ILabelLayout.get_Visible() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYDiagramLabelLayout.VisibleSetBoolean">
            <summary>设置 ILabelLayout.set_Visible(Boolean value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYPoint">
            <summary>DevExpress.Charts.Native.IXYPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYPoint.#ctor">
            <summary>初始化 type StubIXYPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIXYPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYPoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIXYPoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYPoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYPoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYSeriesView">
            <summary>DevExpress.Charts.Native.IXYSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.#ctor">
            <summary>初始化 type StubIXYSeriesView 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#AxisXData">
            <summary>设置 IXYSeriesView.get_AxisXData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.AxisXDataGet">
            <summary>设置 IXYSeriesView.get_AxisXData() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#AxisYData">
            <summary>设置 IXYSeriesView.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.AxisYDataGet">
            <summary>设置 IXYSeriesView.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CalculateMinMaxPointRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#CompatibleViewType">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CompatibleViewTypeGet">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairConverter">
            <summary>设置 IXYSeriesView.get_CrosshairConverter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CrosshairConverterGet">
            <summary>设置 IXYSeriesView.get_CrosshairConverter() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairEnabled">
            <summary>设置 IXYSeriesView.get_CrosshairEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CrosshairEnabledGet">
            <summary>设置 IXYSeriesView.get_CrosshairEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairLabelPattern">
            <summary>设置 IXYSeriesView.get_CrosshairLabelPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.CrosshairLabelPatternGet">
            <summary>设置 IXYSeriesView.get_CrosshairLabelPattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#CalculateMinMaxPointRangeValues(DevExpress.Charts.Native.CrosshairSeriesPointEx,System.Double,System.Boolean,DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.CrosshairPaneInfoEx,DevExpress.Charts.Native.CrosshairSnapModeCore)">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GenerateRandomPoints(DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetMinMax(DevExpress.Charts.Native.IPointInteraction,System.Int32)">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointAbsMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMax(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMax(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMin(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#IsCorrectValueLevel(DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetCrosshairValues(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 IXYSeriesView.GetCrosshairValues(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetIndicatorsAffectRange">
            <summary>设置 IXYSeriesView.GetIndicatorsAffectRange() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetSeparatePaneIndicators">
            <summary>设置 IXYSeriesView.GetSeparatePaneIndicators() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GenerateRandomPointsScaleScale">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetCrosshairValuesRefinedPoint">
            <summary>设置 IXYSeriesView.GetCrosshairValues(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetIndicatorsAffectRange">
            <summary>设置 IXYSeriesView.GetIndicatorsAffectRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetMinMaxIPointInteractionInt32">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetRefinedPointAbsMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetRefinedPointMaxRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetRefinedPointMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetRefinedPointsMaxIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetRefinedPointsMinIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.GetSeparatePaneIndicators">
            <summary>设置 IXYSeriesView.GetSeparatePaneIndicators() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#Is3DView">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.Is3DViewGet">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.IsCorrectValueLevelValueLevelInternal">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#NeedFilterVisiblePoints">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.NeedFilterVisiblePointsGet">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesGroupsInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.NeedSeriesGroupsInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.NeedSeriesInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#Pane">
            <summary>设置 IXYSeriesView.get_Pane() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.PaneGet">
            <summary>设置 IXYSeriesView.get_Pane() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#PixelsPerArgument">
            <summary>设置 IXYSeriesView.get_PixelsPerArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.PixelsPerArgumentGet">
            <summary>设置 IXYSeriesView.get_PixelsPerArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#PointInterfaceType">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.PointInterfaceTypeGet">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#ISeriesView#ShouldSortPoints">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.ShouldSortPointsGet">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.DevExpress#Charts#Native#IXYSeriesView#SideMarginsEnabled">
            <summary>设置 IXYSeriesView.get_SideMarginsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYSeriesView.SideMarginsEnabledGet">
            <summary>设置 IXYSeriesView.get_SideMarginsEnabled() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYWPoint">
            <summary>DevExpress.Charts.Native.IXYWPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWPoint.#ctor">
            <summary>初始化 type StubIXYWPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IArgumentPoint#Argument">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.ArgumentGet">
            <summary>设置 IArgumentPoint.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.ArgumentSetDouble">
            <summary>设置 IArgumentPoint.set_Argument(Double value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWPoint.AttachBackingFieldToArgument">
            <summary>附加委托以将 StubIXYWPoint.Argument 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWPoint.AttachBackingFieldToValue">
            <summary>附加委托以将 StubIXYWPoint.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWPoint.AttachBackingFieldToWeight">
            <summary>附加委托以将 StubIXYWPoint.Weight 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IBasePoint#Children">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.ChildrenGet">
            <summary>设置 IBasePoint.get_Children() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IBasePoint#IsEmpty">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.IsEmptyGet">
            <summary>设置 IBasePoint.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IBasePoint#SeriesPoint">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.SeriesPointGet">
            <summary>设置 IBasePoint.get_SeriesPoint() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IXYWPoint#Size">
            <summary>设置 IXYWPoint.get_Size() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.SizeGet">
            <summary>设置 IXYWPoint.get_Size() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IValuePoint#Value">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.ValueGet">
            <summary>设置 IValuePoint.get_Value() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.ValueSetDouble">
            <summary>设置 IValuePoint.set_Value(Double value) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWPoint.DevExpress#Charts#Native#IXYWPoint#Weight">
            <summary>设置 IXYWPoint.get_Weight() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.WeightGet">
            <summary>设置 IXYWPoint.get_Weight() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWPoint.WeightSetDouble">
            <summary>设置 IXYWPoint.set_Weight(Double value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView">
            <summary>DevExpress.Charts.Native.IXYWSeriesView 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.#ctor">
            <summary>初始化 type StubIXYWSeriesView 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#AxisXData">
            <summary>设置 IXYSeriesView.get_AxisXData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.AxisXDataGet">
            <summary>设置 IXYSeriesView.get_AxisXData() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#AxisYData">
            <summary>设置 IXYSeriesView.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.AxisYDataGet">
            <summary>设置 IXYSeriesView.get_AxisYData() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CalculateMinMaxPointRangeValuesCrosshairSeriesPointExDoubleBooleanIXYDiagramCrosshairPaneInfoExCrosshairSnapModeCore">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#CompatibleViewType">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CompatibleViewTypeGet">
            <summary>设置 ISeriesView.get_CompatibleViewType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairConverter">
            <summary>设置 IXYSeriesView.get_CrosshairConverter() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CrosshairConverterGet">
            <summary>设置 IXYSeriesView.get_CrosshairConverter() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairEnabled">
            <summary>设置 IXYSeriesView.get_CrosshairEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CrosshairEnabledGet">
            <summary>设置 IXYSeriesView.get_CrosshairEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#CrosshairLabelPattern">
            <summary>设置 IXYSeriesView.get_CrosshairLabelPattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.CrosshairLabelPatternGet">
            <summary>设置 IXYSeriesView.get_CrosshairLabelPattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#CalculateMinMaxPointRangeValues(DevExpress.Charts.Native.CrosshairSeriesPointEx,System.Double,System.Boolean,DevExpress.Charts.Native.IXYDiagram,DevExpress.Charts.Native.CrosshairPaneInfoEx,DevExpress.Charts.Native.CrosshairSnapModeCore)">
            <summary>设置 ISeriesView.CalculateMinMaxPointRangeValues(CrosshairSeriesPointEx point, Double range, Boolean isHorizontalCrosshair, IXYDiagram diagram, CrosshairPaneInfoEx crosshairPaneInfo, CrosshairSnapModeCore snapMode) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#CreateContainer">
            <summary>设置 ISeriesView.CreateContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#CreateSeriesGroupsContainer">
            <summary>设置 ISeriesView.CreateSeriesGroupsContainer() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GenerateRandomPoints(DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetMinMax(DevExpress.Charts.Native.IPointInteraction,System.Int32)">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointAbsMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMax(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointMin(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMax(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#GetRefinedPointsMin(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#IsCorrectValueLevel(DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetCrosshairValues(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 IXYSeriesView.GetCrosshairValues(RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetIndicatorsAffectRange">
            <summary>设置 IXYSeriesView.GetIndicatorsAffectRange() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#GetSeparatePaneIndicators">
            <summary>设置 IXYSeriesView.GetSeparatePaneIndicators() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYWSeriesView#GetSideMargins(System.Double,System.Double)">
            <summary>设置 IXYWSeriesView.GetSideMargins(Double min, Double max) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GenerateRandomPointsScaleScale">
            <summary>设置 ISeriesView.GenerateRandomPoints(Scale argumentScaleType, Scale valueScaleType) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetCrosshairValuesRefinedPoint">
            <summary>设置 IXYSeriesView.GetCrosshairValues(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetIndicatorsAffectRange">
            <summary>设置 IXYSeriesView.GetIndicatorsAffectRange() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetMinMaxIPointInteractionInt32">
            <summary>设置 ISeriesView.GetMinMax(IPointInteraction interaction, Int32 index) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetRefinedPointAbsMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointAbsMin(RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetRefinedPointMaxRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMax(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetRefinedPointMinRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointMin(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetRefinedPointsMaxIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMax(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetRefinedPointsMinIListOfRefinedPoint">
            <summary>设置 ISeriesView.GetRefinedPointsMin(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetSeparatePaneIndicators">
            <summary>设置 IXYSeriesView.GetSeparatePaneIndicators() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.GetSideMarginsDoubleDouble">
            <summary>设置 IXYWSeriesView.GetSideMargins(Double min, Double max) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#Is3DView">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.Is3DViewGet">
            <summary>设置 ISeriesView.get_Is3DView() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.IsCorrectValueLevelValueLevelInternal">
            <summary>设置 ISeriesView.IsCorrectValueLevel(ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYWSeriesView#MaxSize">
            <summary>设置 IXYWSeriesView.get_MaxSize() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.MaxSizeGet">
            <summary>设置 IXYWSeriesView.get_MaxSize() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYWSeriesView#MinSize">
            <summary>设置 IXYWSeriesView.get_MinSize() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.MinSizeGet">
            <summary>设置 IXYWSeriesView.get_MinSize() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#NeedFilterVisiblePoints">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.NeedFilterVisiblePointsGet">
            <summary>设置 ISeriesView.get_NeedFilterVisiblePoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesGroupsInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.NeedSeriesGroupsInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesGroupsInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#NeedSeriesInteraction">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.NeedSeriesInteractionGet">
            <summary>设置 ISeriesView.get_NeedSeriesInteraction() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#Pane">
            <summary>设置 IXYSeriesView.get_Pane() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.PaneGet">
            <summary>设置 IXYSeriesView.get_Pane() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#PixelsPerArgument">
            <summary>设置 IXYSeriesView.get_PixelsPerArgument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.PixelsPerArgumentGet">
            <summary>设置 IXYSeriesView.get_PixelsPerArgument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#PointInterfaceType">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.PointInterfaceTypeGet">
            <summary>设置 ISeriesView.get_PointInterfaceType() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#ISeriesView#ShouldSortPoints">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.ShouldSortPointsGet">
            <summary>设置 ISeriesView.get_ShouldSortPoints() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.DevExpress#Charts#Native#IXYSeriesView#SideMarginsEnabled">
            <summary>设置 IXYSeriesView.get_SideMarginsEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIXYWSeriesView.SideMarginsEnabledGet">
            <summary>设置 IXYSeriesView.get_SideMarginsEnabled() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubIZoomablePane">
            <summary>DevExpress.Charts.Native.IZoomablePane 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIZoomablePane.#ctor">
            <summary>初始化 type StubIZoomablePane 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#AxisXMaxZoomPercent">
            <summary>设置 IZoomablePane.get_AxisXMaxZoomPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.AxisXMaxZoomPercentGet">
            <summary>设置 IZoomablePane.get_AxisXMaxZoomPercent() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#AxisYMaxZoomPercent">
            <summary>设置 IZoomablePane.get_AxisYMaxZoomPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.AxisYMaxZoomPercentGet">
            <summary>设置 IZoomablePane.get_AxisYMaxZoomPercent() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.BeginZooming">
            <summary>设置 IZoomablePane.BeginZooming() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#Bounds">
            <summary>设置 IZoomablePane.get_Bounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.BoundsGet">
            <summary>设置 IZoomablePane.get_Bounds() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#BeginZooming">
            <summary>设置 IZoomablePane.BeginZooming() 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#EndScrolling(DevExpress.Charts.Native.ScrollingOrientation,DevExpress.Charts.Native.NavigationType,DevExpress.Charts.Native.RangesSnapshot,DevExpress.Charts.Native.RangesSnapshot)">
            <summary>设置 IZoomablePane.EndScrolling(ScrollingOrientation orientation, NavigationType navigationType, RangesSnapshot oldRange, RangesSnapshot newRange) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#EndZooming(DevExpress.Charts.Native.NavigationType,DevExpress.Charts.Native.RangesSnapshot,DevExpress.Charts.Native.RangesSnapshot)">
            <summary>设置 IZoomablePane.EndZooming(NavigationType navigationType, RangesSnapshot oldRange, RangesSnapshot newRange) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#RangeLimitsUpdated">
            <summary>设置 IZoomablePane.RangeLimitsUpdated() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.EndScrollingScrollingOrientationNavigationTypeRangesSnapshotRangesSnapshot">
            <summary>设置 IZoomablePane.EndScrolling(ScrollingOrientation orientation, NavigationType navigationType, RangesSnapshot oldRange, RangesSnapshot newRange) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.EndZoomingNavigationTypeRangesSnapshotRangesSnapshot">
            <summary>设置 IZoomablePane.EndZooming(NavigationType navigationType, RangesSnapshot oldRange, RangesSnapshot newRange) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IPane#MappingBounds">
            <summary>设置 IPane.get_MappingBounds() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.MappingBoundsGet">
            <summary>设置 IPane.get_MappingBounds() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IPane#PaneIndex">
            <summary>设置 IPane.get_PaneIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.PaneIndexGet">
            <summary>设置 IPane.get_PaneIndex() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.RangeLimitsUpdated">
            <summary>设置 IZoomablePane.RangeLimitsUpdated() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#Rotated">
            <summary>设置 IZoomablePane.get_Rotated() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.RotatedGet">
            <summary>设置 IZoomablePane.get_Rotated() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#ScrollingByXEnabled">
            <summary>设置 IZoomablePane.get_ScrollingByXEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.ScrollingByXEnabledGet">
            <summary>设置 IZoomablePane.get_ScrollingByXEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#ScrollingByYEnabled">
            <summary>设置 IZoomablePane.get_ScrollingByYEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.ScrollingByYEnabledGet">
            <summary>设置 IZoomablePane.get_ScrollingByYEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#ZoomCacheEx">
            <summary>设置 IZoomablePane.get_ZoomCacheEx() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.ZoomCacheExGet">
            <summary>设置 IZoomablePane.get_ZoomCacheEx() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#ZoomingByXEnabled">
            <summary>设置 IZoomablePane.get_ZoomingByXEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.ZoomingByXEnabledGet">
            <summary>设置 IZoomablePane.get_ZoomingByXEnabled() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubIZoomablePane.DevExpress#Charts#Native#IZoomablePane#ZoomingByYEnabled">
            <summary>设置 IZoomablePane.get_ZoomingByYEnabled() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubIZoomablePane.ZoomingByYEnabledGet">
            <summary>设置 IZoomablePane.get_ZoomingByYEnabled() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument">
            <summary>DevExpress.Charts.Native.InteractionComparerByArgument 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.Compare(DevExpress.Charts.Native.IPointInteraction,DevExpress.Charts.Native.IPointInteraction)">
            <summary>设置 InteractionComparerByArgument.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByArgument.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.InitializeStub">
            <summary>初始化 type StubInteractionComparerByArgument 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByArgument.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMaxValue 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.Compare(DevExpress.Charts.Native.IPointInteraction,DevExpress.Charts.Native.IPointInteraction)">
            <summary>设置 InteractionComparerByMaxValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMaxValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.InitializeStub">
            <summary>初始化 type StubInteractionComparerByMaxValue 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMaxValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMinAbsValue 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.Compare(DevExpress.Charts.Native.IPointInteraction,DevExpress.Charts.Native.IPointInteraction)">
            <summary>设置 InteractionComparerByMinAbsValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinAbsValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.InitializeStub">
            <summary>初始化 type StubInteractionComparerByMinAbsValue 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinAbsValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue">
            <summary>DevExpress.Charts.Native.InteractionComparerByMinValue 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.Compare(DevExpress.Charts.Native.IPointInteraction,DevExpress.Charts.Native.IPointInteraction)">
            <summary>设置 InteractionComparerByMinValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.CompareIPointInteractionIPointInteraction">
            <summary>设置 InteractionComparerByMinValue.Compare(IPointInteraction interaction1, IPointInteraction interaction2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.InitializeStub">
            <summary>初始化 type StubInteractionComparerByMinValue 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInteractionComparerByMinValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInterlacedData">
            <summary>DevExpress.Charts.Native.InterlacedData 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInterlacedData.#ctor(System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInterlacedData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInterlacedData.InitializeStub">
            <summary>初始化 type StubInterlacedData 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInterlacedData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInterlacedData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInternalCoordinates">
            <summary>DevExpress.Charts.Native.InternalCoordinates 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInternalCoordinates.#ctor(DevExpress.Charts.Native.IPane)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalCoordinates.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInternalCoordinates.InitializeStub">
            <summary>初始化 type StubInternalCoordinates 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalCoordinates.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalCoordinates.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubInternalRange">
            <summary>DevExpress.Charts.Native.InternalRange 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInternalRange.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalRange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubInternalRange.InitializeStub">
            <summary>初始化 type StubInternalRange 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalRange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubInternalRange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider">
            <summary>DevExpress.Charts.Native.KeyColorColorizerLegendItemDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.CheckContext(System.Object)">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.CheckContextObject">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.GetValue">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.GetValue01">
            <summary>设置 KeyColorColorizerLegendItemDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.InitializeStub">
            <summary>初始化 type StubKeyColorColorizerLegendItemDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubKeyColorColorizerLegendItemDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo">
            <summary>DevExpress.Charts.Native.LightUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo.InitializeStub">
            <summary>初始化 type StubLightUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLightUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.LineGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 LineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 LineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.Closed">
            <summary>设置 LineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.ClosedGet">
            <summary>设置 LineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.CreateStrip">
            <summary>设置 LineGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.CreateStrip01">
            <summary>设置 LineGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 LineGeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 LineGeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubLineGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 LineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 LineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubLineStrip">
            <summary>DevExpress.Charts.Native.LineStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.#ctor(System.Collections.Generic.IList{DevExpress.Charts.Native.GRealPoint2D})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineStrip.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.CompleteFilling">
            <summary>设置 LineStrip.CompleteFilling() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.CompleteFilling01">
            <summary>设置 LineStrip.CompleteFilling() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.CreateInstance">
            <summary>设置 LineStrip.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.CreateInstance01">
            <summary>设置 LineStrip.CreateInstance() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.CreateUniqueStrip">
            <summary>设置 LineStrip.CreateUniqueStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.CreateUniqueStrip01">
            <summary>设置 LineStrip.CreateUniqueStrip() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.Extend(DevExpress.Charts.Native.GRealPoint2D,System.Boolean)">
            <summary>设置 LineStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.ExtendGRealPoint2DBoolean">
            <summary>设置 LineStrip.Extend(GRealPoint2D point, Boolean toLeft) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.ExtractSubStrip(System.Int32,System.Int32)">
            <summary>设置 LineStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.ExtractSubStripInt32Int32">
            <summary>设置 LineStrip.ExtractSubStrip(Int32 startIndex, Int32 endIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.InitializeStub">
            <summary>初始化 type StubLineStrip 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineStrip.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLineStrip.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLineStrip.Substiture(System.Int32,System.Int32,DevExpress.Charts.Native.LineStrip)">
            <summary>设置 LineStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubLineStrip.SubstitureInt32Int32LineStrip">
            <summary>设置 LineStrip.Substiture(Int32 startIndex, Int32 endIndex, LineStrip lineStrip) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator">
            <summary>DevExpress.Charts.Native.LogarithmicRegressionCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator.InitializeStub">
            <summary>初始化 type StubLogarithmicRegressionCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubLogarithmicRegressionCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator">
            <summary>DevExpress.Charts.Native.MassIndexCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator.InitializeStub">
            <summary>初始化 type StubMassIndexCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMassIndexCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator">
            <summary>DevExpress.Charts.Native.MaxAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 MaxAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 MaxAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.InitializeStub">
            <summary>初始化 type StubMaxAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior">
            <summary>DevExpress.Charts.Native.MaxValueFilterBehavior 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.FilterPoints(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Double)">
            <summary>设置 MaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 MaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.InitializeStub">
            <summary>初始化 type StubMaxValueFilterBehavior 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMaxValueFilterBehavior.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase">
            <summary>DevExpress.Charts.Native.MeasureUnitsCalculatorBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.InitializeStub">
            <summary>初始化 type StubMeasureUnitsCalculatorBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.UpdateAutomaticMeasureUnit(System.Double,System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries})">
            <summary>设置 MeasureUnitsCalculatorBase.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubMeasureUnitsCalculatorBase.UpdateAutomaticMeasureUnitDoubleIEnumerableOfISeries">
            <summary>设置 MeasureUnitsCalculatorBase.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator">
            <summary>DevExpress.Charts.Native.MedianPriceCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator.InitializeStub">
            <summary>初始化 type StubMedianPriceCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMedianPriceCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator">
            <summary>DevExpress.Charts.Native.MinAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 MinAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 MinAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.InitializeStub">
            <summary>初始化 type StubMinAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMinAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator">
            <summary>DevExpress.Charts.Native.MissingArgumentsCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator.#ctor(DevExpress.Charts.Native.AxisScaleTypeMap,DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator.InitializeStub">
            <summary>初始化 type StubMissingArgumentsCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMissingArgumentsCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.MovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 MovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 MovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator">
            <summary>DevExpress.Charts.Native.MovingAverageConvergenceDivergenceCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator.InitializeStub">
            <summary>初始化 type StubMovingAverageConvergenceDivergenceCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubMovingAverageConvergenceDivergenceCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer">
            <summary>DevExpress.Charts.Native.NestedDoughnutInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.GetAbsMinValue">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.GetAbsMinValue01">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InitializeStub">
            <summary>初始化 type StubNestedDoughnutInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.Max">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.MaxGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.Min">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.MinGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.Recalculate">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.Recalculate01">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RecalculateCore(System.Int32)">
            <summary>设置 NestedDoughnutInteractionContainer.RecalculateCore(Int32 groupsCount) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RecalculateCoreInt32">
            <summary>设置 NestedDoughnutInteractionContainer.RecalculateCore(Int32 groupsCount) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 NestedDoughnutInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNestedDoughnutInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.NormalizedValuesCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.CalculateNormValues">
            <summary>设置 NormalizedValuesCalculator.CalculateNormValues() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.CalculateNormValues01">
            <summary>设置 NormalizedValuesCalculator.CalculateNormValues() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.InitializeStub">
            <summary>初始化 type StubNormalizedValuesCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNormalizedValuesCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore">
            <summary>DevExpress.Charts.Native.NumericMeasureUnitsCalculatorCore 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.#ctor(DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.CreateUnitSelector">
            <summary>设置 NumericMeasureUnitsCalculatorCore.CreateUnitSelector() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.CreateUnitSelector01">
            <summary>设置 NumericMeasureUnitsCalculatorCore.CreateUnitSelector() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.InitializeStub">
            <summary>初始化 type StubNumericMeasureUnitsCalculatorCore 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.ScaleOptions">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_ScaleOptions() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.ScaleOptionsGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_ScaleOptions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticGrid(System.Double,System.Double)">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticGrid(Double measureUnit, Double pixelsPerUnit) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticGridDoubleDouble">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticGrid(Double measureUnit, Double pixelsPerUnit) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticMeasureUnit(System.Double,System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.ISeries})">
            <summary>设置 MeasureUnitsCalculatorBase`2.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticMeasureUnitDoubleIEnumerableOfISeries">
            <summary>设置 MeasureUnitsCalculatorBase`2.UpdateAutomaticMeasureUnit(Double axisLength, IEnumerable`1&lt;ISeries&gt; seriesList) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticUnits(System.Double,System.Int32)">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticUnits(Double measureUnit, Int32 pixelsPerUnit) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UpdateAutomaticUnitsDoubleInt32">
            <summary>设置 NumericMeasureUnitsCalculatorCore.UpdateAutomaticUnits(Double measureUnit, Int32 pixelsPerUnit) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UseMinMeasureUnit">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericMeasureUnitsCalculatorCore.UseMinMeasureUnitGet">
            <summary>设置 NumericMeasureUnitsCalculatorCore.get_UseMinMeasureUnit() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector">
            <summary>DevExpress.Charts.Native.NumericUnitSelector 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.InitializeStub">
            <summary>初始化 type StubNumericUnitSelector 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.SelectAlignment(System.Double,System.Double)">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.SelectAlignmentDoubleDouble">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.UpdateActiveUnits(System.Double,System.Double)">
            <summary>设置 NumericUnitSelector.UpdateActiveUnits(Double min, Double max) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericUnitSelector.UpdateActiveUnitsDoubleDouble">
            <summary>设置 NumericUnitSelector.UpdateActiveUnits(Double min, Double max) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.NumericalAxisRangeUpdateStrategy 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CalcSideMargin(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CheckInternalValue(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectInternalValue(DevExpress.Charts.Native.MinMaxValues,System.Double,System.Boolean,System.Boolean)">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectNativeValues(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectWithSideMargins(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.DefaultRange(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.InitializeStub">
            <summary>初始化 type StubNumericalAxisRangeUpdateStrategy 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.NeedCorrect(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.UpdateVisualRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.UpdateWholeRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalAxisRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.NumericalLogarithmicAxisRangeUpdateStrategy 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMargin(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CheckInternalValue(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValue(DevExpress.Charts.Native.MinMaxValues,System.Double,System.Boolean,System.Boolean)">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValues(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 NumericalLogarithmicAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectWithSideMargins(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.DefaultRange(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.InitializeStub">
            <summary>初始化 type StubNumericalLogarithmicAxisRangeUpdateStrategy 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.NeedCorrect(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.UpdateVisualRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 NumericalAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.UpdateWholeRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubNumericalLogarithmicAxisRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter">
            <summary>DevExpress.Charts.Native.ObjectTypeConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 ObjectTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ObjectTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 ObjectTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ObjectTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 ObjectTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ObjectTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.InitializeStub">
            <summary>初始化 type StubObjectTypeConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubObjectTypeConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo">
            <summary>DevExpress.Charts.Native.OnLoadEndUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo.InitializeStub">
            <summary>初始化 type StubOnLoadEndUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOnLoadEndUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx">
            <summary>DevExpress.Charts.Native.OutOfBoundsCheckerEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx.#ctor(DevExpress.Charts.Native.IAxisData,System.Boolean,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.IMinMaxValues)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx.InitializeStub">
            <summary>初始化 type StubOutOfBoundsCheckerEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubOutOfBoundsCheckerEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer">
            <summary>DevExpress.Charts.Native.PaneAxesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer.#ctor(DevExpress.Charts.Native.IPane)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer.InitializeStub">
            <summary>初始化 type StubPaneAxesContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository">
            <summary>DevExpress.Charts.Native.PaneAxesContainerRepository 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisData,System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.IAxisData},System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.IAxisData},System.Collections.Generic.IList{DevExpress.Charts.Native.IPane},System.Collections.Generic.IEnumerable{DevExpress.Charts.Native.IRefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository.InitializeStub">
            <summary>初始化 type StubPaneAxesContainerRepository 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPaneAxesContainerRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPatternDataProvider">
            <summary>DevExpress.Charts.Native.PatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 PatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.CheckContextObject">
            <summary>设置 PatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.GetValue">
            <summary>设置 PatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.GetValue01">
            <summary>设置 PatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.InitializeStub">
            <summary>初始化 type StubPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource">
            <summary>DevExpress.Charts.Native.PatternEditorValuesSource 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.#ctor(System.Object,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.#ctor(System.Object,System.Object,System.String,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.InitializeStub">
            <summary>初始化 type StubPatternEditorValuesSource 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternEditorValuesSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPatternParser">
            <summary>DevExpress.Charts.Native.PatternParser 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternParser.#ctor(System.String,DevExpress.Charts.Native.IPatternHolder)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPatternParser.InitializeStub">
            <summary>初始化 type StubPatternParser 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPatternParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior">
            <summary>DevExpress.Charts.Native.PercentMaxValueFilterBehavior 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.FilterPoints(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Double)">
            <summary>设置 PercentMaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 PercentMaxValueFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double thresholdValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.InitializeStub">
            <summary>初始化 type StubPercentMaxValueFilterBehavior 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPercentMaxValueFilterBehavior.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator">
            <summary>DevExpress.Charts.Native.PieNormalizedValuesCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.CalculateNormValues">
            <summary>设置 PieNormalizedValuesCalculator.CalculateNormValues() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.CalculateNormValues01">
            <summary>设置 PieNormalizedValuesCalculator.CalculateNormValues() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.InitializeStub">
            <summary>初始化 type StubPieNormalizedValuesCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPieNormalizedValuesCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection">
            <summary>DevExpress.Charts.Native.PointInteractionCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection.#ctor(System.Collections.Generic.Comparer{DevExpress.Charts.Native.IPointInteraction})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection.InitializeStub">
            <summary>初始化 type StubPointInteractionCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointInteractionCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider">
            <summary>DevExpress.Charts.Native.PointPatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants,DevExpress.Charts.Native.AxisScaleTypeMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 PointPatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.CheckContextObject">
            <summary>设置 PointPatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.GetValue">
            <summary>设置 PointPatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.GetValue01">
            <summary>设置 PointPatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.InitializeStub">
            <summary>初始化 type StubPointPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane">
            <summary>DevExpress.Charts.Native.PointProjectionsForPane 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane.#ctor(DevExpress.Charts.Native.IPane,DevExpress.Charts.Native.InternalCoordinates)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane.InitializeStub">
            <summary>初始化 type StubPointProjectionsForPane 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointProjectionsForPane.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointsFilter">
            <summary>DevExpress.Charts.Native.PointsFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.ClearCache">
            <summary>设置 PointsFilter.ClearCache() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsFilter.ClearCache01">
            <summary>设置 PointsFilter.ClearCache() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.GetCachedPoints">
            <summary>设置 PointsFilter.GetCachedPoints() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsFilter.GetCachedPoints01">
            <summary>设置 PointsFilter.GetCachedPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.InitializeStub">
            <summary>初始化 type StubPointsFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsFilter.NeedSortedByArgumentPoints">
            <summary>设置 PointsFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 PointsFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.Recalculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 PointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 PointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsFilter.Update">
            <summary>设置 PointsFilter.Update() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsFilter.Update01">
            <summary>设置 PointsFilter.Update() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointsProcessor">
            <summary>DevExpress.Charts.Native.PointsProcessor 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsProcessor.#ctor(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.IRefinedSeriesContainer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsProcessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsProcessor.InitializeStub">
            <summary>初始化 type StubPointsProcessor 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsProcessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsProcessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter">
            <summary>DevExpress.Charts.Native.PointsValueThresholdFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.ClearCache">
            <summary>设置 PointsValueThresholdFilter.ClearCache() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.ClearCache01">
            <summary>设置 PointsValueThresholdFilter.ClearCache() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.GetCachedPoints">
            <summary>设置 PointsValueThresholdFilter.GetCachedPoints() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.GetCachedPoints01">
            <summary>设置 PointsValueThresholdFilter.GetCachedPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.InitializeStub">
            <summary>初始化 type StubPointsValueThresholdFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.NeedSortedByArgumentPoints">
            <summary>设置 PointsValueThresholdFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 PointsValueThresholdFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.Recalculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 PointsValueThresholdFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 PointsValueThresholdFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.Update">
            <summary>设置 PointsValueThresholdFilter.Update() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubPointsValueThresholdFilter.Update01">
            <summary>设置 PointsValueThresholdFilter.Update() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo.#ctor(System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo.InitializeStub">
            <summary>初始化 type StubPropertyUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo`1 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1.#ctor(System.Object,System.String,`0,`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1.InitializeStub">
            <summary>初始化 type StubPropertyUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2">
            <summary>DevExpress.Charts.Native.PropertyUpdateInfo`2 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2.#ctor(System.Object,System.String,`1,`1,`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2.InitializeStub">
            <summary>初始化 type StubPropertyUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubPropertyUpdateInfo`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.QualitativeAxisRangeUpdateStrategy 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CalcSideMargin(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CheckInternalValue(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectInternalValue(DevExpress.Charts.Native.MinMaxValues,System.Double,System.Boolean,System.Boolean)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectNativeValues(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues corectedInternalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectWithSideMargins(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.DefaultRange(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.InitializeStub">
            <summary>初始化 type StubQualitativeAxisRangeUpdateStrategy 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.NeedCorrect(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.UpdateVisualRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.UpdateWholeRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubQualitativeAxisRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 QualitativeAxisRangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.RadarAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RadarAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RadarAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.Closed">
            <summary>设置 RadarAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.ClosedGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.CreateStrip">
            <summary>设置 RadarAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 RadarAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubRadarAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 RadarAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRadarAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 RadarAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.RandomPointsBatchUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,DevExpress.Charts.Native.ISeries,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeriesPoint},System.Int32,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeriesPoint},System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo.InitializeStub">
            <summary>初始化 type StubRandomPointsBatchUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRandomPointsBatchUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.RangeAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RangeAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 RangeAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.Closed">
            <summary>设置 RangeAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.ClosedGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.CreateStrip">
            <summary>设置 RangeAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 RangeAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubRangeAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 RangeAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 RangeAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo">
            <summary>DevExpress.Charts.Native.RangeChangedUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo.#ctor(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.IAxisData,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo.InitializeStub">
            <summary>初始化 type StubRangeChangedUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeChangedUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider">
            <summary>DevExpress.Charts.Native.RangeColorizerLegendItemDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.CheckContext(System.Object)">
            <summary>设置 RangeColorizerLegendItemDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.CheckContextObject">
            <summary>设置 RangeColorizerLegendItemDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.GetValue">
            <summary>设置 RangeColorizerLegendItemDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.GetValue01">
            <summary>设置 RangeColorizerLegendItemDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.InitializeStub">
            <summary>初始化 type StubRangeColorizerLegendItemDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeColorizerLegendItemDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeHelper">
            <summary>DevExpress.Charts.Native.RangeHelper 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeHelper.InitializeStub">
            <summary>初始化 type StubRangeHelper 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangePointInteraction">
            <summary>DevExpress.Charts.Native.RangePointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.Argument">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.Count">
            <summary>设置 RangePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.CountGet">
            <summary>设置 RangePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 RangePointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMaxValueISeriesView">
            <summary>设置 RangePointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 RangePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 RangePointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.GetMinValueISeriesView">
            <summary>设置 RangePointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.InitializeStub">
            <summary>初始化 type StubRangePointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.IsEmpty">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangePointInteraction.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo">
            <summary>DevExpress.Charts.Native.RangeResetUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo.#ctor(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo.InitializeStub">
            <summary>初始化 type StubRangeResetUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeResetUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer">
            <summary>DevExpress.Charts.Native.RangeSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InitializeStub">
            <summary>初始化 type StubRangeSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.Recalculate01">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 RangeSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeSnapshot">
            <summary>DevExpress.Charts.Native.RangeSnapshot 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.#ctor(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.#ctor(DevExpress.Charts.Native.NativeRange,DevExpress.Charts.Native.InternalRange,DevExpress.Charts.Native.MinMaxValues)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.InitializeStub">
            <summary>初始化 type StubRangeSnapshot 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeSnapshot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeStrip">
            <summary>DevExpress.Charts.Native.RangeStrip 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeStrip.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeStrip.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeStrip.CompleteFilling">
            <summary>设置 RangeStrip.CompleteFilling() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeStrip.CompleteFilling01">
            <summary>设置 RangeStrip.CompleteFilling() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeStrip.CreateBorderStrip">
            <summary>设置 RangeStrip.CreateBorderStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeStrip.CreateBorderStrip01">
            <summary>设置 RangeStrip.CreateBorderStrip() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeStrip.CreateInstance">
            <summary>设置 RangeStrip.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeStrip.CreateInstance01">
            <summary>设置 RangeStrip.CreateInstance() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeStrip.InitializeStub">
            <summary>初始化 type StubRangeStrip 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeStrip.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeStrip.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy">
            <summary>DevExpress.Charts.Native.RangeUpdateStrategy 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CalcRangeValuesInValuesMode(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CalcRangeValuesInValuesModeIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CalcRangeValuesInValuesMode(IAxisRangeData range, MinMaxValues defaultMinMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CalcSideMargin(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CalcSideMarginMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CalcSideMargin(MinMaxValues internalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CheckInternalValue(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CheckInternalValueIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CheckInternalValue(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectInternalValue(DevExpress.Charts.Native.MinMaxValues,System.Double,System.Boolean,System.Boolean)">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectInternalValueMinMaxValuesDoubleBooleanBoolean">
            <summary>设置 RangeUpdateStrategy.CorrectInternalValue(MinMaxValues internalValues, Double sideMargin, Boolean autoCorrectionMin, Boolean autoCorrectionMax) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectNativeValues(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues correctedInternalValues, IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectNativeValuesMinMaxValuesMinMaxValuesIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.CorrectNativeValues(MinMaxValues internalValues, MinMaxValues correctedInternalValues, IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectWithSideMargins(DevExpress.Charts.Native.IAxisRangeData,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.CorrectWithSideMarginsIAxisRangeDataMinMaxValues">
            <summary>设置 RangeUpdateStrategy.CorrectWithSideMargins(IAxisRangeData range, MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.DefaultRange(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.DefaultRangeIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.DefaultRange(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.IncorrectRelationBetweenMinAndMaxMinMaxValues">
            <summary>设置 RangeUpdateStrategy.IncorrectRelationBetweenMinAndMax(MinMaxValues internalValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.InitializeStub">
            <summary>初始化 type StubRangeUpdateStrategy 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.NeedCorrect(DevExpress.Charts.Native.IAxisRangeData)">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.NeedCorrectIAxisRangeData">
            <summary>设置 RangeUpdateStrategy.NeedCorrect(IAxisRangeData range) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.UpdateVisualRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.UpdateVisualRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateVisualRange(MinMaxValues visualRangeValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.UpdateWholeRange(DevExpress.Charts.Native.MinMaxValues,DevExpress.Charts.Native.MinMaxValues)">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangeUpdateStrategy.UpdateWholeRangeMinMaxValuesMinMaxValues">
            <summary>设置 RangeUpdateStrategy.UpdateWholeRange(MinMaxValues internalValues, MinMaxValues refinedValues) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRangesSnapshot">
            <summary>DevExpress.Charts.Native.RangesSnapshot 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.#ctor(DevExpress.Charts.Native.IAxisData,DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.Equals(System.Object)">
            <summary>设置 RangesSnapshot.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.EqualsObject">
            <summary>设置 RangesSnapshot.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.GetHashCode">
            <summary>设置 RangesSnapshot.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.GetHashCode01">
            <summary>设置 RangesSnapshot.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.InitializeStub">
            <summary>初始化 type StubRangesSnapshot 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRangesSnapshot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator">
            <summary>DevExpress.Charts.Native.RateOfChangeCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator.InitializeStub">
            <summary>初始化 type StubRateOfChangeCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRateOfChangeCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRectanglesLayout">
            <summary>DevExpress.Charts.Native.RectanglesLayout 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRectanglesLayout.#ctor(DevExpress.Charts.Native.GRect2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayout.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRectanglesLayout.InitializeStub">
            <summary>初始化 type StubRectanglesLayout 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayout.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayout.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm">
            <summary>DevExpress.Charts.Native.RectanglesLayoutAlgorithm 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.#ctor(DevExpress.Charts.Native.GRect2D,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.InitializeStub">
            <summary>初始化 type StubRectanglesLayoutAlgorithm 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRectanglesLayoutAlgorithm.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPoint">
            <summary>DevExpress.Charts.Native.RefinedPoint 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.RefinedPoint,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint,System.Double,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.#ctor(DevExpress.Charts.Native.ISeriesPoint,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPoint.InitializeStub">
            <summary>初始化 type StubRefinedPoint 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer">
            <summary>DevExpress.Charts.Native.RefinedPointArgumentComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer.InitializeStub">
            <summary>初始化 type StubRefinedPointArgumentComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointArgumentComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection">
            <summary>DevExpress.Charts.Native.RefinedPointCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.Add(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollection.Add(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.AddRange(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 RefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.AddRangeICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.AddRefinedPoint">
            <summary>设置 RefinedPointCollection.Add(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.Contains(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollection.Contains(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.ContainsRefinedPoint">
            <summary>设置 RefinedPointCollection.Contains(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.IndexOf(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollection.IndexOf(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.IndexOfRefinedPoint">
            <summary>设置 RefinedPointCollection.IndexOf(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.InitializeStub">
            <summary>初始化 type StubRefinedPointCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase">
            <summary>DevExpress.Charts.Native.RefinedPointCollectionBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.Add(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollectionBase.Add(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.AddRange(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 RefinedPointCollectionBase.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.AddRangeICollectionOfRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.AddRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.Add(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.Contains(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollectionBase.Contains(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.ContainsRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.Contains(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.IndexOf(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointCollectionBase.IndexOf(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.IndexOfRefinedPoint">
            <summary>设置 RefinedPointCollectionBase.IndexOf(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.InitializeStub">
            <summary>初始化 type StubRefinedPointCollectionBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointCollectionBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase">
            <summary>DevExpress.Charts.Native.RefinedPointComparerBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 Comparer`1.Compare(!0 x, !0 y) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.CompareRefinedPointRefinedPoint">
            <summary>设置 Comparer`1.Compare(!0 x, !0 y) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.InitializeStub">
            <summary>初始化 type StubRefinedPointComparerBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointComparerBase.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator">
            <summary>DevExpress.Charts.Native.RefinedPointsAggregator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator.#ctor(DevExpress.Charts.Native.AxisScaleTypeMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator.InitializeStub">
            <summary>初始化 type StubRefinedPointsAggregator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsAggregator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsArgumentAndIndexComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsArgumentAndIndexComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentAndIndexComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentAndIndexComparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsArgumentComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsArgumentComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsArgumentComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsArgumentComparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsArgumentComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsArgumentComparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer">
            <summary>DevExpress.Charts.Native.RefinedPointsRangeValue1Comparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsRangeValue1Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsRangeValue1Comparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsRangeValue1Comparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue1Comparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue1Comparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer">
            <summary>DevExpress.Charts.Native.RefinedPointsRangeValue2Comparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsRangeValue2Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsRangeValue2Comparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsRangeValue2Comparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsRangeValue2Comparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsRangeValue2Comparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsValueComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsValueComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsValueComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsValueComparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsValueComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsValueComparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer">
            <summary>DevExpress.Charts.Native.RefinedPointsWeightComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsWeightComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.InitializeStub">
            <summary>初始化 type StubRefinedPointsWeightComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointsWeightComparer.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedPointsWeightComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointsWeightComparer.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedSeries">
            <summary>DevExpress.Charts.Native.RefinedSeries 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeries.#ctor(DevExpress.Charts.Native.ISeries,DevExpress.Charts.Native.IRefinedSeriesContainer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeries.InitializeStub">
            <summary>初始化 type StubRefinedSeries 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeries.ToString">
            <summary>设置 RefinedSeries.ToString() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeries.ToString01">
            <summary>设置 RefinedSeries.ToString() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupController 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController.InitializeStub">
            <summary>初始化 type StubRefinedSeriesGroupController 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupController.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey">
            <summary>DevExpress.Charts.Native.RefinedSeriesGroupKey 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.#ctor(DevExpress.Charts.Native.IAxisData)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.#ctor(DevExpress.Charts.Native.RefinedSeries,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.Equals(System.Object)">
            <summary>设置 RefinedSeriesGroupKey.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.EqualsObject">
            <summary>设置 RefinedSeriesGroupKey.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.GetHashCode">
            <summary>设置 RefinedSeriesGroupKey.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.GetHashCode01">
            <summary>设置 RefinedSeriesGroupKey.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.InitializeStub">
            <summary>初始化 type StubRefinedSeriesGroupKey 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesGroupKey.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator">
            <summary>DevExpress.Charts.Native.RefinedSeriesIncompatibilityCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.#ctor(DevExpress.Charts.Native.SeriesIncompatibilityStatistics)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewType(DevExpress.Charts.Native.ISeries,System.Boolean,DevExpress.Charts.Native.CompatibleViewType)">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewTypeISeriesBooleanCompatibleViewType">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetAxisXkey(DevExpress.Charts.Native.IXYSeriesView)">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisXkey(IXYSeriesView view) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetAxisXkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisXkey(IXYSeriesView view) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetAxisYkey(DevExpress.Charts.Native.IXYSeriesView)">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisYkey(IXYSeriesView view) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetAxisYkeyIXYSeriesView">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetAxisYkey(IXYSeriesView view) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetView(DevExpress.Charts.Native.ISeries)">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetView(ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.GetViewISeries">
            <summary>设置 RefinedSeriesIncompatibilityCalculator.GetView(ISeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.InitializeStub">
            <summary>初始化 type StubRefinedSeriesIncompatibilityCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesIncompatibilityCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository">
            <summary>DevExpress.Charts.Native.RefinedSeriesRepository 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository.#ctor(DevExpress.Charts.Native.IChartDataContainer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository.InitializeStub">
            <summary>初始化 type StubRefinedSeriesRepository 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefinedSeriesRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo">
            <summary>DevExpress.Charts.Native.RefreshDataUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo.InitializeStub">
            <summary>初始化 type StubRefreshDataUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRefreshDataUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRegressionCalculator">
            <summary>DevExpress.Charts.Native.RegressionCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRegressionCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRegressionCalculator.InitializeStub">
            <summary>初始化 type StubRegressionCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator">
            <summary>DevExpress.Charts.Native.RegressionLineCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator.InitializeStub">
            <summary>初始化 type StubRegressionLineCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRegressionLineCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator">
            <summary>DevExpress.Charts.Native.RelativeStrengthIndexCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator.InitializeStub">
            <summary>初始化 type StubRelativeStrengthIndexCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRelativeStrengthIndexCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate">
            <summary>DevExpress.Charts.Native.ReprocessPointsUpdate 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate.InitializeStub">
            <summary>初始化 type StubReprocessPointsUpdate 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubReprocessPointsUpdate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn">
            <summary>DevExpress.Charts.Native.ResolveOverlappingByColumn 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn.InitializeStub">
            <summary>初始化 type StubResolveOverlappingByColumn 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByColumn.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse">
            <summary>DevExpress.Charts.Native.ResolveOverlappingByEllipse 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse.InitializeStub">
            <summary>初始化 type StubResolveOverlappingByEllipse 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubResolveOverlappingByEllipse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRow">
            <summary>DevExpress.Charts.Native.Row 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRow.#ctor(DevExpress.Charts.Native.GRect2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRow.#ctor(DevExpress.Charts.Native.GRect2D,System.Collections.Generic.List{DevExpress.Charts.Native.Cell})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRow.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRow.InitializeStub">
            <summary>初始化 type StubRow 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRow.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRow.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubRows">
            <summary>DevExpress.Charts.Native.Rows 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRows.#ctor(DevExpress.Charts.Native.GRect2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRows.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubRows.InitializeStub">
            <summary>初始化 type StubRows 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRows.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubRows.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure">
            <summary>DevExpress.Charts.Native.SeriesBindingProcedure 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.#ctor(DevExpress.Charts.Native.ISeries,DevExpress.Data.Browsing.DataContextBase,System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.Complete">
            <summary>设置 SeriesBindingProcedure.Complete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.Complete01">
            <summary>设置 SeriesBindingProcedure.Complete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.InitializeStub">
            <summary>初始化 type StubSeriesBindingProcedure 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.PerformPointBinding(System.Object,System.Object)">
            <summary>设置 SeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesBindingProcedure.PerformPointBindingObjectObject">
            <summary>设置 SeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate">
            <summary>DevExpress.Charts.Native.SeriesBindingUpdate 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate.InitializeStub">
            <summary>初始化 type StubSeriesBindingUpdate 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesBindingUpdate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesCollectionBatchUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeries},System.Int32,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeries},System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo.InitializeStub">
            <summary>初始化 type StubSeriesCollectionBatchUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionBatchUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesCollectionUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,DevExpress.Charts.Native.ISeries,System.Int32,DevExpress.Charts.Native.ISeries,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo.InitializeStub">
            <summary>初始化 type StubSeriesCollectionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesCollectionUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex">
            <summary>DevExpress.Charts.Native.SeriesComparerByActiveIndex 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.Compare(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesComparerByActiveIndex.Compare(RefinedSeries series1, RefinedSeries series2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.CompareRefinedSeriesRefinedSeries">
            <summary>设置 SeriesComparerByActiveIndex.Compare(RefinedSeries series1, RefinedSeries series2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.InitializeStub">
            <summary>初始化 type StubSeriesComparerByActiveIndex 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesComparerByActiveIndex.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesContainer">
            <summary>DevExpress.Charts.Native.SeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InitializeStub">
            <summary>初始化 type StubSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.Recalculate">
            <summary>设置 SeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.Recalculate01">
            <summary>设置 SeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesController">
            <summary>DevExpress.Charts.Native.SeriesController 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesController.#ctor(DevExpress.Charts.Native.IChartDataContainer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesController.#ctor(DevExpress.Charts.Native.IChartDataContainer,DevExpress.Charts.Native.CompatibleViewType,System.Boolean,DevExpress.Charts.Native.IDiagram)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesController.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesController.InitializeStub">
            <summary>初始化 type StubSeriesController 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesController.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesController.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesGeometry">
            <summary>DevExpress.Charts.Native.SeriesGeometry 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGeometry.#ctor(DevExpress.Charts.Native.StackedGeometry,DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGeometry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGeometry.InitializeStub">
            <summary>初始化 type StubSeriesGeometry 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGeometry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGeometry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer">
            <summary>DevExpress.Charts.Native.SeriesGroupsInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.GetAbsMinValue">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.GetAbsMinValue01">
            <summary>设置 SeriesGroupsInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InitializeStub">
            <summary>初始化 type StubSeriesGroupsInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.Max">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.MaxGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.Min">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.MinGet">
            <summary>设置 SeriesGroupsInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.Recalculate">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.Recalculate01">
            <summary>设置 SeriesGroupsInteractionContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RecalculateCore(System.Int32)">
            <summary>设置 SeriesGroupsInteractionContainer.RecalculateCore(Int32 groupsCount) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RecalculateCoreInt32">
            <summary>设置 SeriesGroupsInteractionContainer.RecalculateCore(Int32 groupsCount) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesGroupsInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesGroupsInteractionUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo.InitializeStub">
            <summary>初始化 type StubSeriesGroupsInteractionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsInteractionUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager">
            <summary>DevExpress.Charts.Native.SeriesGroupsManager 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager.#ctor(System.Collections.Generic.List{DevExpress.Charts.Native.RefinedSeries})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager.InitializeStub">
            <summary>初始化 type StubSeriesGroupsManager 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesGroupsManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityCalculatorBase`2 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.#ctor(DevExpress.Charts.Native.SeriesIncompatibilityStatistics)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.CheckIncompatibleViewType(DevExpress.Charts.Native.ISeries,System.Boolean,DevExpress.Charts.Native.CompatibleViewType)">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.CheckIncompatibleViewTypeISeriesBooleanCompatibleViewType">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.CheckIncompatibleViewType(ISeries series, Boolean is3DView, CompatibleViewType diagramClass) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetAxisXkey(`0)">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisXkey(!0 view) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetAxisXkeyT0">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisXkey(!0 view) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetAxisYkey(`0)">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisYkey(!0 view) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetAxisYkeyT0">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetAxisYkey(!0 view) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetView(DevExpress.Charts.Native.ISeries)">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetView(ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.GetViewISeries">
            <summary>设置 SeriesIncompatibilityCalculatorBase`2.GetView(ISeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.InitializeStub">
            <summary>初始化 type StubSeriesIncompatibilityCalculatorBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityCalculatorBase`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.InitializeStub">
            <summary>初始化 type StubSeriesIncompatibilityInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityInfo.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics">
            <summary>DevExpress.Charts.Native.SeriesIncompatibilityStatistics 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics.InitializeStub">
            <summary>初始化 type StubSeriesIncompatibilityStatistics 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesIncompatibilityStatistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer">
            <summary>DevExpress.Charts.Native.SeriesInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.GetAbsMinValue">
            <summary>设置 SeriesInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.GetAbsMinValue01">
            <summary>设置 SeriesInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InitializeStub">
            <summary>初始化 type StubSeriesInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.Max">
            <summary>设置 SeriesInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.MaxGet">
            <summary>设置 SeriesInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.Min">
            <summary>设置 SeriesInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.MinGet">
            <summary>设置 SeriesInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.Recalculate">
            <summary>设置 SeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.Recalculate01">
            <summary>设置 SeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider">
            <summary>DevExpress.Charts.Native.SeriesPatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 SeriesPatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.CheckContextObject">
            <summary>设置 SeriesPatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.GetValue">
            <summary>设置 SeriesPatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.GetValue01">
            <summary>设置 SeriesPatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.InitializeStub">
            <summary>初始化 type StubSeriesPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesPointCollectionBatchUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,DevExpress.Charts.Native.ISeries,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeriesPoint},System.Int32,System.Collections.Generic.ICollection{DevExpress.Charts.Native.ISeriesPoint},System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo.InitializeStub">
            <summary>初始化 type StubSeriesPointCollectionBatchUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionBatchUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo">
            <summary>DevExpress.Charts.Native.SeriesPointCollectionUpdateInfo 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo.#ctor(System.Object,DevExpress.Charts.Native.ChartCollectionOperation,DevExpress.Charts.Native.ISeries,DevExpress.Charts.Native.ISeriesPoint,System.Int32,DevExpress.Charts.Native.ISeriesPoint,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo.InitializeStub">
            <summary>初始化 type StubSeriesPointCollectionUpdateInfo 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointCollectionUpdateInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer">
            <summary>DevExpress.Charts.Native.SeriesPointSettingsComparer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.#ctor(System.Boolean,DevExpress.Charts.Native.SeriesPointKeyNative,DevExpress.Charts.Native.Scale,DevExpress.Charts.Native.Scale)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.Compare(DevExpress.Charts.Native.RefinedPoint,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesPointSettingsComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.CompareRefinedPointRefinedPoint">
            <summary>设置 SeriesPointSettingsComparer.Compare(RefinedPoint pointInArray, RefinedPoint newРoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.InitializeStub">
            <summary>初始化 type StubSeriesPointSettingsComparer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.IsSupportedPoint(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSeriesPointSettingsComparer.IsSupportedPointRefinedPoint">
            <summary>设置 RefinedPointComparerBase.IsSupportedPoint(RefinedPoint point) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideGroup">
            <summary>DevExpress.Charts.Native.SideBySideGroup 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.InitializeStub">
            <summary>初始化 type StubSideBySideGroup 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.IsEmpty">
            <summary>设置 SideBySideGroup.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.IsEmptyGet">
            <summary>设置 SideBySideGroup.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideGroup.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroup.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.UpdateInteractionKeys(System.Int32,DevExpress.Charts.Native.SideBySideInteractionBase)">
            <summary>设置 SideBySideGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroup.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase">
            <summary>DevExpress.Charts.Native.SideBySideGroupBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.InitializeStub">
            <summary>初始化 type StubSideBySideGroupBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.IsEmpty">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.IsEmptyGet">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.UpdateInteractionKeys(System.Int32,DevExpress.Charts.Native.SideBySideInteractionBase)">
            <summary>设置 SideBySideGroupBase.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideGroupBase.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideGroupBase.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase">
            <summary>DevExpress.Charts.Native.SideBySideInteractionBase 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.Argument">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.ArgumentGet">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.CreateGroup(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionBase.CreateGroup(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.CreateGroupRefinedSeries">
            <summary>设置 SideBySideInteractionBase.CreateGroup(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.InitializeStub">
            <summary>初始化 type StubSideBySideInteractionBase 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.OnInsertPoint(System.Int32,DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.RemovePoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionBase.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer">
            <summary>DevExpress.Charts.Native.SideBySideInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.GetAbsMinValue">
            <summary>设置 SideBySideInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.GetAbsMinValue01">
            <summary>设置 SideBySideInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InitializeStub">
            <summary>初始化 type StubSideBySideInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.Max">
            <summary>设置 SideBySideInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.MaxGet">
            <summary>设置 SideBySideInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.Min">
            <summary>设置 SideBySideInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.MinGet">
            <summary>设置 SideBySideInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.Recalculate">
            <summary>设置 SideBySideInteractionContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.Recalculate01">
            <summary>设置 SideBySideInteractionContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SideBySideInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction">
            <summary>DevExpress.Charts.Native.SideBySidePointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.#ctor(System.Double,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.Argument">
            <summary>设置 SideBySidePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.ArgumentGet">
            <summary>设置 SideBySidePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.CreateGroup(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySidePointInteraction.CreateGroup(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.CreateGroupRefinedSeries">
            <summary>设置 SideBySidePointInteraction.CreateGroup(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.InitializeStub">
            <summary>初始化 type StubSideBySidePointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.OnInsertPoint(System.Int32,DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySidePointInteraction.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.RemovePoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySidePointInteraction.RemovePoint(RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySidePointInteraction.RemovePoint(RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySidePointInteraction.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup">
            <summary>DevExpress.Charts.Native.SideBySideSeriesGroup 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.InitializeStub">
            <summary>初始化 type StubSideBySideSeriesGroup 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.IsEmpty">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.IsEmptyGet">
            <summary>设置 SideBySideGroupBase.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideGroupBase.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.UpdateInteractionKeys(System.Int32,DevExpress.Charts.Native.SideBySideInteractionBase)">
            <summary>设置 SideBySideSeriesGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesGroup.UpdateInteractionKeysInt32SideBySideInteractionBase">
            <summary>设置 SideBySideSeriesGroup.UpdateInteractionKeys(Int32 index, SideBySideInteractionBase interaction) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction">
            <summary>DevExpress.Charts.Native.SideBySideSeriesInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.Argument">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.ArgumentGet">
            <summary>设置 SideBySideInteractionBase.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.CreateGroup(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideSeriesInteraction.CreateGroup(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.CreateGroupRefinedSeries">
            <summary>设置 SideBySideSeriesInteraction.CreateGroup(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.InitializeStub">
            <summary>初始化 type StubSideBySideSeriesInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.OnInsertPoint(System.Int32,DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.OnInsertPointInt32RefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.OnInsertPoint(Int32 groupIndex, RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.RemovePoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.RemovePointRefinedSeriesRefinedPoint">
            <summary>设置 SideBySideInteractionBase.RemovePoint(RefinedSeries series, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSideBySideSeriesInteraction.RemoveSeriesRefinedSeries">
            <summary>设置 SideBySideInteractionBase.RemoveSeries(RefinedSeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure">
            <summary>DevExpress.Charts.Native.SimpleChartBindingProcedure 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.#ctor(DevExpress.Data.Browsing.DataContextBase,System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.Complete(DevExpress.Charts.Native.ISeries)">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.CompleteISeries">
            <summary>设置 ChartBindingProcedure.Complete(ISeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.InitializeStub">
            <summary>初始化 type StubSimpleChartBindingProcedure 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.PerformPointBinding(DevExpress.Charts.Native.ISeriesTemplate,System.Object,System.Object,System.Collections.Generic.IList{System.String},System.String,DevExpress.Charts.Native.ISeries)">
            <summary>设置 SimpleChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleChartBindingProcedure.PerformPointBindingISeriesTemplateObjectObjectIListOfStringStringISeries">
            <summary>设置 SimpleChartBindingProcedure.PerformPointBinding(ISeriesTemplate seriesTemplate, Object argument, Object dataRow, IList`1&lt;String&gt; valueDataMembers, String toolTipHintDataMember, ISeries series) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper">
            <summary>DevExpress.Charts.Native.SimpleDiagramAutoLayoutHelper 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper.InitializeStub">
            <summary>初始化 type StubSimpleDiagramAutoLayoutHelper 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramAutoLayoutHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping">
            <summary>DevExpress.Charts.Native.SimpleDiagramResolveOverlapping 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping.InitializeStub">
            <summary>初始化 type StubSimpleDiagramResolveOverlapping 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleDiagramResolveOverlapping.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.SimpleMovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 SimpleMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 SimpleMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubSimpleMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction">
            <summary>DevExpress.Charts.Native.SimplePointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.Argument">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.Count">
            <summary>设置 SimplePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.CountGet">
            <summary>设置 SimplePointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 SimplePointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMaxValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 SimplePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 SimplePointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.GetMinValueISeriesView">
            <summary>设置 SimplePointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.InitializeStub">
            <summary>初始化 type StubSimplePointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.IsEmpty">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointInteraction.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider">
            <summary>DevExpress.Charts.Native.SimplePointPatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.CheckContext(System.Object)">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.CheckContextObject">
            <summary>设置 SimplePointPatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.GetPercentValue">
            <summary>设置 SimplePointPatternDataProvider.GetPercentValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.GetPercentValue01">
            <summary>设置 SimplePointPatternDataProvider.GetPercentValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.GetValue">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.GetValue01">
            <summary>设置 SimplePointPatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.InitializeStub">
            <summary>初始化 type StubSimplePointPatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimplePointPatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure">
            <summary>DevExpress.Charts.Native.SimpleSeriesBindingProcedure 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.#ctor(DevExpress.Charts.Native.ISeries,DevExpress.Data.Browsing.DataContextBase,System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.Complete">
            <summary>设置 SeriesBindingProcedure.Complete() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.Complete01">
            <summary>设置 SeriesBindingProcedure.Complete() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.InitializeStub">
            <summary>初始化 type StubSimpleSeriesBindingProcedure 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.PerformPointBinding(System.Object,System.Object)">
            <summary>设置 SimpleSeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesBindingProcedure.PerformPointBindingObjectObject">
            <summary>设置 SimpleSeriesBindingProcedure.PerformPointBinding(Object argument, Object dataRow) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer">
            <summary>DevExpress.Charts.Native.SimpleSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InitializeStub">
            <summary>初始化 type StubSimpleSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.Recalculate01">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SimpleSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSimpleSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer">
            <summary>DevExpress.Charts.Native.SingleSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InitializeStub">
            <summary>初始化 type StubSingleSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.Recalculate01">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 SeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 SeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSingleSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection">
            <summary>DevExpress.Charts.Native.SortedRefinedPointCollection 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.#ctor(System.Int32,DevExpress.Charts.Native.RefinedPointComparerBase)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.Add(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SortedRefinedPointCollection.Add(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.AddRange(System.Collections.Generic.ICollection{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 SortedRefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.AddRangeICollectionOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.AddRange(ICollection`1&lt;RefinedPoint&gt; collection) 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.AddRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Add(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.Contains(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SortedRefinedPointCollection.Contains(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.ContainsRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.Contains(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.IndexOf(DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SortedRefinedPointCollection.IndexOf(RefinedPoint item) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.IndexOfRefinedPoint">
            <summary>设置 SortedRefinedPointCollection.IndexOf(RefinedPoint item) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.InitializeStub">
            <summary>初始化 type StubSortedRefinedPointCollection 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSortedRefinedPointCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SplineAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.Closed">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.ClosedGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.CreateStrip">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubSplineAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.#ctor(System.Double,DevExpress.Charts.Native.ITransformation,DevExpress.Charts.Native.ITransformation)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SplineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.Closed">
            <summary>设置 SplineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.ClosedGet">
            <summary>设置 SplineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.CreateStrip">
            <summary>设置 SplineGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.CreateStrip01">
            <summary>设置 SplineGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubSplineGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 SplineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 SplineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.SplineStackedAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 SplineStackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 SplineStackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.Closed">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.ClosedGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.CreateStrip">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 SplineAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubSplineStackedAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSplineStackedAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 SplineAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StackedAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.Closed">
            <summary>设置 StackedAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.ClosedGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.CreateStrip">
            <summary>设置 StackedAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 StackedAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubStackedAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 StackedAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StackedAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedGeometry">
            <summary>DevExpress.Charts.Native.StackedGeometry 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedGeometry.#ctor(System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGeometry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedGeometry.InitializeStub">
            <summary>初始化 type StubStackedGeometry 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGeometry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGeometry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedGroupKey">
            <summary>DevExpress.Charts.Native.StackedGroupKey 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedGroupKey.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGroupKey.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedGroupKey.InitializeStub">
            <summary>初始化 type StubStackedGroupKey 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGroupKey.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedGroupKey.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer">
            <summary>DevExpress.Charts.Native.StackedInteractionContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.#ctor(DevExpress.Charts.Native.ISeriesView,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.AddSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.AddSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.AddSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.CreatePointInteraction(System.Int32,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.CreatePointInteractionInt32RefinedPoint">
            <summary>设置 StackedInteractionContainer.CreatePointInteraction(Int32 seriesIndex, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.GetAbsMinValue">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.GetAbsMinValue01">
            <summary>设置 StackedInteractionContainer.GetAbsMinValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InitializeStub">
            <summary>初始化 type StubStackedInteractionContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.Max">
            <summary>设置 StackedInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.MaxGet">
            <summary>设置 StackedInteractionContainer.get_Max() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.Min">
            <summary>设置 StackedInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.MinGet">
            <summary>设置 StackedInteractionContainer.get_Min() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.Recalculate">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.Recalculate01">
            <summary>设置 StackedInteractionContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 StackedInteractionContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.RemoveSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.RemoveSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedInteractionContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SeriesInteractionContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StackedLineGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StackedLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StackedLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.Closed">
            <summary>设置 StackedLineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.ClosedGet">
            <summary>设置 StackedLineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.CreateStrip">
            <summary>设置 StackedLineGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.CreateStrip01">
            <summary>设置 StackedLineGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubStackedLineGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 StackedLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StackedLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction">
            <summary>DevExpress.Charts.Native.StackedPointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.#ctor(System.Collections.Generic.List{DevExpress.Charts.Native.RefinedSeries},System.Int32,DevExpress.Charts.Native.RefinedPoint)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.Argument">
            <summary>设置 StackedPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.ArgumentGet">
            <summary>设置 StackedPointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.Count">
            <summary>设置 StackedPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.CountGet">
            <summary>设置 StackedPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMaxValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetMinValueISeriesView">
            <summary>设置 StackedPointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetStackedPointMaxValue(System.Int32)">
            <summary>设置 StackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetStackedPointMaxValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMaxValue(Int32 pointIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetStackedPointMinValue(System.Int32)">
            <summary>设置 StackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.GetStackedPointMinValueInt32">
            <summary>设置 StackedPointInteraction.GetStackedPointMinValue(Int32 pointIndex) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.InitializeStub">
            <summary>初始化 type StubStackedPointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.IsEmpty">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.IsEmptyGet">
            <summary>设置 StackedPointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MaxValue">
            <summary>设置 StackedPointInteraction.get_MaxValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MaxValueGet">
            <summary>设置 StackedPointInteraction.get_MaxValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MinAbsValue">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MinAbsValueGet">
            <summary>设置 StackedPointInteraction.get_MinAbsValue() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MinValue">
            <summary>设置 StackedPointInteraction.get_MinValue() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStackedPointInteraction.MinValueGet">
            <summary>设置 StackedPointInteraction.get_MinValue() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator">
            <summary>DevExpress.Charts.Native.StandardDeviationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator.InitializeStub">
            <summary>初始化 type StubStandardDeviationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStandardDeviationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStep">
            <summary>DevExpress.Charts.Native.Step 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStep.#ctor(System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStep.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStep.Increment">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStep.IncrementGet">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStep.InitializeStub">
            <summary>初始化 type StubStep 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStep.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStep.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStep.IsEndPosition(System.Int32)">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStep.IsEndPositionInt32">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStep.UpdatePrimaryTestPositions">
            <summary>设置 Step.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStep.UpdatePrimaryTestPositions01">
            <summary>设置 Step.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStep.UpdateSecondaryTestPositions">
            <summary>设置 Step.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStep.UpdateSecondaryTestPositions01">
            <summary>设置 Step.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StepAreaGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StepAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepAreaGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.Closed">
            <summary>设置 StepAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.ClosedGet">
            <summary>设置 StepAreaGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.CreateStrip">
            <summary>设置 StepAreaGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.CreateStrip01">
            <summary>设置 StepAreaGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 GeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubStepAreaGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 StepAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepAreaGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StepAreaGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator">
            <summary>DevExpress.Charts.Native.StepLineGeometryStripCreator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.AddStripElement(DevExpress.Charts.Native.IGeometryStrip,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 StepLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.AddStripElementIGeometryStripRefinedPoint">
            <summary>设置 StepLineGeometryStripCreator.AddStripElement(IGeometryStrip strip, RefinedPoint refinedPoint) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.Closed">
            <summary>设置 StepLineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.ClosedGet">
            <summary>设置 StepLineGeometryStripCreator.get_Closed() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.CreateStrip">
            <summary>设置 StepLineGeometryStripCreator.CreateStrip() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.CreateStrip01">
            <summary>设置 StepLineGeometryStripCreator.CreateStrip() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.FilteringPointsSupported">
            <summary>设置 StepLineGeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.FilteringPointsSupportedGet">
            <summary>设置 StepLineGeometryStripCreator.get_FilteringPointsSupported() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.InitializeStub">
            <summary>初始化 type StubStepLineGeometryStripCreator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.ShouldAddEmptyStrip">
            <summary>设置 StepLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepLineGeometryStripCreator.ShouldAddEmptyStripGet">
            <summary>设置 StepLineGeometryStripCreator.get_ShouldAddEmptyStrip() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepToBottom">
            <summary>DevExpress.Charts.Native.StepToBottom 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 StepToBottom.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToBottom.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 StepToBottom.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.CalcNearPositionCell">
            <summary>设置 StepToBottom.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToBottom.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToBottom.Increment">
            <summary>设置 StepToBottom.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.IncrementGet">
            <summary>设置 StepToBottom.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.InitializeStub">
            <summary>初始化 type StubStepToBottom 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToBottom.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToBottom.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.IsEndPosition(System.Int32)">
            <summary>设置 StepToBottom.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.IsEndPositionInt32">
            <summary>设置 StepToBottom.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.UpdatePrimaryTestPositions">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.UpdatePrimaryTestPositions01">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToBottom.UpdateSecondaryTestPositions">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToBottom.UpdateSecondaryTestPositions01">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepToRight">
            <summary>DevExpress.Charts.Native.StepToRight 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 StepToRight.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToRight.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 StepToRight.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.CalcNearPositionCell">
            <summary>设置 StepToRight.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToRight.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToRight.Increment">
            <summary>设置 StepToRight.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.IncrementGet">
            <summary>设置 StepToRight.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.InitializeStub">
            <summary>初始化 type StubStepToRight 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToRight.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToRight.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.IsEndPosition(System.Int32)">
            <summary>设置 StepToRight.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.IsEndPositionInt32">
            <summary>设置 StepToRight.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.UpdatePrimaryTestPositions">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.UpdatePrimaryTestPositions01">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToRight.UpdateSecondaryTestPositions">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToRight.UpdateSecondaryTestPositions01">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepToTop">
            <summary>DevExpress.Charts.Native.StepToTop 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 StepToTop.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToTop.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 StepToTop.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.CalcNearPositionCell">
            <summary>设置 StepToTop.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToTop.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToTop.Increment">
            <summary>设置 StepToTop.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.IncrementGet">
            <summary>设置 StepToTop.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.InitializeStub">
            <summary>初始化 type StubStepToTop 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToTop.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToTop.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.IsEndPosition(System.Int32)">
            <summary>设置 StepToTop.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.IsEndPositionInt32">
            <summary>设置 StepToTop.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.UpdatePrimaryTestPositions">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.UpdatePrimaryTestPositions01">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToTop.UpdateSecondaryTestPositions">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToTop.UpdateSecondaryTestPositions01">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStepToleft">
            <summary>DevExpress.Charts.Native.StepToleft 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 StepToleft.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 StepToleft.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 StepToleft.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.CalcNearPositionCell">
            <summary>设置 StepToleft.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToleft.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToleft.Increment">
            <summary>设置 StepToleft.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.IncrementGet">
            <summary>设置 StepToleft.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.InitializeStub">
            <summary>初始化 type StubStepToleft 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToleft.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStepToleft.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.IsEndPosition(System.Int32)">
            <summary>设置 StepToleft.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.IsEndPositionInt32">
            <summary>设置 StepToleft.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.UpdatePrimaryTestPositions">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.UpdatePrimaryTestPositions01">
            <summary>设置 HorizontalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStepToleft.UpdateSecondaryTestPositions">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubStepToleft.UpdateSecondaryTestPositions01">
            <summary>设置 HorizontalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubStripRange">
            <summary>DevExpress.Charts.Native.StripRange 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStripRange.#ctor(DevExpress.Charts.Native.GRealPoint2D,DevExpress.Charts.Native.GRealPoint2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStripRange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubStripRange.InitializeStub">
            <summary>初始化 type StubStripRange 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStripRange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubStripRange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator">
            <summary>DevExpress.Charts.Native.SumAggregationCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.Calculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 SumAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.CalculateIListOfRefinedPoint">
            <summary>设置 SumAggregationCalculator.Calculate(IList`1&lt;RefinedPoint&gt; points) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.InitializeStub">
            <summary>初始化 type StubSumAggregationCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubSumAggregationCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipBubbleValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipBubbleValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipBubbleValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipBubbleValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipFinancialValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipFinancialValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipFinancialValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFinancialValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipFullStackedValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipFullStackedValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipFullStackedValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipPercentValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipPercentValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPercentValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipPointDataToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipPointDataToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPointDataToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipPointDataToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipPointDataToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipRangeValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipRangeValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipRangeValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipRangeValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipRangeValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipRangeValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipSimpleDiagramValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipPercentValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipSimpleDiagramValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipSimpleDiagramValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter">
            <summary>DevExpress.Charts.Native.ToolTipValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.#ctor(DevExpress.Charts.Native.ISeries,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.DefaultValuePattern">
            <summary>设置 ToolTipValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.DefaultValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_DefaultValuePattern() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.GroupedPointValuePattern">
            <summary>设置 ToolTipValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.GroupedPointValuePatternGet">
            <summary>设置 ToolTipValueToStringConverter.get_GroupedPointValuePattern() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.InitializeStub">
            <summary>初始化 type StubToolTipValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubToolTipValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior">
            <summary>DevExpress.Charts.Native.TopNFilterBehavior 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.FilterPoints(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Double)">
            <summary>设置 TopNFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 TopNFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.InitializeStub">
            <summary>初始化 type StubTopNFilterBehavior 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTopNFilterBehavior.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator">
            <summary>DevExpress.Charts.Native.TrendLineCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator.InitializeStub">
            <summary>初始化 type StubTrendLineCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTrendLineCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.TriangularMovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 TriangularMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TriangularMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubTriangularMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTriangularMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.TripleExponentialMovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 TripleExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 TripleExponentialMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubTripleExponentialMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator">
            <summary>DevExpress.Charts.Native.TripleExponentialMovingAverageTrixCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator.InitializeStub">
            <summary>初始化 type StubTripleExponentialMovingAverageTrixCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTripleExponentialMovingAverageTrixCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator">
            <summary>DevExpress.Charts.Native.TypicalPriceCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator.InitializeStub">
            <summary>初始化 type StubTypicalPriceCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubTypicalPriceCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubUnitContainer`2">
            <summary>DevExpress.Charts.Native.UnitContainer`2 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitContainer`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitContainer`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitContainer`2.InitializeStub">
            <summary>初始化 type StubUnitContainer 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitContainer`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitContainer`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubUnitSelector`2">
            <summary>DevExpress.Charts.Native.UnitSelector`2 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.InitializeStub">
            <summary>初始化 type StubUnitSelector 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.SelectAlignment(System.Double,System.Double)">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.SelectAlignmentDoubleDouble">
            <summary>设置 UnitSelector`2.SelectAlignment(Double value, Double previousValue) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.UpdateActiveUnits(System.Double,System.Double)">
            <summary>设置 UnitSelector`2.UpdateActiveUnits(Double min, Double max) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubUnitSelector`2.UpdateActiveUnitsDoubleDouble">
            <summary>设置 UnitSelector`2.UpdateActiveUnits(Double min, Double max) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior">
            <summary>DevExpress.Charts.Native.ValueThresholdFilterBehavior 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.FilterPoints(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Double)">
            <summary>设置 ValueThresholdFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.FilterPointsIListOfRefinedPointDouble">
            <summary>设置 ValueThresholdFilterBehavior.FilterPoints(IList`1&lt;RefinedPoint&gt; initialPoints, Double valueThreshold) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.InitializeStub">
            <summary>初始化 type StubValueThresholdFilterBehavior 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueThresholdFilterBehavior.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubValueToStringConverter">
            <summary>DevExpress.Charts.Native.ValueToStringConverter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.#ctor(DevExpress.Charts.Native.INumericOptions,DevExpress.Charts.Native.IDateTimeOptions)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.ConvertTo(System.Object[])">
            <summary>设置 ValueToStringConverter.ConvertTo(Object[] values) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.ConvertToObjectArray">
            <summary>设置 ValueToStringConverter.ConvertTo(Object[] values) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.GetValue(System.Object[])">
            <summary>设置 ValueToStringConverter.GetValue(Object[] values) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.GetValueObjectArray">
            <summary>设置 ValueToStringConverter.GetValue(Object[] values) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.InitializeStub">
            <summary>初始化 type StubValueToStringConverter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValueToStringConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider">
            <summary>DevExpress.Charts.Native.ValuesSourcePatternDataProvider 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.#ctor(DevExpress.Charts.Native.PatternConstants)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.CheckContext(System.Object)">
            <summary>设置 ValuesSourcePatternDataProvider.CheckContext(Object value) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.CheckContextObject">
            <summary>设置 ValuesSourcePatternDataProvider.CheckContext(Object value) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.GetValue">
            <summary>设置 ValuesSourcePatternDataProvider.GetValue() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.GetValue01">
            <summary>设置 ValuesSourcePatternDataProvider.GetValue() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.InitializeStub">
            <summary>初始化 type StubValuesSourcePatternDataProvider 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubValuesSourcePatternDataProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubVerticalStep">
            <summary>DevExpress.Charts.Native.VerticalStep 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.#ctor(System.Int32,System.Int32,DevExpress.Charts.Native.GRect2D,DevExpress.Charts.Native.RectanglesLayout)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.CalcFarPositions(DevExpress.Charts.Native.Cell,DevExpress.Charts.Native.GPoint2D@,DevExpress.Charts.Native.GPoint2D@)">
            <summary>设置 VerticalStep.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.CalcFarPositionsCellGPoint2DOutGPoint2DOut">
            <summary>设置 VerticalStep.CalcFarPositions(Cell cell, GPoint2D&amp; point1, GPoint2D&amp; point2) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.CalcNearPosition(DevExpress.Charts.Native.Cell)">
            <summary>设置 VerticalStep.CalcNearPosition(Cell cell) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.CalcNearPositionCell">
            <summary>设置 VerticalStep.CalcNearPosition(Cell cell) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVerticalStep.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVerticalStep.Increment">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.IncrementGet">
            <summary>设置 Step.get_Increment() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.InitializeStub">
            <summary>初始化 type StubVerticalStep 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVerticalStep.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVerticalStep.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.IsEndPosition(System.Int32)">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.IsEndPositionInt32">
            <summary>设置 Step.IsEndPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.UpdatePrimaryTestPositions">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.UpdatePrimaryTestPositions01">
            <summary>设置 VerticalStep.UpdatePrimaryTestPositions() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVerticalStep.UpdateSecondaryTestPositions">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubVerticalStep.UpdateSecondaryTestPositions01">
            <summary>设置 VerticalStep.UpdateSecondaryTestPositions() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator">
            <summary>DevExpress.Charts.Native.VisibilityCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator.#ctor(DevExpress.Charts.Native.GRealSize2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator.InitializeStub">
            <summary>初始化 type StubVisibilityCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion">
            <summary>DevExpress.Charts.Native.VisibilityLayoutRegion 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.#ctor(DevExpress.Charts.Native.GRealSize2D,System.Collections.Generic.List{DevExpress.Charts.Native.ISupportVisibilityControlElement})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.#ctor(DevExpress.Charts.Native.GRealSize2D,System.Collections.Generic.List{DevExpress.Charts.Native.ISupportVisibilityControlElement},System.Collections.Generic.List{DevExpress.Charts.Native.ISupportVisibilityControlElement})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.InitializeStub">
            <summary>初始化 type StubVisibilityLayoutRegion 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubVisibilityLayoutRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator">
            <summary>DevExpress.Charts.Native.WeightedCloseCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator.InitializeStub">
            <summary>初始化 type StubWeightedCloseCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedCloseCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator">
            <summary>DevExpress.Charts.Native.WeightedMovingAverageCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.CalculateMovingAverageData(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint},System.Int32,DevExpress.Charts.Native.ValueLevelInternal)">
            <summary>设置 WeightedMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.CalculateMovingAverageDataIListOfRefinedPointInt32ValueLevelInternal">
            <summary>设置 WeightedMovingAverageCalculator.CalculateMovingAverageData(IList`1&lt;RefinedPoint&gt; refinedPoints, Int32 pointsCount, ValueLevelInternal valueLevel) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.InitializeStub">
            <summary>初始化 type StubWeightedMovingAverageCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWeightedMovingAverageCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator">
            <summary>DevExpress.Charts.Native.WilliamsRCalculator 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator.InitializeStub">
            <summary>初始化 type StubWilliamsRCalculator 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWilliamsRCalculator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter">
            <summary>DevExpress.Charts.Native.WorkdaysPointsFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.#ctor(DevExpress.Charts.Native.RefinedSeries)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.ClearCache">
            <summary>设置 WorkdaysPointsFilter.ClearCache() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.ClearCache01">
            <summary>设置 WorkdaysPointsFilter.ClearCache() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.GetCachedPoints">
            <summary>设置 WorkdaysPointsFilter.GetCachedPoints() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.GetCachedPoints01">
            <summary>设置 WorkdaysPointsFilter.GetCachedPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.InitializeStub">
            <summary>初始化 type StubWorkdaysPointsFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.NeedSortedByArgumentPoints">
            <summary>设置 WorkdaysPointsFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.NeedSortedByArgumentPointsGet">
            <summary>设置 WorkdaysPointsFilter.get_NeedSortedByArgumentPoints() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.Recalculate(System.Collections.Generic.IList{DevExpress.Charts.Native.RefinedPoint})">
            <summary>设置 WorkdaysPointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.RecalculateIListOfRefinedPoint">
            <summary>设置 WorkdaysPointsFilter.Recalculate(IList`1&lt;RefinedPoint&gt; initialPoints) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.Update">
            <summary>设置 WorkdaysPointsFilter.Update() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubWorkdaysPointsFilter.Update01">
            <summary>设置 WorkdaysPointsFilter.Update() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer">
            <summary>DevExpress.Charts.Native.XYSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InitializeStub">
            <summary>初始化 type StubXYSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 XYSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 XYSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.Recalculate01">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries series) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction">
            <summary>DevExpress.Charts.Native.XYWPointInteraction 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.#ctor(DevExpress.Charts.Native.IXYWSeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.Argument">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.ArgumentGet">
            <summary>设置 BasePointInteraction.get_Argument() 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.Count">
            <summary>设置 XYWPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.CountGet">
            <summary>设置 XYWPointInteraction.get_Count() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMaxValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 XYWPointInteraction.GetMaxValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMaxValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMaxValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMinAbsValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 XYWPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMinAbsValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinAbsValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMinValue(DevExpress.Charts.Native.ISeriesView)">
            <summary>设置 XYWPointInteraction.GetMinValue(ISeriesView seriesView) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.GetMinValueISeriesView">
            <summary>设置 XYWPointInteraction.GetMinValue(ISeriesView seriesView) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.InitializeStub">
            <summary>初始化 type StubXYWPointInteraction 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.IsEmpty">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWPointInteraction.IsEmptyGet">
            <summary>设置 BasePointInteraction.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer">
            <summary>DevExpress.Charts.Native.XYWSeriesContainer 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.#ctor(DevExpress.Charts.Native.ISeriesView)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InitializeStub">
            <summary>初始化 type StubXYWSeriesContainer 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InsertRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InsertRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InsertRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InsertRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.InsertRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.Recalculate">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.Recalculate01">
            <summary>设置 SingleSeriesContainer.Recalculate() 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.RemoveRefinedPoint(DevExpress.Charts.Native.RefinedSeries,DevExpress.Charts.Native.RefinedPoint)">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.RemoveRefinedPointRefinedSeriesRefinedPoint">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoint(RefinedSeries refinedSeries, RefinedPoint point) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.RemoveRefinedPoints(System.Int32,DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.RemoveRefinedPointsInt32RefinedSeries">
            <summary>设置 XYWSeriesContainer.RemoveRefinedPoints(Int32 seriesIndex, RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.ResetRefinedSeries(DevExpress.Charts.Native.RefinedSeries)">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.Native.Fakes.StubXYWSeriesContainer.ResetRefinedSeriesRefinedSeries">
            <summary>设置 SingleSeriesContainer.ResetRefinedSeries(RefinedSeries refinedSeries) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubZoomCacheEx">
            <summary>DevExpress.Charts.Native.ZoomCacheEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubZoomCacheEx.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubZoomCacheEx.InitializeStub">
            <summary>初始化 type StubZoomCacheEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx">
            <summary>DevExpress.Charts.Native.ZoomCacheItemEx 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx.#ctor(DevExpress.Charts.Native.PaneAxesContainer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx.InitializeStub">
            <summary>初始化 type StubZoomCacheItemEx 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.Native.Fakes.StubZoomCacheItemEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification">
            <summary>DevExpress.Charts.NotificationCenter.Notification 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.#ctor(DevExpress.Charts.NotificationCenter.Notification)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.AllInstances.IdentifierGet">
            <summary>设置 Notification.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.AllInstances.SenderGet">
            <summary>设置 Notification.get_Sender() 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.ConstructorObjectObject">
            <summary>设置 Notification.Notification(Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.IdentifierGet">
            <summary>设置 Notification.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotification.SenderGet">
            <summary>设置 Notification.get_Sender() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter">
            <summary>DevExpress.Charts.NotificationCenter.NotificationCenter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.#ctor(DevExpress.Charts.NotificationCenter.NotificationCenter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.AllowNotificationsType">
            <summary>设置 NotificationCenter.AllowNotifications(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.DenyNotificationsType">
            <summary>设置 NotificationCenter.DenyNotifications(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.IsDeniedNotification">
            <summary>设置 NotificationCenter.IsDenied(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.ProcessNotifications">
            <summary>设置 NotificationCenter.ProcessNotifications() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.RegisterObserverINotificationObserver">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.RegisterObserverINotificationObserverNotificationFilterCredentials">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.RegisterObserverINotificationObserverType">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.RegisterObserverINotificationObserverTypeObject">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType, Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.RegisterObserverINotificationObserverTypeObjectObject">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType, Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.SendNotification">
            <summary>设置 NotificationCenter.Send(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.UnregisterObserverINotificationObserver">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.UnregisterObserverINotificationObserverType">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.UnregisterObserverINotificationObserverTypeObject">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType, Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllInstances.UnregisterObserverINotificationObserverTypeObjectObject">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType, Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.AllowNotificationsType">
            <summary>设置 NotificationCenter.AllowNotifications(Type type) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.Constructor">
            <summary>设置 NotificationCenter.NotificationCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.DefaultCenterGet">
            <summary>设置 NotificationCenter.get_DefaultCenter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.DenyNotificationsType">
            <summary>设置 NotificationCenter.DenyNotifications(Type type) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.IsDeniedNotification">
            <summary>设置 NotificationCenter.IsDenied(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.ProcessNotifications">
            <summary>设置 NotificationCenter.ProcessNotifications() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.RegisterObserverINotificationObserver">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.RegisterObserverINotificationObserverNotificationFilterCredentials">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.RegisterObserverINotificationObserverType">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.RegisterObserverINotificationObserverTypeObject">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType, Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.RegisterObserverINotificationObserverTypeObjectObject">
            <summary>设置 NotificationCenter.RegisterObserver(INotificationObserver observer, Type notificationType, Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.SendNotification">
            <summary>设置 NotificationCenter.Send(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.UnregisterObserverINotificationObserver">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.UnregisterObserverINotificationObserverType">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.UnregisterObserverINotificationObserverTypeObject">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType, Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenter.UnregisterObserverINotificationObserverTypeObjectObject">
            <summary>设置 NotificationCenter.UnregisterObserver(INotificationObserver observer, Type notificationType, Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger">
            <summary>DevExpress.Charts.NotificationCenter.NotificationCenterLogger 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.#ctor(DevExpress.Charts.NotificationCenter.NotificationCenterLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.CompleteProcessing">
            <summary>设置 NotificationCenterLogger.CompleteProcessing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.DumpLog">
            <summary>设置 NotificationCenterLogger.DumpLog() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.FormatNotificationNotification">
            <summary>设置 NotificationCenterLogger.FormatNotification(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.FormatObserversListOfINotificationObserver">
            <summary>设置 NotificationCenterLogger.FormatObservers(List`1&lt;INotificationObserver&gt; observers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.LogDeniedNotification">
            <summary>设置 NotificationCenterLogger.LogDenied(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.LogEnqueuedNotification">
            <summary>设置 NotificationCenterLogger.LogEnqueued(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.AllInstances.LogProcessingNotificationListOfINotificationObserver">
            <summary>设置 NotificationCenterLogger.LogProcessing(Notification notification, List`1&lt;INotificationObserver&gt; observers) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.CompleteProcessing">
            <summary>设置 NotificationCenterLogger.CompleteProcessing() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.ConstructorString">
            <summary>设置 NotificationCenterLogger.NotificationCenterLogger(String file) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.DumpLog">
            <summary>设置 NotificationCenterLogger.DumpLog() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.FormatNotificationNotification">
            <summary>设置 NotificationCenterLogger.FormatNotification(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.FormatObserversListOfINotificationObserver">
            <summary>设置 NotificationCenterLogger.FormatObservers(List`1&lt;INotificationObserver&gt; observers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.LogDeniedNotification">
            <summary>设置 NotificationCenterLogger.LogDenied(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.LogEnqueuedNotification">
            <summary>设置 NotificationCenterLogger.LogEnqueued(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.LogProcessingNotificationListOfINotificationObserver">
            <summary>设置 NotificationCenterLogger.LogProcessing(Notification notification, List`1&lt;INotificationObserver&gt; observers) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.ShimNotificationCenterLogger.LoggerToCNotificationLogTxtGet">
            <summary>设置 NotificationCenterLogger.get_LoggerToCNotificationLogTxt() 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.StubINotificationObserver">
            <summary>DevExpress.Charts.NotificationCenter.INotificationObserver 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubINotificationObserver.#ctor">
            <summary>初始化 type StubINotificationObserver 的新实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubINotificationObserver.DevExpress#Charts#NotificationCenter#INotificationObserver#Notify(DevExpress.Charts.NotificationCenter.Notification)">
            <summary>设置 INotificationObserver.Notify(Notification notification) 的 存根</summary>
        </member>
        <member name="F:DevExpress.Charts.NotificationCenter.Fakes.StubINotificationObserver.NotifyNotification">
            <summary>设置 INotificationObserver.Notify(Notification notification) 的 stub</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.StubNotification">
            <summary>DevExpress.Charts.NotificationCenter.Notification 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotification.#ctor(System.Object,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotification.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotification.InitializeStub">
            <summary>初始化 type StubNotification 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotification.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotification.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter">
            <summary>DevExpress.Charts.NotificationCenter.NotificationCenter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter.InitializeStub">
            <summary>初始化 type StubNotificationCenter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger">
            <summary>DevExpress.Charts.NotificationCenter.NotificationCenterLogger 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger.InitializeStub">
            <summary>初始化 type StubNotificationCenterLogger 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Fakes.StubNotificationCenterLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials">
            <summary>DevExpress.Charts.NotificationCenter.Native.NotificationFilterCredentials 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.#ctor(DevExpress.Charts.NotificationCenter.Native.NotificationFilterCredentials)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.EqualsObject">
            <summary>设置 NotificationFilterCredentials.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.GetHashCode01">
            <summary>设置 NotificationFilterCredentials.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.IdentifierGet">
            <summary>设置 NotificationFilterCredentials.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.LevelGet">
            <summary>设置 NotificationFilterCredentials.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.LevelValueGet">
            <summary>设置 NotificationFilterCredentials.get_LevelValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.NotficationTypeGet">
            <summary>设置 NotificationFilterCredentials.get_NotficationType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.SenderGet">
            <summary>设置 NotificationFilterCredentials.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.SetLevel">
            <summary>设置 NotificationFilterCredentials.SetLevel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.AllInstances.ShiftToLevelNotificationFilterLevel">
            <summary>设置 NotificationFilterCredentials.ShiftToLevel(NotificationFilterLevel level) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.Constructor">
            <summary>设置 NotificationFilterCredentials.NotificationFilterCredentials() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.ConstructorNotification">
            <summary>设置 NotificationFilterCredentials.NotificationFilterCredentials(Notification notification) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.ConstructorType">
            <summary>设置 NotificationFilterCredentials.NotificationFilterCredentials(Type notificationType) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.ConstructorTypeObject">
            <summary>设置 NotificationFilterCredentials.NotificationFilterCredentials(Type notificationType, Object sender) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.ConstructorTypeObjectObject">
            <summary>设置 NotificationFilterCredentials.NotificationFilterCredentials(Type notificationType, Object sender, Object identifier) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.EqualityOpNotificationFilterCredentialsNotificationFilterCredentials">
            <summary>设置 NotificationFilterCredentials.op_Equality(NotificationFilterCredentials a, NotificationFilterCredentials b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.EqualsObject">
            <summary>设置 NotificationFilterCredentials.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.GetHashCode">
            <summary>设置 NotificationFilterCredentials.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.IdentifierGet">
            <summary>设置 NotificationFilterCredentials.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.InequalityOpNotificationFilterCredentialsNotificationFilterCredentials">
            <summary>设置 NotificationFilterCredentials.op_Inequality(NotificationFilterCredentials a, NotificationFilterCredentials b) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.LevelGet">
            <summary>设置 NotificationFilterCredentials.get_Level() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.LevelValueGet">
            <summary>设置 NotificationFilterCredentials.get_LevelValue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.NotficationTypeGet">
            <summary>设置 NotificationFilterCredentials.get_NotficationType() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.SenderGet">
            <summary>设置 NotificationFilterCredentials.get_Sender() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.SetLevel">
            <summary>设置 NotificationFilterCredentials.SetLevel() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationFilterCredentials.ShiftToLevelNotificationFilterLevel">
            <summary>设置 NotificationFilterCredentials.ShiftToLevel(NotificationFilterLevel level) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue">
            <summary>DevExpress.Charts.NotificationCenter.Native.NotificationQueue 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.#ctor(DevExpress.Charts.NotificationCenter.Native.NotificationQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.AllInstances.CountGet">
            <summary>设置 NotificationQueue.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.AllInstances.Dequeue">
            <summary>设置 NotificationQueue.Dequeue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.AllInstances.EnqueueNotification">
            <summary>设置 NotificationQueue.Enqueue(Notification notification) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.Constructor">
            <summary>设置 NotificationQueue.NotificationQueue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.CountGet">
            <summary>设置 NotificationQueue.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.Dequeue">
            <summary>设置 NotificationQueue.Dequeue() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimNotificationQueue.EnqueueNotification">
            <summary>设置 NotificationQueue.Enqueue(Notification notification) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter">
            <summary>DevExpress.Charts.NotificationCenter.Native.ObserverFilter 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.#ctor(DevExpress.Charts.NotificationCenter.Native.ObserverFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.AllInstances.FindObserversNotificationFilterCredentials">
            <summary>设置 ObserverFilter.FindObservers(NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.AllInstances.GetObserversCount">
            <summary>设置 ObserverFilter.GetObserversCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.AllInstances.RegisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverFilter.Register(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.AllInstances.UnregisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverFilter.Unregister(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.Constructor">
            <summary>设置 ObserverFilter.ObserverFilter() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.FindObserversNotificationFilterCredentials">
            <summary>设置 ObserverFilter.FindObservers(NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.GetObserversCount">
            <summary>设置 ObserverFilter.GetObserversCount() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.RegisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverFilter.Register(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverFilter.UnregisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverFilter.Unregister(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager">
            <summary>DevExpress.Charts.NotificationCenter.Native.ObserverManager 的填充码类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.#ctor(DevExpress.Charts.NotificationCenter.Native.ObserverManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances.GetCountNotificationFilterCredentials">
            <summary>设置 ObserverManager.GetCount(NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances.GetCountNotificationFilterLevel">
            <summary>设置 ObserverManager.GetCount(NotificationFilterLevel level) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances.RegisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverManager.Register(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances.SelectObserverListOfINotificationObserverNotificationFilterCredentials">
            <summary>设置 ObserverManager.SelectObserver(List`1&lt;INotificationObserver&gt; observersBuffer, NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.AllInstances.UnregisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverManager.Unregister(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.Constructor">
            <summary>设置 ObserverManager.ObserverManager() 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.GetCountNotificationFilterCredentials">
            <summary>设置 ObserverManager.GetCount(NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.GetCountNotificationFilterLevel">
            <summary>设置 ObserverManager.GetCount(NotificationFilterLevel level) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.RegisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverManager.Register(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.SelectObserverListOfINotificationObserverNotificationFilterCredentials">
            <summary>设置 ObserverManager.SelectObserver(List`1&lt;INotificationObserver&gt; observersBuffer, NotificationFilterCredentials credentials) 的 填充码</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.ShimObserverManager.UnregisterNotificationFilterCredentialsINotificationObserver">
            <summary>设置 ObserverManager.Unregister(NotificationFilterCredentials credentials, INotificationObserver observer) 的 填充码</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue">
            <summary>DevExpress.Charts.NotificationCenter.Native.NotificationQueue 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue.InitializeStub">
            <summary>初始化 type StubNotificationQueue 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubNotificationQueue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter">
            <summary>DevExpress.Charts.NotificationCenter.Native.ObserverFilter 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter.InitializeStub">
            <summary>初始化 type StubObserverFilter 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager">
            <summary>DevExpress.Charts.NotificationCenter.Native.ObserverManager 的存根类型</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager.InitializeStub">
            <summary>初始化 type StubObserverManager 的新实例</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DevExpress.Charts.NotificationCenter.Native.Fakes.StubObserverManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.DevExpressChartsv152CoreDelegates">
            <summary>包含用于 DevExpress.Charts.v15.2.Core 的存根和填充码的自定义委托</summary>
        </member>
    </members>
</doc>
